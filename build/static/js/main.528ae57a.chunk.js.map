{"version":3,"sources":["modules/baseComponent.js","managers/history.js","utility/index.js","modules/column-cards/columnCardsComponents.js","constants/index.js","managers/httpService.js","services/columns.js","modules/column-cards/index.js","modules/columns/footer.js","modules/columns/coulumnsComponents.js","modules/common/drawer.js","modules/columns/credits.js","modules/common/navbar.js","modules/common/backdrop.js","modules/common/index.js","modules/add-info/addInfoComponent.js","modules/mobile-view/header.js","modules/mobile-view/select-category/selectCategoryComponent.js","modules/mobile-view/select-category/index.js","modules/columns/index.js","modules/add-info/index.js","modules/mobile-view/select-states/selectStates.js","modules/mobile-view/select-states/index.js","modules/mainComponent.js","modules/mobile-view/leads/lead.js","modules/mobile-view/leads/index.js","routes.js","reducers/user.js","reducers/index.js","store.js","serviceWorker.js","index.js"],"names":["BaseComponent","props","Component","history","createBrowserHistory","toast","ToastService","new","place","duration","maxCount","moment","require","utility","Cookies","getHeader","apiFailureToast","message","error","apiSuccessToast","msg","success","getAddedByObject","propsOfComponent","user","userDetails","privateKey","publicKey","email","wercPlaceID","photo","designation","department","name","firstName","lastName","company","_id","getCompanyObject","generateGUID","nav","window","navigator","screen","guid","mimeTypes","length","userAgent","replace","plugins","height","width","pixelDepth","basicAlert","getActivityDateEpochRange","activityDate","currentDate","Date","setHours","day","start","startDayEpochOfCurrentWeek","startOf","unix","startDayEpochOfCurrentMonth","startDayEpochOfCurrentQuarter","startDayEpochOfCurrentYear","endDayEpochOfCurrentWeek","endOf","endDayEpochOfCurrentMonth","endDayEpochOfCurrentQuarter","endDayEpochOfCurrentYear","getTime","end","setDate","getDate","setMonth","getMonth","console","log","setFullYear","getFullYear","getMiniAwardNominationModel","nomination","getAddress","addressObj","Object","keys","addressLine1","poBoxNumber","addressLine2","city","state","zipCode","country","decodeBase64","s","i","c","x","a","e","b","l","r","w","String","fromCharCode","L","charAt","validationAlert","type","swal","title","icon","isNumber","n","isNaN","parseFloat","isFinite","trackEvent","event","eventData","navigateToPath","path","push","toggleDropDown","dropdownID","validateName","test","validateEmail","isEmpty","string","trim","isMenuActive","location","pathname","includes","isPasswordValid","password","getSignedUrl","fileName","aws","config","update","accessKeyId","process","REACT_APP_AWS_ACCESS_KEY","secretAccessKey","REACT_APP_AWS_SECRET_KEY","region","REACT_APP_AWS_S3_BUCKET_REGION","s3","S3","params","Bucket","REACT_APP_AWS_S3_BUCKET_NAME","Key","Expires","uploadFileToS3","fileObject","mimeType","isPublic","Body","ContentType","ACL","Promise","resolve","reject","upload","err","uploadData","showUnderDevelopment","epochToDate","getDateAfterOneYear","timeStamp","Math","floor","dateObject","add","valueOf","generateCompanyLogoKey","toString","randomAlphaNumericString","charset","random","generateRandomAlphaNumericString","dateCompare","timeStampFrom","timeStampTo","isCompanyBalanceLow","tokenEconomy","remainingMonth","endDate","PERCBalance","monthlyPERCAllocation","getMiniUserModel","getMiniRecognitionUserModel","recognizeUser","clapWeight","getTimeFromNow","fromNow","epocToPrettyTime","seconds","nowTimeMilliseconds","date","format","interval","epocToPrettyTimeForFuture","getLeaderBoardAggregatedQuery","skip","limit","matchObj","queryObj","feedType","id","groupObj","getTopSenderAggregatedQuery","getTimeDifference","difference","hh","mm","dateFormat","hours","getHours","timeDifference","getYearsList","addedOn","durationList","getTimestampFromDate","year","month","days","extractDate","getType","secondsToTime","milliseconds","minutes","getDateFormat","changeDateFormat","newFormat","currentFormat","getAggregatedPercWercQueryObject","toSentenceCase","stringToChange","toLowerCase","toUpperCase","my_date","toLocaleDateString","date_parts","split","timeFormat","useStyles","makeStyles","theme","popover","pointerEvents","maxWidth","border","background","ColumnCardComponent","Dialog","open","isShowSharePopup","onClose","handlePopoverClose","aria-labelledby","aria-describedby","className","onClick","style","cursor","src","selectedItem","attachments","media_keys","uniqueContact","map","data","href","options","tweetId","channelID","channelCreatedOn","description","incrementUpVote","sendUpVoteRequest","paddingRight","upVoteCount","incrementDownVote","sendDownVoteRequest","downVoteCount","FacebookShareButton","url","quote","FacebookIcon","size","round","WhatsappShareButton","WhatsappIcon","TwitterShareButton","TwitterIcon","DialogBox","responseData","ite","index","Card","key","CardContent","Typography","variant","handlePopoverOpen","district","originalResponseData","httpConstants","POST","PUT","GET","DELETE","APPLICATION_JSON","MULTIPART_FORM_DATA","APPLICATION_FORM_URLENCODED","IMAGE_PNG","stateNamesConstant","andhra","arunachal","assam","bihar","chandigarh","chhattisgarh","dadra","daman","delhi","goa","gujarat","haryana","himachal","jammu","jharkhand","karnataka","kerala","lakshadweep","madhya","maharashtra","manipur","meghalaya","mizoram","nagaland","odisha","puducherry","punjab","rajasthan","sikkim","tamil","telangana","tripura","uttarakhand","uttar","bengal","httpService","method","headers","requestOptions","keepalive","body","JSON","stringify","fetch","then","response","ok","text","responseText","parse","responseCode","statusText","catch","states","toadd","upVote","downVote","getCategories","req","getFilteredData","category","getStates","ColumnCard","Array","isArray","setState","showSharePopup","item","getUniqueContact","popoverText","popoverAnchor","phoneNumber","nameError","this","Footer","ColumnComponent","useState","list","col","span","fontSize","label","handleColumnClose","filter","row","filterKey","filterKey2","hide","display","drawer","flexShrink","drawerPaper","top","DrawerComponent","classes","useTheme","Drawer","anchor","show","paper","List","ListItem","button","ListItemText","primary","handleNavigate","Credits","setShow","Select","Option","right","position","zIndex","overflowY","overflowX","borderRadius","boxShadow","fontWeight","marginLeft","marginTop","marginBottom","NavbarComponent","isHeader","showCredits","setshowCredits","backgroundColor","marginRight","alignItems","justifyContent","columnGap","alt","drawerToggleClickHandler","Autocomplete","countryStateList","getOptionLabel","option","onInputChange","value","handleChangeForCountryState","renderInput","TextField","onRefresh","color","close","HeaderComponent","drawerOpen","backdropClickHandler","AddInfoComponent","isInfo","SelectCategoryComponent","onBackToSelectState","selectedState","categoryList","onSelectCategory","Category","getAllCategories","Coloumn","responseByIndex","stateValue","responseByLocation","keyToSave","forEach","obj","sort","selectedCountryState","target","document","getElementById","blur","array","indexOf","splice","isAbout","selectedTime","param","AddInfo","SelectStates","placeholder","onChange","handleSearchLocationInput","onSelectLocation","allLocations","locations","isStateSelected","route","root","navbar","borderColor","mx10","dropdown","Main","disableGutters","LeadsComponent","backToSelectCategory","fill","selectedCategory","allLeads","getAllLeads","request","Routes","muiTheme","getMuiTheme","exact","component","States","Leads","from","to","connect","initialState","isLoggedIn","loginFailure","deviceId","sessionToken","loading","isForgotPasswordSuccess","combineReducers","action","loggerMiddleware","createLogger","createStore","rootReducer","applyMiddleware","thunkMiddleware","Boolean","hostname","match","App","store","ReactDOM","render","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.528ae57a.chunk.js","sourcesContent":["//base class\r\nimport React, {Component} from \"react\";\r\n\r\nexport default class BaseComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n}","/**\r\n * Created by Ayush Kulshrestha on 18/09/2019.\r\n */\r\n\r\nimport { createBrowserHistory } from 'history';\r\n\r\n/**\r\n * The history library lets you easily manage session history anywhere JavaScript runs.\r\n * history abstracts away the differences in various environments and provides a minimal API\r\n * that lets you manage the history stack, navigate, and persist state between sessions.\r\n */\r\n\r\n\r\nexport const history = createBrowserHistory();\r\n","import \"react-s-alert/dist/s-alert-default.css\";\r\nimport {history} from \"../managers/history\";\r\nimport swal from \"sweetalert\";\r\nimport Cookies from \"universal-cookie\";\r\nimport React from \"react\";\r\nimport ToastService from 'react-material-toast';\r\nimport aws from \"aws-sdk\";\r\n\r\nconst toast = ToastService.new({\r\n    place: 'topRight',\r\n    duration: 1,\r\n    maxCount: 2\r\n});\r\nlet moment = require('moment');\r\nconst cookies = new Cookies();\r\nconst utility = {\r\n    getHeader,\r\n    apiFailureToast,\r\n    apiSuccessToast,\r\n    getAddedByObject,\r\n    getCompanyObject,\r\n    generateGUID,\r\n    basicAlert,\r\n    getActivityDateEpochRange,\r\n    getMiniAwardNominationModel,\r\n    getAddress,\r\n    decodeBase64,\r\n    validationAlert,\r\n    isNumber,\r\n    trackEvent,\r\n    navigateToPath,\r\n    toggleDropDown,\r\n    validateName,\r\n    validateEmail,\r\n    isEmpty,\r\n    isMenuActive,\r\n    isPasswordValid,\r\n    getSignedUrl,\r\n    uploadFileToS3,\r\n    showUnderDevelopment,\r\n    epochToDate,\r\n    getDateAfterOneYear,\r\n    generateCompanyLogoKey,\r\n    dateCompare,\r\n    isCompanyBalanceLow,\r\n    getMiniUserModel,\r\n    getMiniRecognitionUserModel,\r\n    getTimeFromNow,\r\n    epocToPrettyTime,\r\n    epocToPrettyTimeForFuture,\r\n    getLeaderBoardAggregatedQuery,\r\n    getTopSenderAggregatedQuery,\r\n    getTimeDifference,\r\n    getYearsList,\r\n    getTimestampFromDate,\r\n    extractDate,\r\n    secondsToTime,\r\n    getDateFormat,\r\n    changeDateFormat,\r\n    getAggregatedPercWercQueryObject,\r\n    toSentenceCase\r\n};\r\nexport default utility;\r\n\r\n\r\nexport const dispatchAction = (type, data) => {\r\n    return dispatch => dispatch({type, data});\r\n};\r\n\r\nfunction trackEvent(event, eventData) {\r\n    // try {\r\n    //     if (!eventData)\r\n    //         mixpanel.track(event);\r\n    //     else\r\n    //         mixpanel.track(event, eventData);\r\n    // } catch (err) {\r\n    //     console.log(err)\r\n    // }\r\n}\r\n\r\nfunction getDateFormat() {\r\n    var my_date = new Date(2019, 0, 31);\r\n    console.log(my_date.toLocaleDateString());\r\n    // Initialize variables\r\n    var separator = \"\";\r\n    var first = \"\";\r\n    var second = \"\";\r\n    var third = \"\";\r\n    var date_parts = [];\r\n\r\n    // get separator : \"-\", \"/\" or \" \", format based on toLocaleDateString function\r\n    if (my_date.toLocaleDateString().split(\"-\").length == 3) {\r\n        separator = \" - \";\r\n        date_parts = my_date.toLocaleDateString().split(\"-\");\r\n    }\r\n    if (my_date.toLocaleDateString().split(\"/\").length == 3) {\r\n        separator = \" / \";\r\n        date_parts = my_date.toLocaleDateString().split(\"/\");\r\n    }\r\n    if (my_date.toLocaleDateString().split(\" \").length == 3) {\r\n        separator = \" \";\r\n        date_parts = my_date.toLocaleDateString().split(\" \");\r\n    }\r\n\r\n    // get first part\r\n    if (date_parts[0] == 2019) {\r\n        first = \"YYYY\";\r\n    } else if (date_parts[0] == 31) {\r\n        first = \"DD\";\r\n    } else {\r\n        if (date_parts[0].length <= 2) {\r\n            first = \"MM\";\r\n        } else {\r\n            first = \"MMM\";\r\n        }\r\n    }\r\n\r\n    // get second part\r\n    if (date_parts[1] == 2019) {\r\n        second = \"YYYY\";\r\n    } else if (date_parts[1] == 31) {\r\n        second = \"DD\";\r\n    } else {\r\n        if (date_parts[1].length <= 2) {\r\n            second = \"MM\";\r\n        } else {\r\n            second = \"MMM\";\r\n        }\r\n    }\r\n\r\n    // get third part\r\n    if (date_parts[2] == 2019) {\r\n        third = \"YYYY\";\r\n    } else if (date_parts[2] == 31) {\r\n        third = \"DD\";\r\n    } else {\r\n        if (date_parts[2].length <= 2) {\r\n            third = \"MM\";\r\n        } else {\r\n            third = \"MMM\";\r\n        }\r\n    }\r\n    // assembly\r\n    var format = first + \"/\" + second + \"/\" + third;\r\n    return format;\r\n}\r\n\r\n\r\nfunction getHeader() {\r\n    // return {\r\n    //     'session-token': sessionManager.getDataFromCookies(genericConstants.COOKIES_KEY.SESSION_TOKEN),\r\n    //     'device-id': sessionManager.getDataFromCookies(genericConstants.COOKIES_KEY.DEVICE_ID),\r\n    //     'Content-Type': httpConstants.CONTENT_TYPE.APPLICATION_JSON\r\n    // };\r\n}\r\n\r\nfunction isNumber(n) {\r\n    return !isNaN(parseFloat(n)) && isFinite(n);\r\n}\r\n\r\n//TODO: update apiConstant.API_FAILURE\r\nfunction apiFailureToast(message) {\r\n    toast.error(message ? message : \"apiConstant.API_FAILURE\");\r\n}\r\n\r\nfunction apiSuccessToast(msg) {\r\n    toast.success(msg ? msg : \"apiConstant.API_SUCCESS\");\r\n}\r\n\r\nfunction generateGUID() {\r\n    var nav = window.navigator;\r\n    var screen = window.screen;\r\n    var guid = nav.mimeTypes.length;\r\n    guid += nav.userAgent.replace(/\\D+/g, '');\r\n    guid += nav.plugins.length;\r\n    guid += screen.height || '';\r\n    guid += screen.width || '';\r\n    guid += screen.pixelDepth || '';\r\n    return guid;\r\n}\r\n\r\nfunction basicAlert(message) {\r\n    swal({\r\n        title: message,\r\n        icon: '/images/alert-icon.png',\r\n    })\r\n}\r\n\r\nfunction validationAlert(message, type = 'info') {\r\n    swal({\r\n        title: message,\r\n        icon: type\r\n    })\r\n}\r\n\r\nfunction getTimeDifference(timeStampTo) {\r\n    let minFive = 300000;\r\n    let oneDay = 86400000;\r\n    let difference = \"\";\r\n    let am = \" AM\";\r\n    let pm = \" PM\";\r\n    let hh = epochToDate(timeStampTo, 'hh');\r\n    let mm = epochToDate(timeStampTo, 'mm');\r\n    let dateFormat = epochToDate(timeStampTo, 'DD MMM YYYY');\r\n    let hours = new Date(timeStampTo).getHours();\r\n    let timeDifference = new Date().getTime() - timeStampTo;\r\n    if (timeDifference < oneDay) {\r\n        if (timeDifference < minFive) {\r\n            difference = \"Just Now\";\r\n        } else {\r\n            if (hours < 12)\r\n                difference = \"Today at \" + hh + \":\" + mm + am;\r\n            else\r\n                difference = \"Today at \" + hh + \":\" + mm + pm;\r\n        }\r\n    } else {\r\n        if (hours < 12)\r\n            difference = dateFormat + \", \" + hh + ':' + mm + am;\r\n        else\r\n            difference = dateFormat + \", \" + hh + ':' + mm + pm;\r\n    }\r\n    return difference;\r\n}\r\n\r\nfunction epochToDate(timeStamp, timeFormat) {\r\n    timeStamp = Math.floor(timeStamp);  //to convert to integer if seconds is String.\r\n    let dateObject = new Date(timeStamp);\r\n    return moment(dateObject).format(timeFormat)//DD MMM YYYY\r\n}\r\n\r\n\r\nfunction getTimeFromNow(timeStamp) {\r\n    return moment(timeStamp, \"YYYYMMDD\").fromNow();\r\n}\r\n\r\nfunction dateCompare(timeStampFrom, timeStampTo) {\r\n    let diffTime = (timeStampFrom * 1000 - timeStampTo);\r\n    let diffDays = (diffTime / (1000 * 60 * 60 * 24));\r\n    return diffDays;\r\n}\r\n\r\nfunction getDateAfterOneYear(timeStamp) {\r\n    timeStamp = Math.floor(timeStamp);  //to convert to integer if seconds is String.\r\n    let dateObject = new Date(timeStamp);\r\n    return moment(dateObject).add(1, 'years').valueOf();\r\n}\r\n\r\nfunction getActivityDateEpochRange(activityDate) {\r\n    let currentDate = new Date();\r\n    currentDate.setHours(0, 0, 0, 0);\r\n    let startDayEpochOfCurrentWeek = moment().startOf('isoweek').unix() * 1000;\r\n    let startDayEpochOfCurrentMonth = moment().startOf('month').unix() * 1000;\r\n    let startDayEpochOfCurrentQuarter = moment().startOf('quarter').unix() * 1000;\r\n    let startDayEpochOfCurrentYear = moment().startOf('year').unix() * 1000;\r\n    let endDayEpochOfCurrentWeek = moment().endOf('isoweek').unix() * 1000;\r\n    let endDayEpochOfCurrentMonth = moment().endOf('month').unix() * 1000;\r\n    let endDayEpochOfCurrentQuarter = moment().endOf('quarter').unix() * 1000;\r\n    let endDayEpochOfCurrentYear = moment().endOf('year').unix() * 1000;\r\n    let day, start;\r\n    switch (activityDate) {\r\n        case \"Today\":\r\n            return {start: currentDate.getTime(), end: new Date().getTime()};\r\n        case \"Yesterday\":\r\n            day = new Date(currentDate);\r\n            day.setDate(currentDate.getDate() - 1);\r\n            return {start: day.getTime(), end: currentDate.getTime()};\r\n        case \"Last seven days\":\r\n            day = new Date(currentDate);\r\n            day.setDate(currentDate.getDate() - 7);\r\n            return {start: day.getTime(), end: currentDate.getTime()};\r\n        case \"Last fourteen days\":\r\n            day = new Date(currentDate);\r\n            day.setDate(currentDate.getDate() - 14);\r\n            return {start: day.getTime(), end: currentDate.getTime()};\r\n        case \"Last twenty one days\":\r\n            day = new Date(currentDate);\r\n            day.setDate(currentDate.getDate() - 21);\r\n            return {start: day.getTime(), end: currentDate.getTime()};\r\n        case \"Last Week\":\r\n            start = new Date(startDayEpochOfCurrentWeek);\r\n            start.setDate(start.getDate() - 7);\r\n            return {start: start.getTime(), end: startDayEpochOfCurrentWeek};\r\n        case \"Last two weeks\":\r\n            start = new Date(startDayEpochOfCurrentWeek);\r\n            start.setDate(start.getDate() - 14);\r\n            return {start: start.getTime(), end: startDayEpochOfCurrentWeek};\r\n        case \"Last three weeks\":\r\n            start = new Date(startDayEpochOfCurrentWeek);\r\n            start.setDate(start.getDate() - 21);\r\n            return {start: start.getTime(), end: startDayEpochOfCurrentWeek};\r\n        case \"Last Month\":\r\n            start = new Date(startDayEpochOfCurrentMonth);\r\n            start.setMonth(start.getMonth() - 1);\r\n            return {start: start.getTime(), end: startDayEpochOfCurrentMonth};\r\n        case \"Last Quarter\":\r\n            start = new Date(startDayEpochOfCurrentQuarter);\r\n            start.setMonth(start.getMonth() - 3);\r\n            return {start: start.getTime(), end: startDayEpochOfCurrentQuarter};\r\n        case \"Last Year\":\r\n            console.log(startDayEpochOfCurrentYear)\r\n            start = new Date(startDayEpochOfCurrentYear);\r\n            start.setFullYear(start.getFullYear() - 1);\r\n            return {start: start.getTime(), end: startDayEpochOfCurrentYear};\r\n        case \"This Week\":\r\n            return {start: startDayEpochOfCurrentWeek, end: endDayEpochOfCurrentWeek};\r\n        case \"This Quarter\":\r\n            return {start: startDayEpochOfCurrentQuarter, end: endDayEpochOfCurrentQuarter};\r\n        case \"This Year\":\r\n            return {start: startDayEpochOfCurrentYear, end: endDayEpochOfCurrentYear};\r\n        case \"Current Month\":\r\n            return {start: startDayEpochOfCurrentMonth, end: endDayEpochOfCurrentMonth};\r\n        default:\r\n            return {start: currentDate.getTime(), end: new Date().getTime()};\r\n    }\r\n\r\n}\r\n\r\nfunction getAddress(addressObj) {\r\n    if (!addressObj || !Object.keys(addressObj).length || !(addressObj.addressLine1 || addressObj.poBoxNumber))\r\n        return \"\";\r\n    return (\r\n        <span>\r\n            {addressObj.addressLine1 ? addressObj.addressLine1 : `PO Box ${addressObj.poBoxNumber}`}<br/>\r\n            {addressObj.addressLine2 ? <span>{addressObj.addressLine2}<br/></span> : ''}\r\n            {addressObj.city}, {addressObj.state} {addressObj.zipCode}<br/>\r\n            {addressObj.country}\r\n        </span>\r\n    )\r\n}\r\n\r\nfunction decodeBase64(s) {\r\n    let e = {}, i, b = 0, c, x, l = 0, a, r = '', w = String.fromCharCode, L = s.length;\r\n    let A = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n    for (i = 0; i < 64; i++) {\r\n        e[A.charAt(i)] = i;\r\n    }\r\n    for (x = 0; x < L; x++) {\r\n        c = e[s.charAt(x)];\r\n        b = (b << 6) + c;\r\n        l += 6;\r\n        while (l >= 8) {\r\n            ((a = (b >>> (l -= 8)) & 0xff) || (x < (L - 2))) && (r += w(a));\r\n        }\r\n    }\r\n    return r;\r\n}\r\n\r\nfunction navigateToPath(path) {\r\n    history.push(path)\r\n}\r\n\r\nfunction toggleDropDown(dropdownID) {\r\n    // $(\"#\" + dropdownID).toggle(\"show\");\r\n}\r\n\r\nfunction validateName(name) {\r\n    let reg = /[A-Z][a-zA-Z]*/;\r\n    return reg.test(name)\r\n}\r\n\r\nfunction validateEmail(email) {\r\n    let reg = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return reg.test(email);\r\n}\r\n\r\nfunction isPasswordValid(password) {\r\n    let reg = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/;\r\n    return reg.test(password);\r\n}\r\n\r\nfunction isEmpty(string) {\r\n    return !string || string.trim().length === 0;\r\n}\r\n\r\nfunction isMenuActive(path) {\r\n    return window.location.pathname.includes(path);\r\n}\r\n\r\nfunction getAddedByObject(propsOfComponent) {\r\n    if (!propsOfComponent || !propsOfComponent.user || !propsOfComponent.user.userDetails)\r\n        return null;\r\n    let user = propsOfComponent.user.userDetails;\r\n    return {\r\n        privateKey: user.privateKey,\r\n        publicKey: user.publicKey,\r\n        email: user.email,\r\n        wercPlaceID: user.wercPlaceID,\r\n        photo: user.photo ? user.photo : '',\r\n        designation: user.designation ? user.designation : {},\r\n        department: user.department ? user.department : {},\r\n        name: (user.firstName || user.lastName) ? (user.firstName + \" \" + user.lastName) : (user.company && user.company.name ? user.company.name : \"\"),\r\n        _id: user._id\r\n    };\r\n}\r\n\r\nfunction getMiniUserModel(user) {\r\n    if (!user)\r\n        return null;\r\n    return {\r\n        privateKey: user.privateKey,\r\n        publicKey: user.publicKey,\r\n        photo: user.photo ? user.photo : '',\r\n        email: user.email,\r\n        wercPlaceID: user.wercPlaceID,\r\n        designation: user.designation ? user.designation : {},\r\n        department: user.department ? user.department : {},\r\n        name: (user.firstName || user.lastName) ? (user.firstName + \" \" + user.lastName) : user.company.name,\r\n        _id: user._id\r\n    };\r\n}\r\n\r\nfunction getMiniRecognitionUserModel(recognizeUser) {\r\n    if (!recognizeUser)\r\n        return null;\r\n    return {\r\n        name: recognizeUser.name,\r\n        clapWeight: recognizeUser.clapWeight,\r\n        _id: recognizeUser._id\r\n    };\r\n}\r\n\r\n\r\nfunction getMiniAwardNominationModel(nomination) {\r\n    if (!nomination)\r\n        return null;\r\n    return {\r\n        name: nomination.name,\r\n        photo: nomination.photo,\r\n        _id: nomination._id\r\n    };\r\n}\r\n\r\n\r\nfunction generateRandomAlphaNumericString(length) {\r\n    var randomAlphaNumericString = \"\";\r\n    var charset = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n    for (var i = 0; i < length; i++)\r\n        randomAlphaNumericString += charset.charAt(Math.floor(Math.random() * charset.length));\r\n    return randomAlphaNumericString;\r\n}\r\n\r\nfunction generateCompanyLogoKey() {\r\n    var currentTimeStamp = (new Date().getTime()).toString();\r\n    return currentTimeStamp + \"_\" + generateRandomAlphaNumericString(13);\r\n}\r\n\r\nfunction uploadFileToS3(fileObject, fileName, mimeType, isPublic = false) {\r\n    let config = {\r\n        accessKeyId: process.env.REACT_APP_AWS_ACCESS_KEY,\r\n        secretAccessKey: process.env.REACT_APP_AWS_SECRET_KEY\r\n    }\r\n    aws.config.update(config);\r\n    console.log(\"config\", config);\r\n    console.log(\"fileObject\", fileObject);\r\n    const S3 = new aws.S3();\r\n    const params = {\r\n        Body: fileObject,\r\n        Bucket: process.env.REACT_APP_AWS_S3_BUCKET_NAME,\r\n        ContentType: mimeType,\r\n        Key: fileName\r\n    };\r\n    if (isPublic)\r\n        params.ACL = 'public-read';\r\n\r\n    return new Promise(function (resolve, reject) {\r\n        S3.upload(params, function (err, uploadData) {\r\n            if (err)\r\n                reject(err);\r\n            resolve(uploadData);\r\n        });\r\n    });\r\n}\r\n\r\nfunction getSignedUrl(fileName) {\r\n    if (!fileName)\r\n        return \"\";\r\n    aws.config.update({\r\n        accessKeyId: process.env.REACT_APP_AWS_ACCESS_KEY,\r\n        secretAccessKey: process.env.REACT_APP_AWS_SECRET_KEY\r\n    });\r\n    aws.config.region = process.env.REACT_APP_AWS_S3_BUCKET_REGION;\r\n    const s3 = new aws.S3();\r\n    const params = {\r\n        Bucket: process.env.REACT_APP_AWS_S3_BUCKET_NAME,\r\n        Key: fileName ? fileName : '',\r\n        Expires: 600000,\r\n    };\r\n    let signedUrl = s3.getSignedUrl('getObject', params);\r\n    return signedUrl;\r\n}\r\n\r\nfunction showUnderDevelopment() {\r\n    basicAlert(\"Under Development\")\r\n}\r\n\r\nfunction getCompanyObject(propsOfComponent) {\r\n    if (!propsOfComponent || !propsOfComponent.user || !propsOfComponent.user.userDetails || !propsOfComponent.user.userDetails.company)\r\n        return null;\r\n    return propsOfComponent.user.userDetails.company;\r\n}\r\n\r\nfunction isCompanyBalanceLow(company) {\r\n    if (!company || !company.tokenEconomy || !company.tokenEconomy) {\r\n        console.log('return false')\r\n        return false;\r\n    }\r\n    let remainingMonth = (new Date(company.tokenEconomy.endDate)).getMonth() - (new Date()).getMonth() +\r\n        (12 * ((new Date(company.tokenEconomy.endDate)).getFullYear() - (new Date()).getFullYear()));\r\n    if (company.tokenEconomy.PERCBalance < (company.tokenEconomy.monthlyPERCAllocation * remainingMonth))\r\n        return true;\r\n    return false;\r\n}\r\n\r\nfunction getYearsList(addedOn = new Date().getTime()) {\r\n    let durationList = [];\r\n    for (let i = new Date(addedOn).getFullYear(); i <= new Date().getFullYear(); i++) {\r\n        durationList.push(i)\r\n    }\r\n    return durationList;\r\n}\r\n\r\nfunction epocToPrettyTime(seconds) {\r\n    seconds = Math.floor(seconds);//to convert to integer if seconds is String.\r\n    var nowTimeMilliseconds = (new Date).getTime();\r\n    var date = new Date(seconds);\r\n    var dateObject = moment(date).format('DD MMMM YYYY');\r\n    //var dateObject = moment(date).format('ddd, MMM DD hh:mm A');\r\n    seconds = Math.floor((nowTimeMilliseconds / 1000) - (seconds / 1000));\r\n    var interval = Math.floor(seconds / 172800);\r\n    if (interval >= 1)\r\n        return dateObject;\r\n    //if (interval >= 1) return dateObject+\" \"+moment.tz(moment.tz.guess()).format('z');\r\n    interval = Math.floor(seconds / 86400);\r\n    if (interval >= 1)\r\n        return \"yesterday\";\r\n\r\n    interval = Math.floor(seconds / 3600);\r\n    if (interval >= 1) {\r\n        if (interval === 1)\r\n            return interval + \" hr ago\";\r\n        return interval + \" hrs ago\";\r\n    }\r\n    interval = Math.floor(seconds / 60);\r\n    if (interval >= 1) {\r\n        if (interval === 1)\r\n            return interval + \" minute ago\";\r\n        return interval + \" minutes ago\";\r\n    } else\r\n        return \"Just now\";\r\n}\r\n\r\nfunction epocToPrettyTimeForFuture(seconds) {\r\n    seconds = Math.floor(seconds);//to convert to integer if seconds is String.\r\n    var nowTimeMilliseconds = (new Date).getTime();\r\n    var date = new Date(seconds);\r\n    var dateObject = moment(date).format('DD MMMM YYYY');\r\n    //var dateObject = moment(date).format('ddd, MMM DD hh:mm A');\r\n    seconds = Math.floor((seconds / 1000) - (nowTimeMilliseconds / 1000));\r\n    var interval = Math.floor(seconds / 86400);\r\n    if (interval >= 1)\r\n        return interval + ' days';\r\n\r\n    interval = Math.floor(seconds / 3600);\r\n    if (interval >= 1) {\r\n        if (interval == 1)\r\n            return interval + \" hr\";\r\n        return interval + \" hrs\";\r\n    }\r\n    interval = Math.floor(seconds / 60);\r\n    if (interval >= 1) {\r\n        if (interval == 1)\r\n            return interval + \" minute\";\r\n        return interval + \" minutes\";\r\n    } else\r\n        return \"0 minute\";\r\n}\r\n\r\n\r\nfunction getLeaderBoardAggregatedQuery(propsOfComponent, skip = 0, limit = 0, matchObj = {}) {\r\n    if (!propsOfComponent || !propsOfComponent.user || !propsOfComponent.user.userDetails || !propsOfComponent.user.userDetails.company)\r\n        return null;\r\n    let queryObj = [];\r\n\r\n    //Match Object for the conditions-\r\n    let feedType = [];\r\n    feedType.push({'entityData.feedType': 'ADD_RECOGNITION'});\r\n    feedType.push({'entityData.feedType': 'ADD_NOMINATION'});\r\n    matchObj['$or'] = feedType;\r\n    matchObj['entityData.company.id'] = propsOfComponent.user.userDetails.company.id;\r\n\r\n    //addField Object for the conditions-\r\n    let addFieldObj = {\r\n        'recipient': {\r\n            '$arrayToObject': {\r\n                '$map': {\r\n                    'input': '$entityData.recipients',\r\n                    'as': 'recipients',\r\n                    'in': {'k': 'userDetails', 'v': '$$recipients'}\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    //Group object for grouping-\r\n    let groupObj = {};\r\n    groupObj._id = \"$entityData.recipients._id\";\r\n    groupObj.PERCBalance = {\"$sum\": \"$entityData.PERCValue\"};\r\n    groupObj.firstName = {\"$first\": \"$entityData.recipients.name\"};\r\n\r\n    queryObj.push({\"$match\": matchObj});\r\n    // queryObj.push({\"$addFields\": addFieldObj});\r\n    queryObj.push({\"$group\": groupObj});\r\n    queryObj.push({\"$sort\": {'PERCBalance': -1}});\r\n    queryObj.push({\"$limit\": limit});\r\n    queryObj.push({\"$skip\": skip});\r\n\r\n    return queryObj;\r\n}\r\n\r\nfunction getTopSenderAggregatedQuery(propsOfComponent, skip = 0, limit = 0, matchObj = {}) {\r\n    if (!propsOfComponent || !propsOfComponent.user || !propsOfComponent.user.userDetails || !propsOfComponent.user.userDetails.company)\r\n        return null;\r\n    let queryObj = [];\r\n\r\n    //Match Object for the conditions-\r\n    let feedType = [];\r\n    feedType.push({'entityData.feedType': 'ADD_RECOGNITION'});\r\n    feedType.push({'entityData.feedType': 'ADD_NOMINATION'});\r\n    matchObj['$or'] = feedType;\r\n    matchObj['entityData.company.id'] = propsOfComponent.user.userDetails.company.id;\r\n\r\n    //Group object for grouping-\r\n    let groupObj = {};\r\n    groupObj._id = \"$entityData.addedBy.email\";\r\n    groupObj.PERCBalance = {\"$sum\": \"$entityData.PERCValue\"};\r\n    groupObj.firstName = {\"$first\": \"$entityData.addedBy.name\"};\r\n\r\n    //Group object for grouping-\r\n    let sortObj = {};\r\n    sortObj._id = \"$recipient.userDetails.email\";\r\n\r\n    queryObj.push({\"$match\": matchObj});\r\n    queryObj.push({\"$group\": groupObj});\r\n\r\n    // queryObj.push({\"$sort\": {'PERCBalance':-1}});\r\n\r\n    queryObj.push({\"$limit\": limit});\r\n    queryObj.push({\"$skip\": skip});\r\n    queryObj.push({\"$sort\": {'PERCBalance': -1}});\r\n\r\n    return queryObj;\r\n}\r\n\r\nfunction secondsToTime(milliseconds) {\r\n    let date = new Date(milliseconds)\r\n    var duration = moment.duration(milliseconds, 'milliseconds');\r\n    return (duration.hours() + \":\" + duration.minutes() + \":\" + duration.seconds())\r\n    let dateObject = moment(date, 'hh:mm:ss').fromNow();\r\n    return dateObject\r\n\r\n    // let hours = Math.floor(secs / (60 * 60));\r\n    //\r\n    // let divisor_for_minutes = secs % (60 * 60);\r\n    // let minutes = Math.floor(divisor_for_minutes / 60);\r\n    //\r\n    // let divisor_for_seconds = divisor_for_minutes % 60;\r\n    // let seconds = Math.ceil(divisor_for_seconds);\r\n    //\r\n    // let obj = {\r\n    //     \"h\": hours,\r\n    //     \"m\": minutes,\r\n    //     \"s\": seconds\r\n    // };\r\n    // return obj;\r\n}\r\n\r\nfunction getTimestampFromDate(year, month, date = 0) {\r\n    let days = new Date(year, month, date).getDate();\r\n    return new Date(year + \"/\" + month + \"/\" + days).getTime();\r\n\r\n}\r\n\r\nfunction extractDate(date, getType) {\r\n    console.log(\"date\", typeof date, \"getType\", getType);\r\n    switch (getType) {\r\n        case \"DAY\":\r\n            return new Date(date.toString()).getDate();\r\n            break;\r\n        case \"MONTH\":\r\n            return new Date(date.toString()).getMonth() + 1;\r\n            break;\r\n        case \"YEAR\":\r\n            return new Date(date.toString()).getFullYear();\r\n            break;\r\n        default :\r\n            return date;\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction changeDateFormat(date, newFormat) {\r\n    let currentFormat = getDateFormat()\r\n    return moment(date, currentFormat).format(newFormat)\r\n}\r\n\r\nfunction toSentenceCase(stringToChange)\r\n{\r\n    return stringToChange.toLowerCase().replace(/(^\\s*\\w|[\\.\\!\\?]\\s*\\w)/g,function(c){return c.toUpperCase()});\r\n}\r\nfunction getAggregatedPercWercQueryObject(start, end, skip, id) {\r\n    console.log(start, end, skip, id);\r\n    return [\r\n        {\r\n            \"$match\": {\r\n                \"$and\": [\r\n                    {\r\n                        \"date\": {\r\n                            \"$gte\": start.toString()\r\n                        }\r\n                    },\r\n                    {\r\n                        \"date\": {\r\n                            \"$lte\": end.toString()\r\n                        }\r\n                    }\r\n                ],\r\n                \"companyId\": id.toString()\r\n            }\r\n\r\n        },\r\n        {\r\n            \"$skip\": skip\r\n        }\r\n    ];\r\n}\r\n","import React from 'react'\r\nimport './column-cards.css'\r\nimport 'antd/dist/antd.css';\r\nimport {Avatar, Card, CardContent, Typography} from '@material-ui/core';\r\nimport moment from 'moment'\r\nimport {Row, Column} from \"simple-flexbox\";\r\nimport utility from \"../../utility\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport { TwitterTweetEmbed} from 'react-twitter-embed';\r\n\r\nimport {\r\n    FacebookShareButton,\r\n    FacebookIcon,\r\n    LinkedinIcon,\r\n    WhatsappIcon,\r\n    TwitterIcon,\r\n    WhatsappShareButton,\r\n    TwitterShareButton,\r\n    LinkedinShareButton,\r\n    InstapaperShareButton,\r\n    InstapaperIcon\r\n} from 'react-share';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    popover: {\r\n        pointerEvents: 'none',\r\n        maxWidth: '400px',\r\n        border: \"none\",\r\n        background: \"white\"\r\n    }\r\n}));\r\n\r\nfunction ColumnCardComponent(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            {DialogBox(props)}\r\n            {\r\n                props.responseData.length > 0 ?\r\n                    props.responseData && props.responseData.map((ite, index) => (\r\n                        <>\r\n                            <Card className=\"m-10\" key={index}>\r\n                                <CardContent className=\"card-desc-container\">\r\n                                    <Typography className=\"mb-10\" variant=\"body2\">\r\n\r\n                                    </Typography>\r\n                                    <Typography className=\"card-desc\" variant=\"body2\"\r\n                                                onClick={() => props.handlePopoverOpen(ite)}\r\n                                    >\r\n                                        {ite.description}</Typography>\r\n\r\n                                    <Row className=\"card-timestamp\">\r\n                                        <Row className=\"card-vote-buttons\" style={{cursor: 'pointer'}}><span\r\n                                            className=\"underline-text\" onClick=\r\n                                            {() => {\r\n                                                props.incrementUpVote(ite._id);\r\n                                                props.sendUpVoteRequest(ite._id)\r\n                                            }}\r\n                                        >Working:&nbsp;{ite.upVoteCount}</span>&nbsp;&nbsp;\r\n\r\n                                            <span className=\"card-vote-buttons  underline-text\" style={{cursor: 'pointer'}}\r\n                                                  onClick=\r\n                                                      {() => {\r\n                                                          props.incrementDownVote(ite._id);\r\n                                                          props.sendDownVoteRequest(ite._id)\r\n                                                      }}\r\n                                            >Not working:&nbsp;{ite.downVoteCount}</span></Row>&nbsp;\r\n\r\n                                        <Column\r\n                                            className=\"card-footer-info\">{utility.toSentenceCase(ite.state)} {utility.toSentenceCase(ite.district)} {moment(ite.channelCreatedOn).fromNow()}</Column>\r\n                                    </Row>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </>\r\n                    )\r\n                    ) :\r\n                    <div\r\n                        className=\"loading\">{props?.originalResponseData?.length < 1 && 'Loading...' || 'No leads available. Search for other cities.'}</div>}\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nfunction DialogBox(props) {\r\n    return (\r\n        <Dialog\r\n            open={props.state.isShowSharePopup}\r\n            onClose={props.handlePopoverClose}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n        >\r\n            <div className=\"dialog-box\">\r\n                <Row className=\"dialog-header\">\r\n                    <Column>\r\n                        <div className=\"p-b-10\">Details</div>\r\n                    </Column>\r\n                    <Column onClick={props.handlePopoverClose} style={{cursor: 'pointer'}}><img\r\n                        src=\"/images/Cancel.svg\"/> </Column>\r\n                </Row>\r\n                {props.state.selectedItem && props.state.selectedItem.attachments && props.state.selectedItem.attachments.media_keys.length>0\r\n                ?  \r\n                <>\r\n                {props.state.uniqueContact && props.state.uniqueContact.length ? <div className=\"p-t-20 p-r-20\">Contact :</div> :\"\"}\r\n                    {props.state.uniqueContact && props.state.uniqueContact.length ? props.state.uniqueContact.map(data => (\r\n                        <div className=\"\"><a href={`tel:${data}`}>{data}</a></div>\r\n                    )) : \"\"}\r\n                <TwitterTweetEmbed  options={{width: 400}}\r\n                tweetId={props.state.selectedItem.channelID}/> \r\n                  \r\n                    <Row className=\"card-timestamp\">\r\n                   <Column><div className=\"p-t-20 p-r-20 p-b-10 bottom-text\">{moment(props.state.selectedItem.channelCreatedOn).fromNow()}</div></Column>\r\n                    <Column><div className=\"p-t-20 p-r-20 p-b-10 bottom-text\">Source: Twitter</div></Column>\r\n                     </Row>   \r\n                </>\r\n                :\r\n                <div className=\"selected-item \">\r\n                    <div className=\"p-l-20 p-t-20 p-r-20\"> {props.state.selectedItem.description}</div>\r\n                    {props.state.uniqueContact && props.state.uniqueContact.length ? <div className=\"p-l-20 p-t-20 p-r-20\">Contact :</div> :\"\"}\r\n                    {props.state.uniqueContact && props.state.uniqueContact.length ? props.state.uniqueContact.map(data => (\r\n                        <div className=\"p-l-20 \"><a href={`tel:${data}`}>{data}</a></div>\r\n                    )) : \"\"}\r\n                    <Row className=\"card-timestamp\">\r\n                   <Column><div className=\"p-l-20 p-t-20 p-r-20 p-b-10 bottom-text\">{moment(props.state.selectedItem.channelCreatedOn).fromNow()}</div></Column>\r\n                    <Column><div className=\"p-l-20 p-t-20 p-r-20 p-b-10 bottom-text\">Source: Twitter</div></Column>\r\n                     </Row>   \r\n                </div> }\r\n               \r\n               \r\n                <Row className=\"card-timestamp p-t-20\">\r\n                    <Row className=\"card-vote-buttons\" style={{cursor: 'pointer'}}><span className=\" working-text\"\r\n                                                                                         onClick=\r\n                                                                                             {() => {\r\n\r\n\r\n                                                                                                 props.incrementUpVote(props.state.selectedItem._id);\r\n\r\n                                                                                                 props.sendUpVoteRequest(props.state.selectedItem._id)\r\n                                                                                             }}\r\n                    ><img style={{width: \"20px\", paddingRight: \"1px\"}}\r\n                          src=\"/images/Working.svg\"></img>Working:{props.state.selectedItem.upVoteCount}</span>&nbsp;\r\n\r\n                        <span className=\"  not-working-text\" style={{cursor: 'pointer'}} onClick=\r\n                            {() => {\r\n                                props.incrementDownVote(props.state.selectedItem._id);\r\n                                props.sendDownVoteRequest(props.state.selectedItem._id)\r\n                            }}\r\n                        ><img style={{width: \"20px\", paddingRight: \"1px\"}} src=\"/images/NotWorking.svg\"></img>Not working:{props.state.selectedItem.downVoteCount}</span></Row>&nbsp;\r\n\r\n                    <Column className=\"card-footer-info\">\r\n                        <Row>\r\n            <FacebookShareButton style={{paddingRight:\"3px\"}} url={process.env.REACT_APP_WEBAPP_URL} quote={`${props.state.selectedItem.description} Found at`}>\r\n                <FacebookIcon  size={20} round={true}></FacebookIcon>\r\n            </FacebookShareButton>\r\n            <WhatsappShareButton style={{paddingRight:\"3px\"}} url={process.env.REACT_APP_WEBAPP_URL} title={`${props.state.selectedItem.description} Found at`}>\r\n                <WhatsappIcon size={20} round={true}></WhatsappIcon>\r\n            </WhatsappShareButton>\r\n            <TwitterShareButton  url={process.env.REACT_APP_WEBAPP_URL} title={`${props.state.selectedItem.description} Found at`}>\r\n                <TwitterIcon size={20} round={true}></TwitterIcon>\r\n            </TwitterShareButton>\r\n                        </Row>\r\n                    </Column>\r\n\r\n                </Row>\r\n             </div>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default ColumnCardComponent;","/**\r\n * Created by Ayush Kulshrestha on 18/09/2019.\r\n */\r\n\r\n\r\nexport const httpConstants = {\r\n    METHOD_TYPE: {\r\n        POST: 'POST',\r\n        PUT: 'PUT',\r\n        GET: 'GET',\r\n        DELETE: 'DELETE',\r\n    },\r\n    CONTENT_TYPE: {\r\n        APPLICATION_JSON: 'application/json',\r\n        MULTIPART_FORM_DATA: 'multipart/form-data',\r\n        APPLICATION_FORM_URLENCODED: 'application/x-www-form-urlencoded',\r\n        IMAGE_PNG: 'image/png'\r\n    },\r\n    DEVICE_TYPE: {\r\n        WEB: 'web'\r\n    },\r\n    API_END_POINT: {}\r\n};\r\n\r\nexport const stateNamesConstant = {\r\n    andhra: \"Andhra Pradesh\",\r\n    arunachal: \"Arunachal Pradesh\",\r\n    assam: \"Assam\",\r\n    bihar: \"Bihar\",\r\n    chandigarh: \"Chandigarh\",\r\n    chhattisgarh: \"Chhattisgarh\",\r\n    dadra: \"Dadra and Nagar Haveli\",\r\n    daman: \"Daman and Diu\",\r\n    delhi: \"Delhi\",\r\n    goa: \"Goa\",\r\n    gujarat: \"Gujarat\",\r\n    haryana: \"Haryana\",\r\n    himachal: \"Himachal\",\r\n    jammu: \"Jammu\",\r\n    jharkhand: \"Jharkhand\",\r\n    karnataka: \"Karnataka\",\r\n    kerala: \"Kerala\",\r\n    lakshadweep: \"Lakshadweep\",\r\n    madhya: \"Madhya Pradesh\",\r\n    maharashtra: \"Maharashtra\",\r\n    manipur: \"Manipur\",\r\n    meghalaya: \"Meghalaya\",\r\n    mizoram: \"Mizoram\",\r\n    nagaland: \"Nagaland\",\r\n    odisha: \"Odisha\",\r\n    puducherry: \"Puducherry\",\r\n    punjab: \"Punjab\",\r\n    rajasthan: \"Rajasthan\",\r\n    sikkim: \"Sikkim\",\r\n    tamil: \"Tamil Nadu\",\r\n    telangana: \"Telangana\",\r\n    tripura: \"Tripura\",\r\n    uttarakhand: \"Uttarakhand\",\r\n    uttar: \"Uttar Pradesh\",\r\n    bengal: \"West Bengal\"\r\n}","import {httpConstants} from \"../constants\";\r\n\r\nexport const httpService = (method, headers, data, url) => {\r\n    const requestOptions = {\r\n        method: method,\r\n        keepalive: true,\r\n        headers: headers || {'Content-Type': 'application/json'}\r\n    };\r\n\r\n    if (method !== httpConstants.METHOD_TYPE.GET)\r\n        requestOptions.body = JSON.stringify(data);\r\n\r\n    return fetch(url, requestOptions)\r\n        .then(function handleResponse(response) {\r\n            //in case API is down-\r\n            if (!response || !response.ok)\r\n                return Promise.reject(\"Unable to fetch data\");\r\n            return response.text().then(responseText => {\r\n                if (!responseText)\r\n                    return Promise.reject(responseText);\r\n                let data;\r\n                try {\r\n                    data = typeof responseText === 'object' ? responseText : JSON.parse(responseText);\r\n                    if (data && !data.success)\r\n                        return Promise.reject((data && data.responseCode) === 404 ? data : (data && {\r\n                            message: data.message,\r\n                            responseCode: data.responseCode,\r\n                            responseData: data.responseData\r\n                        }) || response.statusText);\r\n\r\n                } catch (err) {\r\n                    return Promise.reject(err)\r\n                }\r\n                return data;\r\n            });\r\n        }).catch(function (err) {\r\n            console.log('Class: httpService, Function: fetch ==', err);\r\n            return Promise.reject(err);\r\n        })\r\n\r\n};\r\n","import {httpService} from \"../managers/httpService\";\r\nimport {httpConstants} from \"../constants\";\r\n\r\n\r\n\r\nexport default {\r\n    states,\r\n    upVote,\r\n    downVote,\r\n    getCategories,\r\n    getFilteredData,\r\n    getStates\r\n}\r\n\r\n\r\nexport async function states(toadd){\r\n    let url = `https://www.covidindiahelp.info:3002/getCards?duration=2000000&state=` + toadd;\r\n    return httpService(httpConstants.METHOD_TYPE.GET, {'Content-Type': httpConstants.CONTENT_TYPE.APPLICATION_JSON},{},url)\r\n        .then(response => {\r\n            // console.log(\"response dasd\",response)\r\n                return Promise.resolve(response);\r\n            }\r\n        ).catch(function (err) {\r\n            // console.log(\"err dasd\",err)\r\n            return Promise.reject(err);\r\n        });\r\n}\r\n\r\n\r\n\r\nexport async function upVote(id){\r\n    let url = `https://www.covidindiahelp.info:3002/upVote?id=` + id;\r\n    return httpService(httpConstants.METHOD_TYPE.GET, {'Content-Type': httpConstants.CONTENT_TYPE.APPLICATION_JSON},{},url)\r\n        .then(response => {\r\n                // console.log(\"response dasd\",response)\r\n                return Promise.resolve(response);\r\n            }\r\n        ).catch(function (err) {\r\n            // console.log(\"err dasd\",err)\r\n            return Promise.reject(err);\r\n        });\r\n}\r\n\r\n\r\n\r\n\r\nexport async function downVote(id){\r\n    let url = `https://www.covidindiahelp.info:3002/downVote?id=` + id;\r\n    return httpService(httpConstants.METHOD_TYPE.GET, {'Content-Type': httpConstants.CONTENT_TYPE.APPLICATION_JSON},{},url)\r\n        .then(response => {\r\n                // console.log(\"response dasd\",response)\r\n                return Promise.resolve(response);\r\n            }\r\n        ).catch(function (err) {\r\n            // console.log(\"err dasd\",err)\r\n            return Promise.reject(err);\r\n        });\r\n}\r\n\r\nexport async function getCategories(req){\r\n    let url = `https://www.covidindiahelp.info:3001/tags?type=CATEGORY`;\r\n    return httpService(httpConstants.METHOD_TYPE.GET, {'Content-Type': httpConstants.CONTENT_TYPE.APPLICATION_JSON},{},url)\r\n        .then(response => {\r\n                // console.log(\"response dasd\",response)\r\n                return Promise.resolve(response);\r\n            }\r\n        ).catch(function (err) {\r\n            // console.log(\"err dasd\",err)\r\n            return Promise.reject(err);\r\n        });\r\n}\r\n\r\nexport async function getFilteredData(req){\r\n    let url = `https://www.covidindiahelp.info:3002/getCards?duration=2000000&state=${req.state}&category=${req.category}`;\r\n    return httpService(httpConstants.METHOD_TYPE.GET, {'Content-Type': httpConstants.CONTENT_TYPE.APPLICATION_JSON},{},url)\r\n        .then(response => {\r\n                // console.log(\"response dasd\",response)\r\n                return Promise.resolve(response);\r\n            }\r\n        ).catch(function (err) {\r\n            // console.log(\"err dasd\",err)\r\n            return Promise.reject(err);\r\n        });\r\n}\r\nexport async function getStates(req){\r\n    let url = `https://www.covidindiahelp.info:3001/tags?type=STATE`;\r\n    return httpService(httpConstants.METHOD_TYPE.GET, {'Content-Type': httpConstants.CONTENT_TYPE.APPLICATION_JSON},{},url)\r\n        .then(response => {\r\n                // console.log(\"response dasd\",response)\r\n                return Promise.resolve(response);\r\n            }\r\n        ).catch(function (err) {\r\n            // console.log(\"err dasd\",err)\r\n            return Promise.reject(err);\r\n        });\r\n}","import React from \"react\";\r\nimport BaseComponent from '../baseComponent'\r\nimport ColumnCardComponent from \"./columnCardsComponents\";\r\nimport {downVote, upVote} from \"../../services/columns\";\r\n\r\nclass ColumnCard extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: \"\",\r\n            nameError: \"\",\r\n            isShowSharePopup:false,\r\n            popoverAnchor:null,\r\n            popoverText:'',\r\n            selectedItem:{},\r\n            uniqueContact:[]\r\n\r\n          \r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n\r\n    }\r\n\r\n\r\n    sendUpVoteRequest = async(id) => {\r\n        let data = `${id}`\r\n\r\n        try{\r\n            let response = await upVote(data)\r\n            if(response.responseData && Array.isArray(response.responseData) && response.responseData.length){\r\n                this.setState({responseData : response.responseData})\r\n            }\r\n        }catch(error){\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n    sendDownVoteRequest = async(id) => {\r\n        let data = `${id}`\r\n\r\n        try{\r\n            let response = await downVote(data)\r\n            if(response.responseData && Array.isArray(response.responseData) && response.responseData.length){\r\n                this.setState({responseData : response.responseData})\r\n            }\r\n        }catch(error){\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n    showSharePopup =async() =>{\r\n        this.setState({isShowSharePopup:!this.state.isShowSharePopup})\r\n    }\r\n    handlePopoverOpen = async(item) => {\r\n        console.log(\"handlePopoverOpen\",item);\r\n        let uniqueContact=[]\r\n        uniqueContact=await this.getUniqueContact(item);\r\n        console.log(\"handlePopoverOpen unique===\",uniqueContact);\r\n        await this.setState({isShowSharePopup:true,popoverText:item.description,selectedItem:item,uniqueContact:uniqueContact});\r\n        console.log(\"handlePopoverOpen===========\",this.state.isShowSharePopup);\r\n\r\n      };\r\n    \r\n      handlePopoverClose = async() => {\r\n       await this.setState({popoverAnchor:null,isShowSharePopup:false});\r\n      };\r\n      getUniqueContact=async(data)=>{\r\n          if(!data && !data.phoneNumber.length){return []}\r\n          let uniqueContact=[]\r\n          data.phoneNumber.map((item)=>{\r\n            item=item.trim()\r\n              if(!uniqueContact.includes(item) && item.length>=10) uniqueContact.push(item)\r\n          })\r\n          console.log(\"getUniqueContact===\",uniqueContact);\r\n          return uniqueContact;\r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <ColumnCardComponent\r\n                responseData={this.props.responseData}\r\n                originalResponseData={this.props.originalResponseData}\r\n                state={this.state}\r\n                sendUpVoteRequest={this.sendUpVoteRequest}\r\n                sendDownVoteRequest={this.sendDownVoteRequest}\r\n                handlePopoverClose={this.handlePopoverClose}\r\n                handlePopoverOpen={this.handlePopoverOpen}\r\n\r\n                incrementUpVote = {this.props.incrementUpVote}\r\n                incrementDownVote = {this.props.incrementDownVote}\r\n                showSharePopup={this.showSharePopup}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default ColumnCard;","import React from \"react\";\r\nimport {Row} from \"simple-flexbox\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <Row className=\"disclaimer-text\">Disclaimer: Please do not send any money to anyone. We are not responsible for\r\n            any loss. The information listed on our website is crowd sourced and it can be inaccurate.</Row>\r\n    )\r\n\r\n}\r\nexport default Footer","import React, {useState} from 'react'\r\nimport {Row, Col} from 'antd';\r\nimport './column.css'\r\nimport 'antd/dist/antd.css';\r\nimport ColumnCard from '../column-cards';\r\nimport Footer from \"./footer\";\r\n\r\n\r\nfunction ColumnComponent(props) {\r\n    const cardStyle = {\r\n        minWidth: '250px',\r\n        maxWidth: '20%',\r\n        flex: '0 0 20%',\r\n        borderRight: \"1px solid #D5D5D5\",\r\n        height: '95vh',\r\n        overflowY: 'scroll',\r\n        overflowX: 'hidden'\r\n    }\r\n    const [blood, setBlood] = useState(true)\r\n    const [medicine, setMedicine] = useState(true)\r\n    const [rem, setrem] = useState(true)\r\n    const [toc, setToc] = useState(true)\r\n    const [ven, setVen] = useState(true)\r\n    const [oxy, setOxy] = useState(true)\r\n    const [bed, setBed] = useState(true)\r\n    const [icu, setIcu] = useState(true)\r\n\r\n       console.log(\"props\",props);\r\n    return (\r\n        <>\r\n            <Row className=\"wrapOnMedia\">\r\n                {\r\n                    props.state.list.map((col, index) => (\r\n                        <Col id=\"style-1\" className=\"cardStyle\" key={index}>\r\n                            <Row>\r\n                                <Col span={20}> <span className=\"oxygen-beds\"\r\n                                                      style={{fontSize: \"11px\"}}>{col.label}</span>\r\n                                                      </Col>\r\n                                                      <Col className=\"left-p\" onClick={() => props.handleColumnClose(col)} style={{cursor: 'pointer'}}><img\r\n                        src=\"/images/Cancel.svg\"/> </Col>\r\n                            </Row>\r\n                            <Row className=\"coloumn-scroll\">\r\n\r\n                                <ColumnCard\r\n                                    originalResponseData={props.state.originalResponseData}\r\n                                    responseData={props.responseData.filter((row) => row.category.toLowerCase() === col.filterKey || row.category.toLowerCase() === col.filterKey2)}\r\n                                    incrementUpVote={props.incrementUpVote}\r\n                                    incrementDownVote={props.incrementDownVote}\r\n                                />\r\n                            </Row>\r\n                        </Col>\r\n                    ))\r\n                }\r\n            </Row>\r\n            <Footer/>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default ColumnComponent;","import React, {useState} from 'react'\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    hide: {\r\n      display: 'none',\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n      top:\"35px\",\r\n    }\r\n  }));\r\n\r\nfunction DrawerComponent(props) {\r\n    const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n    return (\r\n\r\n        <div>\r\n        <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={props.show}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <List>\r\n          {['Dashboard', 'Add Information', 'About'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemText primary={text} onClick={() => {\r\n                props.handleNavigate(index)}}/>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default DrawerComponent;","import React, { useState } from 'react'\r\nimport { Row, Col } from 'antd';\r\nimport { Select, Radio } from 'antd';\r\nimport './column.css'\r\nfunction Credits({show,setShow}) {\r\n    const { Option } = Select;\r\n    \r\n    return (\r\n       <>\r\n        {show? <div className=\"scrollbar\" id=\"style-1\" style={{right:'12px',top:'33px',position:'absolute',width:'290px',zIndex:'100000',height:'300px',overflowY:'scroll',overflowX:'hidden',background:'white',borderRadius:'5px',boxShadow:'0px 0px 3px #0005'}}>\r\n            <p style={{fontWeight:'700',fontSize:'17px',marginLeft:'10px',marginTop:'15px',marginBottom:'5px'}}>\r\n                Contributors\r\n            </p>\r\n            <p style={{fontWeight:'400',fontSize:'11px',marginLeft:'10px',marginTop:'15px',marginBottom:'5px'}}>\r\n            We are a team working to help people find relevant and verified information at the time of the pandemic. Please be careful before sending any money to anyone. We are not responsible for any loss. The information is crowd sourced and it can be inaccurate. Here is the list of contributors of the project:\r\n\r\n            <br/>\r\n            <br/>\r\n            <li>Akash Takyar</li>\r\n            <li>Kapil Saxena</li>\r\n            <li>Prashant Raghav</li>\r\n            <li>Ayush Kulshrestha</li>\r\n            <li>Anurag Kumar</li>\r\n            <li>Chandrika</li>\r\n            <li>Rituraj</li>\r\n            <li>Nishant Garg</li>\r\n            <li>Gaurav Chauhan</li>\r\n            <li>Sristi Rajput</li>\r\n            <li>Dhanya Mary Biju</li>\r\n            <li>Sharad Gupta</li>\r\n            <li>Shivansh Mehendiratta</li>\r\n            <li>Jayesh Gadewar</li>\r\n                <li>Srinjoy Chowdhary</li>\r\n                <li>Sunny Kumar</li>\r\n            <br/>\r\n            For any further queries please contact at covidindiahelp.info@gmail.com<br/><br/>v0.1 - beta\r\n            </p>\r\n        </div>:\"\"}\r\n       </>\r\n    );\r\n}\r\n\r\nexport default Credits;","import React, {useState} from 'react'\r\nimport '../columns/column.css'\r\nimport Credits from '../columns/./credits';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {Column, Row} from \"simple-flexbox\";\r\nconst stateNames = {andhra: \"Andhra Pradesh\",arunachal: \"Arunachal Pradesh\",assam: \"Assam\",bihar: \"Bihar\",chandigarh: \"Chandigarh\",chhattisgarh: \"Chhattisgarh\",dadra: \"Dadra and Nagar Haveli\",daman: \"Daman and Diu\",delhi: \"Delhi\",goa: \"Goa\",gujarat: \"Gujarat\",haryana: \"Haryana\",himachal: \"Himachal\",jammu: \"Jammu\",jharkhand: \"Jharkhand\",karnataka: \"Karnataka\",kerala: \"Kerala\",lakshadweep: \"Lakshadweep\",madhya: \"Madhya Pradesh\",maharashtra: \"Maharashtra\",manipur: \"Manipur\",meghalaya: \"Meghalaya\",mizoram: \"Mizoram\",nagaland: \"Nagaland\",odisha: \"Odisha\",puducherry: \"Puducherry\",punjab: \"Punjab\",rajasthan: \"Rajasthan\",sikkim: \"Sikkim\",tamil: \"Tamil Nadu\",telangana: \"Telangana\",tripura: \"Tripura\",uttarakhand: \"Uttarakhand\",uttar: \"Uttar Pradesh\",bengal: \"West Bengal\"}\r\n\r\nfunction NavbarComponent(props) {\r\nconsole.log(\"testinhggg\",props.isHeader);\r\n    const [showCredits, setshowCredits] = useState(false)\r\n    return (\r\n        <Row\r\n            style={{\r\n                backgroundColor: \"#474951\",\r\n                height: \"35px\",\r\n                marginLeft: '0px',\r\n                marginRight: '0px',\r\n                alignItems: 'center',\r\n                justifyContent: \"space-between\"\r\n            }}>\r\n            <Column className=\"navbar-cont\">\r\n                <Row style={{height: \"100%\", alignItems: 'center', columnGap: '5px'}}>\r\n                <Column className=\"drawericon\" style={{fontSize: \"10px\", cursor: 'pointer'}}>\r\n                        <img src=\"/images/drawer-white.png\" alt={'Refresh'} width={'24px'} onClick={() => props.drawerToggleClickHandler()}/>\r\n                    </Column>\r\n                    <Column className=\"bookmarked\" style={{fontSize: \"12px\", marginLeft: '10px'}}>Covid India\r\n                        Help</Column>\r\n                        {props.isHeader?<>\r\n                    <Column style={{marginLeft: \"12px\"}} id={'state-list-container'}>\r\n                        <Autocomplete\r\n                            id=\"AllStates\"\r\n                            options={props.countryStateList}\r\n                            getOptionLabel={(option) => option.title}\r\n                            style={{width: 160, zIndex: 100000}}\r\n                            onInputChange={(event, value) => props.handleChangeForCountryState(event, value)}\r\n                            renderInput={(params) => <TextField {...params} label=\"All States\" variant=\"outlined\"/>}\r\n                        />\r\n                    </Column>\r\n                    <Column className=\"bookmarked\" style={{fontSize: \"10px\", cursor: 'pointer'}}>\r\n                        <img src=\"/images/refresh_48px.svg\" \r\n                        style={{filter: 'invert(100%) sepia(0%) saturate(2%) hue-rotate(282deg) brightness(105%) contrast(101%)'}}\r\n                        alt={'Refresh'} width={'24px'} onClick={() => props.onRefresh('')}/>\r\n                    </Column>\r\n                    </>:\r\n                    \"\"\r\n                        }\r\n                </Row>\r\n            </Column>\r\n            {props.isHeader?<>\r\n            <Column onClick={() => setshowCredits(!showCredits)} className=\"navbar-cont\">\r\n                <Row className=\"bookmarked\"\r\n                     style={{fontSize: \"11px\", cursor: 'pointer', paddingRight: '10px', position: 'relative'}}><InfoIcon\r\n                    style={{color: 'white', fontSize: '20px'}}/> </Row>\r\n                <Credits show={showCredits} setShow={setshowCredits}/>\r\n            </Column>\r\n            </> : \"\"}\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default NavbarComponent;","import React, {useState} from 'react'\r\nimport '../columns/column.css'\r\n\r\nfunction ColumnComponent(props) {\r\n\r\n    return (\r\n        <div className=\"backdrop\" \r\n            onClick={props.close}\r\n        />\r\n    );\r\n}\r\n\r\nexport default ColumnComponent;","import React from \"react\";\r\nimport BaseComponent from '../baseComponent'\r\nimport Drawer from './drawer'\r\nimport {history} from \"../../managers/history\";\r\nimport  Navbar  from \"./navbar\";\r\nimport Backdrop from \"./backdrop\";\r\n\r\nclass HeaderComponent extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \r\n            isHeader:true,\r\n            drawerOpen: false,\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n      if(this.props.type===\"about\")\r\n      this.setState({isHeader:false})\r\n    }\r\n\r\n\r\n\r\n    drawerToggleClickHandler = () => {\r\n      console.log(\"drawerToggleClickHandler\",this.state.drawerOpen);\r\n        this.setState({\r\n          drawerOpen: !this.state.drawerOpen\r\n        })\r\n    }\r\n\r\n    backdropClickHandler = () => {\r\n        this.setState({\r\n          drawerOpen: false\r\n        })\r\n      }\r\n\r\n      handleNavigate=async(index)=>{\r\n          if(index==0){\r\n            this.setState({\r\n              drawerOpen: !this.state.drawerOpen,isHeader:true\r\n            })\r\n            history.push('/');\r\n          }\r\n          else if(index==1){\r\n            window.open(\"https://docs.google.com/forms/d/e/1FAIpQLScFjzTeZ2jr3in3uPEKkHGHgAwDxAm98yH4INz8FjXHG-dSfQ/viewform\")\r\n          }\r\n          else if(index==2)\r\n          {\r\n            console.log(\"header\");\r\n            await this.setState({isHeader: false})\r\n            history.push('/about'); \r\n          }\r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <Navbar drawerToggleClickHandler={this.drawerToggleClickHandler}\r\n                     handleChangeForCountryState={this.props.handleChangeForCountryState} onRefresh={this.props.onRefresh}\r\n                     countryStateList={this.props.countryStateList} \r\n                     state={this.props.state}\r\n                     isHeader={this.state.isHeader}\r\n            ></Navbar>\r\n            <Drawer handleNavigate={this.handleNavigate} show={this.state.drawerOpen}/>\r\n            {this.state.drawerOpen?\r\n            <Backdrop close={this.backdropClickHandler}></Backdrop> : \"\"}\r\n            \r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HeaderComponent;","import React, {useState} from 'react'\r\nimport Header from \"../common/index\";\r\nimport './addinfo.css'\r\n\r\nfunction AddInfoComponent(props) {\r\n\r\n    console.log(\"props\",props);\r\n\r\n    return (\r\n        <>\r\n        <Header type=\"about\"/>\r\n\r\n        <div className='main'>\r\n            <div className='div1'>\r\n                \r\n            </div>\r\n            <div className='div2'>\r\n            <div className='fs-14 fc-label-black m-t-40 mb-xs'>\r\n                    About\r\n                </div>\r\n                <p style={{fontWeight:'400',fontSize:'11px',marginLeft:'10px',marginTop:'15px',marginBottom:'5px'}}>\r\n            We are a team working to help people find relevant and verified information at the time of the pandemic. Please be careful before sending any money to anyone. We are not responsible for any loss. The information is crowd sourced and it can be inaccurate. Here is the list of contributors of the project:\r\n\r\n            <br/>\r\n            <br/>\r\n            <li>Akash Takyar</li>\r\n            <li>Kapil Saxena</li>\r\n            <li>Prashant Raghav</li>\r\n            <li>Ayush Kulshrestha</li>\r\n            <li>Anurag Kumar</li>\r\n            <li>Chandrika</li>\r\n            <li>Rituraj</li>\r\n            <li>Nishant Garg</li>\r\n            <li>Gaurav Chauhan</li>\r\n            <li>Sristi Rajput</li>\r\n            <li>Dhanya Mary Biju</li>\r\n            <li>Sharad Gupta</li>\r\n            <li>Shivansh Mehendiratta</li>\r\n            <li>Jayesh Gadewar</li>\r\n                <li>Srinjoy Chowdhary</li>\r\n                <li>Sunny Kumar</li>\r\n            <br/>\r\n            For any further queries please contact at covidindiahelp.info@gmail.com<br/><br/>v0.1 - beta\r\n            </p>\r\n            </div>\r\n            <div className=\"div3\">\r\n\r\n            </div>\r\n        </div>\r\n        \r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default AddInfoComponent;","import React, {useState} from 'react'\r\nimport '../columns/column.css'\r\nimport Credits from '../columns/credits';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nimport {Column, Row} from \"simple-flexbox\";\r\n\r\nfunction NavbarComponent(props) {\r\nconsole.log(\"testinhggg\",props.isHeader);\r\n    const [showCredits, setshowCredits] = useState(false)\r\n    return (\r\n        <Row\r\n            style={{\r\n                backgroundColor: \"#474951\",\r\n                height: \"35px\",\r\n                marginLeft: '0px',\r\n                marginRight: '0px',\r\n                alignItems: 'center',\r\n                justifyContent: \"space-between\"\r\n            }}>\r\n             <Column>   \r\n            <Column className=\"navbar-cont\">\r\n                <Row style={{height: \"100%\", alignItems: 'center', columnGap: '5px'}}>\r\n                <Column className=\"drawericon\" style={{fontSize: \"10px\", cursor: 'pointer'}}>\r\n                        <img src=\"/images/hands.svg\" alt={'Covid Help'} />\r\n                    </Column>\r\n                    <Column className=\"bookmarked\" style={{fontSize: \"12px\", marginLeft: '10px'}}>Covid India\r\n                        Help</Column>                      \r\n                </Row>\r\n            </Column>\r\n            </Column>\r\n\r\n            <Column>\r\n            {/* <Column><img src=\"/images/add.svg\"></img></Column>\r\n            <Column><img src=\"/images/share.svg\"></img></Column> */}\r\n            <Column  className=\"navbar-cont\">\r\n                <Row className=\"bookmarked\"\r\n                     style={{ cursor: 'pointer' }}>\r\n                         {props.isInfo ?\r\n                         <>\r\n                         <img onClick={()=>{window.open(\"https://forms.gle/5LhpNqX1vCYb671P7\")}}\r\n                         className='header-icons' src=\"/images/add.svg\"></img>\r\n                         {/* <img className='header-icons' src=\"/images/share.svg\"></img> */}\r\n                         </> :\r\n                         <img className='header-icons' src=\"/images/info.svg\" onClick={() => setshowCredits(!showCredits)} />\r\n                        }\r\n               </Row>\r\n                <Credits show={showCredits} setShow={setshowCredits}/>\r\n            </Column>\r\n            </Column>\r\n            \r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default NavbarComponent;","import React, { useState } from \"react\";\r\nimport Header from \"../header\";\r\nimport \"./custom.css\";\r\nimport { Avatar, Card, CardContent, Typography } from \"@material-ui/core\";\r\nimport {Row, Column} from \"simple-flexbox\";\r\nimport { stateNamesConstant } from '../../../constants';\r\n\r\n\r\n\r\nfunction SelectCategoryComponent(props) {\r\n  console.log(\"props\", props);\r\n\r\n  return (\r\n    <>\r\n      <Header isInfo={false}/>\r\n      <Row><Column className=\"back\" onClick={props.onBackToSelectState}><span><img src=\"/images/BackButtonBlack.svg\"></img></span></Column></Row>\r\n      <Row className=\"category-header\">\r\n      <Column >What are you searching in {stateNamesConstant[props.state.selectedState]}?</Column>\r\n      </Row>\r\n      {props.state.categoryList && props.state.categoryList.length ? props.state.categoryList.map(data=>(\r\n      <div className=\"option\">\r\n      <Card className=\"m-10\" onClick={()=>{props.onSelectCategory(data.name)}}>\r\n        <CardContent className=\"card-desc-container\">\r\n          <Typography className=\"mb-10\">\r\n          <p>\r\n          {data.name.toUpperCase()}\r\n          </p>\r\n            \r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n      </div> )):\"\"}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SelectCategoryComponent;\r\n","import React from \"react\";\r\nimport BaseComponent from '../../baseComponent'\r\nimport SelectCategoryComponent from './selectCategoryComponent'\r\nimport {getCategories} from \"../../../services/columns\"\r\nimport {history} from '../../../managers/history'\r\n\r\n\r\n\r\nclass Category extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            categoryList:[],\r\n            selectedState:''\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n    console.log(\"tstvaxb,  x, \",this.props.location.state.name);\r\n    this.setState({selectedState:this.props.location.state.name});\r\n    this.getAllCategories();\r\n\r\n    }\r\n\r\n    getAllCategories=async()=>{\r\n        const {responseData,error}=await  getCategories();\r\n        console.log(\"categories\",responseData);\r\n        if(!responseData) return\r\n        this.setState({categoryList:responseData})\r\n    }\r\n    onSelectCategory=async(value)=>{\r\n        history.push({\r\n            pathname:`/state/${this.state.selectedState}/category/${value}`,\r\n            state:{name:this.state.selectedState,\r\n                    category:value}\r\n        })\r\n    }\r\n    onBackToSelectState=async()=>{\r\n        history.push({\r\n            pathname: `/state`,\r\n            state:{name:this.state.selectedState}\r\n         })\r\n    }\r\n  \r\n    render() {\r\n        return (\r\n            <SelectCategoryComponent\r\n                state={this.state}\r\n                onSelectCategory={this.onSelectCategory}\r\n                onBackToSelectState={this.onBackToSelectState}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Category;","import React from \"react\";\r\nimport BaseComponent from '../baseComponent'\r\nimport CoulumnComponent from './coulumnsComponents'\r\nimport AddInfoComponent from '../add-info/addInfoComponent'\r\nimport Header from '../common/index'\r\nimport {states} from \"../../services/columns\"\r\nimport utility from \"../../utility\";\r\nimport {stateNamesConstant} from \"../../constants\";\r\nimport {history} from \"../../managers/history\";\r\nimport SelectCategory from \"../mobile-view/select-category\"\r\n\r\nclass Coloumn extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: \"\",\r\n            nameError: \"\",\r\n            isAbout:false,\r\n            selectedState: \"All States\",\r\n            selectedTime: \"4\",\r\n            drawerOpen: false,\r\n            responseData: [],\r\n            originalResponseData: [],\r\n            countryStateList: [],\r\n            responseByIndex: {},\r\n            responseByLocation: {},\r\n            param:[],\r\n            list:[\r\n                \r\n                    {\r\n                        label: \"Oxygen\",\r\n                        filterKey: \"oxygen\"\r\n                    },\r\n                    {\r\n                        label: \"Bed\",\r\n                        filterKey: \"bed\"\r\n                    },\r\n                    {\r\n                        label: \"Blood Plasma\",\r\n                        filterKey: \"plasma\"\r\n                    },\r\n                    {\r\n                        label: \"Remdesivir/Tocilizumab\",\r\n                        filterKey: \"remdesivir\",\r\n                        filterKey2: \"tocilizumab\"\r\n                    },\r\n                    {\r\n                        label: \"Fabiflu\",\r\n                        filterKey: \"fabiflu\"\r\n                    },\r\n            ]\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const route= window.location.pathname;\r\n        let params=route.split('/')\r\n        params=params.filter((data)=>{if(data.length>0) return data})\r\n        this.setState({param:params})\r\n        console.log(\"testing route\",params);\r\n        this.getStates(\"\")\r\n    }\r\n\r\n    incrementUpVote = (id) => {\r\n        let index = this.state.responseByIndex[id].index;\r\n        this.state.responseData[index].upVoteCount = this.state.responseData[index].upVoteCount + 1;\r\n        this.setState({responseData: this.state.responseData, originalResponseData: this.state.responseData})\r\n    }\r\n\r\n    incrementDownVote = (id) => {\r\n        let index = this.state.responseByIndex[id].index;\r\n        this.state.responseData[index].downVoteCount = this.state.responseData[index].downVoteCount + 1;\r\n        this.setState({responseData: this.state.responseData, originalResponseData: this.state.responseData})\r\n\r\n    }\r\n\r\n    getStates = async (stateValue) => {\r\n        let data = `${stateValue}`\r\n        this.setState({responseData: [], originalResponseData: []})\r\n\r\n        try {\r\n            let response = await states(data)\r\n            if (response.responseData && Array.isArray(response.responseData) && response.responseData.length) {\r\n\r\n                let responseByIndex = {};\r\n                let responseByLocation = {};\r\n                let countryStateList = [];\r\n                let keyToSave = \"\";\r\n\r\n                response.responseData.forEach((obj, index) => {\r\n                    responseByIndex[obj._id] = {\"index\": index, ...obj}\r\n\r\n                    if (obj.state)\r\n                        keyToSave = obj.state;\r\n                    else if (obj.district)\r\n                        keyToSave = obj.district;\r\n\r\n                    // Make it Sentense case\r\n                    keyToSave = stateNamesConstant[keyToSave] ? stateNamesConstant[keyToSave] : utility.toSentenceCase(keyToSave);\r\n                    if (!responseByLocation[keyToSave]) {\r\n                        responseByLocation[keyToSave] = [];\r\n                        countryStateList.push({title: keyToSave})\r\n                    }\r\n\r\n                    responseByLocation[keyToSave].push({\r\n                        \"index\": index,\r\n                        ...obj\r\n                    })\r\n                })\r\n                console.log(\"responseByLocation====\", responseByIndex)\r\n\r\n                this.setState({\r\n                    responseData: response.responseData,\r\n                    originalResponseData: response.responseData,\r\n                    responseByIndex: responseByIndex,\r\n                    responseByLocation: responseByLocation,\r\n                    countryStateList: countryStateList.sort((a, b) => b.title < a.title ? 1 : -1)\r\n                })\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n    handleChangeForCountryState = (event, selectedCountryState) => {\r\n        if(event && event.target &&!event.target.value && document.getElementById(\"AllStates\")) \r\n        document.getElementById(\"AllStates\").blur();\r\n\r\n        let responseData = selectedCountryState ? this.state.responseByLocation[selectedCountryState] : this.state.originalResponseData\r\n        if (!responseData)\r\n            return\r\n        this.setState({responseData})\r\n    }\r\n\r\n    handleColumnClose = async(item) => {\r\n        var array = this.state.list;\r\n  var index = array.indexOf(item)\r\n  array.splice(index, 1);\r\n  this.setState({list: array });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"desktop-view\">\r\n            <Header \r\n            handleChangeForCountryState={this.handleChangeForCountryState} onRefresh={this.getStates}\r\n            countryStateList={this.state.countryStateList} \r\n            state={this.state}\r\n            />\r\n            <CoulumnComponent state={this.state}\r\n                              getStates={this.getStates}\r\n                              handleChangeForCountryState={this.handleChangeForCountryState}\r\n                              incrementUpVote={this.incrementUpVote}\r\n                              incrementDownVote={this.incrementDownVote}\r\n                              handleColumnClose={this.handleColumnClose}\r\n                              drawerToggleClickHandler={this.drawerToggleClickHandler}\r\n                              backdropClickHandler={this.backdropClickHandler}\r\n                              handleNavigate={this.handleNavigate}\r\n                              responseData={this.state.responseData}\r\n            />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Coloumn;","import React from \"react\";\r\nimport BaseComponent from '../baseComponent'\r\nimport AddInfoComponent from './addInfoComponent'\r\nimport {history} from \"../../managers/history\";\r\n\r\nclass AddInfo extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            drawerOpen:false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n    \r\n    }\r\n\r\n  \r\n    render() {\r\n        return (\r\n            <AddInfoComponent/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddInfo;","import React, {useState} from 'react'\r\nimport '../../columns/column.css'\r\nimport {Column, Row} from \"simple-flexbox\";\r\nimport { stateNamesConstant } from '../../../constants';\r\n\r\nfunction SelectStates(props) {\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Column className=\"search-row\">\r\n                    <span><img className=\"search-image p-r-10\" src=\"/images/search.svg\"></img>   \r\n                <input placeholder=\"Search Location\" className=\"search-location\" onChange={(event)=>{props.handleSearchLocationInput(event.target.value)}}></input>\r\n                </span>\r\n                </Column>\r\n            </Row>\r\n            {props.countryStateList && props.countryStateList.length >0 ? props.countryStateList.map(location=>(\r\n                <>\r\n                {location && location.name && location.name.length ?\r\n                    <Row className=\"location-row\" onClick={()=>{props.onSelectLocation(location.name)}}>\r\n                   <Column className=\"location-column\">\r\n                        {stateNamesConstant[location.name]}\r\n                   </Column>\r\n                   </Row> : \"\"}\r\n                   </>\r\n            ))\r\n            \r\n         : \"\"}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SelectStates;","import React from \"react\";\r\nimport BaseComponent from '../../baseComponent'\r\nimport StateComponent from './selectStates'\r\nimport {states,getStates} from \"../../../services/columns\"\r\nimport utility from \"../../../utility\";\r\nimport {stateNamesConstant} from \"../../../constants\";\r\nimport { Category } from \"@material-ui/icons\";\r\nimport CategoryComponent from \"../select-category\"\r\nimport {history} from \"../../../managers/history\";\r\nimport Header from \"../header\";\r\n\r\nclass Coloumn extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedState: \"All States\",\r\n            countryStateList: [],\r\n            responseByLocation: {},\r\n            allLocations:[],\r\n            isStateSelected:false   \r\n        \r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n       const route= window.location.pathname;\r\n       console.log(\"route====\",route);\r\n        this.getStates(\"\")\r\n    }\r\n\r\n    getStates = async (stateValue) => {\r\n        this.setState({responseData: [], originalResponseData: []})\r\n\r\n        try {\r\n            let response = await getStates()\r\n            if (response.responseData && Array.isArray(response.responseData) && response.responseData.length) {\r\n\r\n                // let countryStateList = [];\r\n                // response.responseData.forEach((obj, index) => {\r\n                //     responseByIndex[obj._id] = {\"index\": index, ...obj}\r\n\r\n                //     if (obj.state)\r\n                //         keyToSave = obj.state;\r\n                //     else if (obj.district)\r\n                //         keyToSave = obj.district;\r\n\r\n                //     // Make it Sentense case\r\n                //     keyToSave = stateNamesConstant[keyToSave] ? stateNamesConstant[keyToSave] : utility.toSentenceCase(keyToSave);\r\n                //     if (!responseByLocation[keyToSave]) {\r\n                //         responseByLocation[keyToSave] = [];\r\n                //         countryStateList.push({title: keyToSave})\r\n                //     }\r\n\r\n                //     responseByLocation[keyToSave].push({\r\n                //         \"index\": index,\r\n                //         ...obj\r\n                //     })\r\n                // })\r\n                // console.log(\"responseByLocation====\", responseByLocation)\r\n\r\n                this.setState({\r\n                    countryStateList: response.responseData,\r\n                    allLocations:response.responseData\r\n                })\r\n                console.log(\"countryStateList====\", this.state.countryStateList)\r\n\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n    handleChangeForCountryState = (event, selectedCountryState) => {\r\n        if(event && event.target &&!event.target.value && document.getElementById(\"AllStates\")) \r\n        document.getElementById(\"AllStates\").blur();\r\n\r\n        let responseData = selectedCountryState ? this.state.responseByLocation[selectedCountryState] : this.state.originalResponseData\r\n        if (!responseData)\r\n            return\r\n        this.setState({responseData})\r\n    }\r\n    handleSearchLocationInput=(value)=>{\r\n        let locations=this.state.allLocations;\r\n        if(value.length){\r\n        locations=locations.filter(item=>{\r\n             if(item.name.toLowerCase().includes(value.toLowerCase()))\r\n              return item\r\n            })\r\n        }\r\n        this.setState({countryStateList:locations})\r\n    }\r\n    onSelectLocation=(value)=>{\r\n        this.setState({isStateSelected:true,selectedState:value})\r\n        history.push({\r\n            pathname:`/state/${value}/category`,\r\n            state:{name:value}\r\n        })\r\n        // pathname: '/secondpage',\r\n        // search: '?query=abc',\r\n        // state: { detail: 'some_value' }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"mobile-view\">\r\n            <Header isInfo={false}></Header>\r\n            <StateComponent state={this.state}\r\n                              getStates={this.getStates}\r\n                              countryStateList={this.state.countryStateList}\r\n                              handleChangeForCountryState={this.handleChangeForCountryState}\r\n                              handleSearchLocationInput={this.handleSearchLocationInput}\r\n                              onSelectLocation={this.onSelectLocation}\r\n            />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Coloumn;","import React from \"react\";\r\n// import { Route, Switch } from \"react-router-dom\";\r\n\r\n// Import material modules\r\nimport {\r\n    Container\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Navbar from \"../common/components/Navbar\";\r\nimport { Coloumn } from \".\";\r\nimport MobileView from '../modules/mobile-view/select-states'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        marginLeft: 0,\r\n        marginRight: 0,\r\n        position:\"relative\"\r\n    },\r\n    navbar: {\r\n        backgroundColor: '#333333',\r\n        Select: {\r\n            '&:before': {\r\n                borderColor: 'white',\r\n            },\r\n            '&:after': {\r\n                borderColor: 'white',\r\n            }\r\n        }\r\n    },\r\n    mx10: {\r\n        marginLeft: 10,\r\n        marginRight: 10\r\n    },\r\n    dropdown:{\r\n     '.& MuiSelect-outlined.MuiSelect-outlined':{     \r\n     paddingRight: '82px'\r\n     }\r\n    },\r\n  });\r\n\r\n  \r\nfunction Main() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n\r\n        <div disableGutters={true} style={{width:\"100% !important\"}} className={classes.root}>\r\n            {/* <Navbar classes={classes} /> */}\r\n            <Coloumn className=\"desktop-view\" />\r\n            <MobileView className=\"mobile-view\"></MobileView>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react'\r\nimport '../../column-cards/column-cards.css'\r\nimport 'antd/dist/antd.css';\r\nimport {Avatar, Card, CardContent, Typography} from '@material-ui/core';\r\nimport moment from 'moment'\r\nimport {Row, Column} from \"simple-flexbox\";\r\nimport utility from \"../../../utility\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport { TwitterTweetEmbed} from 'react-twitter-embed';\r\nimport { stateNamesConstant } from '../../../constants';\r\n\r\n\r\nimport {\r\n    FacebookShareButton,\r\n    FacebookIcon,\r\n    LinkedinIcon,\r\n    WhatsappIcon,\r\n    TwitterIcon,\r\n    WhatsappShareButton,\r\n    TwitterShareButton,\r\n    LinkedinShareButton,\r\n    InstapaperShareButton,\r\n    InstapaperIcon\r\n} from 'react-share';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    popover: {\r\n        pointerEvents: 'none',\r\n        maxWidth: '400px',\r\n        border: \"none\",\r\n        background: \"white\"\r\n    }\r\n}));\r\n\r\nfunction LeadsComponent(props) {\r\n    const classes = useStyles();\r\n    return (\r\n      <>\r\n            {DialogBox(props)}\r\n            <Row className=\"selected-param\">\r\n                <Column>\r\n                <div className=\"selected\">\r\n                    <span onClick={props.backToSelectCategory}>\r\n                    <img style={{width:\"25px\",fill: \"invert(44%) sepia(97%) saturate(3395%) hue-rotate(187deg) brightness(101%) contrast(109%)\"}} \r\n                    src=\"/images/BackButton.svg\"></img>   \r\n                    {stateNamesConstant[props.state.selectedState]}\r\n                    </span>\r\n                    &nbsp;/ {utility.toSentenceCase(props.state.selectedCategory)}\r\n                   \r\n                </div>\r\n                </Column>\r\n                {/* <Column className=\"set-alert\"><span><img classname=\"alert-image\" src=\"/images/alert.svg\"></img>Set Alert</span></Column> */}\r\n            </Row>\r\n            {\r\n                props.state.allLeads.length > 0 ?\r\n                    props.state.allLeads && props.state.allLeads.map((ite, index) => (\r\n                        <>\r\n                            <Card className=\"m-10\" className=\"lead-card\" key={index}>\r\n                                <CardContent className=\"card-desc-container\">\r\n                                    <Typography className=\"mb-10\" variant=\"body2\">\r\n\r\n                                    </Typography>\r\n                                    <Typography className=\"card-desc\" variant=\"body2\"\r\n                                                onClick={() => props.handlePopoverOpen(ite)}\r\n                                    >\r\n                                        {ite.description}</Typography>\r\n\r\n                                    <Row className=\"card-timestamp\">\r\n                                        <Row className=\"card-vote-buttons\" style={{cursor: 'pointer'}}><span\r\n                                            className=\"underline-text\" onClick=\r\n                                            {() => {\r\n                                                props.incrementUpVote(ite._id);\r\n                                                props.sendUpVoteRequest(ite._id)\r\n                                            }}\r\n                                        >Working:&nbsp;{ite.upVoteCount}</span>&nbsp;&nbsp;\r\n\r\n                                            <span className=\"card-vote-buttons  underline-text\" style={{cursor: 'pointer'}}\r\n                                                  onClick=\r\n                                                      {() => {\r\n                                                          props.incrementDownVote(ite._id);\r\n                                                          props.sendDownVoteRequest(ite._id)\r\n                                                      }}\r\n                                            >Not working:&nbsp;{ite.downVoteCount}</span></Row>&nbsp;\r\n\r\n                                        <Column\r\n                                            className=\"card-footer-info\">{utility.toSentenceCase(ite.state)} {utility.toSentenceCase(ite.district)} {moment(ite.channelCreatedOn).fromNow()}</Column>\r\n                                    </Row>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </>\r\n                    )\r\n                    ) :\r\n                    <div\r\n                        className=\"loading\">{props?.originalResponseData?.length < 1 && 'Loading...' || 'No leads available. Search for other cities.'}</div>}\r\n        </> \r\n\r\n    );\r\n}\r\n\r\nfunction DialogBox(props) {\r\n    return (\r\n        <Dialog\r\n            open={props.state.isShowSharePopup}\r\n            onClose={props.handlePopoverClose}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n        >\r\n            <div className=\"dialog-box\">\r\n                <Row className=\"dialog-header\">\r\n                    <Column>\r\n                        <div className=\"p-b-10\">Details</div>\r\n                    </Column>\r\n                    <Column onClick={props.handlePopoverClose} style={{cursor: 'pointer'}}><img\r\n                        src=\"/images/Cancel.svg\"/> </Column>\r\n                </Row>\r\n                {props.state.selectedItem && props.state.selectedItem.attachments && props.state.selectedItem.attachments.media_keys.length>0\r\n                ?  \r\n                <>\r\n                {props.state.uniqueContact && props.state.uniqueContact.length ? <div className=\"p-t-20 p-r-20\">Contact :</div> :\"\"}\r\n                    {props.state.uniqueContact && props.state.uniqueContact.length ? props.state.uniqueContact.map(data => (\r\n                        <div className=\"\"><a href={`tel:${data}`}>{data}</a></div>\r\n                    )) : \"\"}\r\n                <TwitterTweetEmbed  options={{width: 400}}\r\n                tweetId={props.state.selectedItem.channelID}/> \r\n                  \r\n                    <Row className=\"card-timestamp\">\r\n                   <Column><div className=\"p-t-20 p-r-20 p-b-10 bottom-text\">{moment(props.state.selectedItem.channelCreatedOn).fromNow()}</div></Column>\r\n                    <Column><div className=\"p-t-20 p-r-20 p-b-10 bottom-text\">Source: Twitter</div></Column>\r\n                     </Row>   \r\n                </>\r\n                :\r\n                <div className=\"selected-item \">\r\n                    <div className=\"p-l-20 p-t-20 p-r-20\"> {props.state.selectedItem.description}</div>\r\n                    {props.state.uniqueContact && props.state.uniqueContact.length ? <div className=\"p-l-20 p-t-20 p-r-20\">Contact :</div> :\"\"}\r\n                    {props.state.uniqueContact && props.state.uniqueContact.length ? props.state.uniqueContact.map(data => (\r\n                        <div className=\"p-l-20 \"><a href={`tel:${data}`}>{data}</a></div>\r\n                    )) : \"\"}\r\n                    <Row className=\"card-timestamp\">\r\n                   <Column><div className=\"p-l-20 p-t-20 p-r-20 p-b-10 bottom-text\">{moment(props.state.selectedItem.channelCreatedOn).fromNow()}</div></Column>\r\n                    <Column><div className=\"p-l-20 p-t-20 p-r-20 p-b-10 bottom-text\">Source: Twitter</div></Column>\r\n                     </Row>   \r\n                </div> }\r\n               \r\n               \r\n                <Row className=\"card-timestamp p-t-20\">\r\n                    <Row className=\"card-vote-buttons\" style={{cursor: 'pointer'}}><span className=\" working-text\"\r\n                                                                                         onClick=\r\n                                                                                             {() => {\r\n\r\n\r\n                                                                                                 props.incrementUpVote(props.state.selectedItem._id);\r\n\r\n                                                                                                 props.sendUpVoteRequest(props.state.selectedItem._id)\r\n                                                                                             }}\r\n                    ><img style={{width: \"20px\", paddingRight: \"1px\"}}\r\n                          src=\"/images/Working.svg\"></img>Working:{props.state.selectedItem.upVoteCount}</span>&nbsp;\r\n\r\n                        <span className=\"  not-working-text\" style={{cursor: 'pointer'}} onClick=\r\n                            {() => {\r\n                                props.incrementDownVote(props.state.selectedItem._id);\r\n                                props.sendDownVoteRequest(props.state.selectedItem._id)\r\n                            }}\r\n                        ><img style={{width: \"20px\", paddingRight: \"1px\"}} src=\"/images/NotWorking.svg\"></img>Not working:{props.state.selectedItem.downVoteCount}</span></Row>&nbsp;\r\n\r\n                    <Column className=\"card-footer-info\">\r\n                        <Row>\r\n            <FacebookShareButton style={{paddingRight:\"3px\"}} url={process.env.REACT_APP_WEBAPP_URL} quote={`${props.state.selectedItem.description} Found at`}>\r\n                <FacebookIcon  size={20} round={true}></FacebookIcon>\r\n            </FacebookShareButton>\r\n            <WhatsappShareButton style={{paddingRight:\"3px\"}} url={process.env.REACT_APP_WEBAPP_URL} title={`${props.state.selectedItem.description} Found at`}>\r\n                <WhatsappIcon size={20} round={true}></WhatsappIcon>\r\n            </WhatsappShareButton>\r\n            <TwitterShareButton  url={process.env.REACT_APP_WEBAPP_URL} title={`${props.state.selectedItem.description} Found at`}>\r\n                <TwitterIcon size={20} round={true}></TwitterIcon>\r\n            </TwitterShareButton>\r\n                        </Row>\r\n                    </Column>\r\n\r\n                </Row>\r\n             </div>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default LeadsComponent;","import React from \"react\";\r\nimport BaseComponent from '../../baseComponent'\r\nimport LeadsComponent from './lead'\r\nimport {getFilteredData,downVote,upVote} from \"../../../services/columns\"\r\nimport  Header  from \"../header\";\r\nimport {history} from '../../../managers/history'\r\n\r\n\r\n\r\nclass Category extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            allLeads:[],\r\n            selectedState:'',\r\n            selectedCategory:'',\r\n            isShowSharePopup:false,\r\n            popoverText:'',\r\n            selectedItem:{},\r\n            uniqueContact:[],\r\n            responseByIndex:{}\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n    console.log(\"tstvaxb,  x, \",this.props.location.state.name);\r\n    await this.setState({selectedState:this.props.location.state.name,selectedCategory:this.props.location.state.category});\r\n    await this.getAllLeads();\r\n\r\n    }\r\n\r\n    getAllLeads=async()=>{\r\n        let request={\r\n            state:this.state.selectedState.toLowerCase(),\r\n            category:this.state.selectedCategory.toUpperCase()\r\n        }\r\n        let responseByIndex = {};\r\n        console.log(\"dataaaa\",request);\r\n        const {responseData,error}=await getFilteredData(request);\r\n        console.log(\"getAllLeads\",responseData);\r\n        if(!responseData) return\r\n        responseData.forEach((obj, index) => {\r\n            responseByIndex[obj._id] = {\"index\": index, ...obj}\r\n        });\r\n        console.log(\"responseByLocation====\", responseByIndex)\r\n\r\n        this.setState({allLeads:responseData,responseByIndex})\r\n    }\r\n    backToSelectCategory=async()=>{\r\n        history.push({\r\n           pathname: `/state/${this.state.selectedState}/category`,\r\n           state:{name:this.state.selectedState}\r\n        })\r\n    }\r\n    sendUpVoteRequest = async(id) => {\r\n        let data = `${id}`\r\n\r\n        try{\r\n            let response = await upVote(data)\r\n            if(response.responseData && Array.isArray(response.responseData) && response.responseData.length){\r\n                this.setState({allLeads : response.responseData})\r\n            }\r\n        }catch(error){\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n    sendDownVoteRequest = async(id) => {\r\n        let data = `${id}`\r\n\r\n        try{\r\n            let response = await downVote(data)\r\n            if(response.responseData && Array.isArray(response.responseData) && response.responseData.length){\r\n                this.setState({allLeads : response.responseData})\r\n            }\r\n        }catch(error){\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n    handlePopoverOpen = async(item) => {\r\n        console.log(\"handlePopoverOpen\",item);\r\n        let uniqueContact=[]\r\n        uniqueContact=await this.getUniqueContact(item);\r\n        console.log(\"handlePopoverOpen unique===\",uniqueContact);\r\n        await this.setState({isShowSharePopup:true,popoverText:item.description,selectedItem:item,uniqueContact:uniqueContact});\r\n        console.log(\"handlePopoverOpen===========\",this.state.isShowSharePopup);\r\n\r\n      };\r\n    \r\n    handlePopoverClose = async() => {\r\n       await this.setState({popoverAnchor:null,isShowSharePopup:false});\r\n      };\r\n      getUniqueContact=async(data)=>{\r\n          if(!data && !data.phoneNumber.length){return []}\r\n          let uniqueContact=[]\r\n          data.phoneNumber.map((item)=>{\r\n            item=item.trim()\r\n              if(!uniqueContact.includes(item) && item.length>=10) uniqueContact.push(item)\r\n          })\r\n          console.log(\"getUniqueContact===\",uniqueContact);\r\n          return uniqueContact;\r\n      }\r\n    incrementUpVote = (id) => {\r\n        let index = this.state.responseByIndex[id].index;\r\n        this.state.allLeads[index].upVoteCount = this.state.allLeads[index].upVoteCount + 1;\r\n        this.setState({allLeads: this.state.allLeads})\r\n    }\r\n\r\n    incrementDownVote = (id) => {\r\n        let index = this.state.responseByIndex[id].index;\r\n        this.state.allLeads[index].downVoteCount = this.state.allLeads[index].downVoteCount + 1;\r\n        this.setState({allLeads: this.state.allLeads, originalResponseData: this.state.allLeads})\r\n\r\n    }\r\n\r\n    \r\n\r\n  \r\n    render() {\r\n        return (\r\n            <>\r\n            <Header isInfo={true}></Header>\r\n            <LeadsComponent\r\n                state={this.state}\r\n                backToSelectCategory={this.backToSelectCategory}\r\n                handlePopoverOpen={this.handlePopoverOpen}\r\n                handlePopoverClose={this.handlePopoverClose}\r\n                incrementUpVote={this.incrementUpVote}\r\n                incrementDownVote={this.incrementDownVote}\r\n                sendUpVoteRequest={this.sendUpVoteRequest}\r\n                sendDownVoteRequest={this.sendDownVoteRequest}\r\n            />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Category;","import React from 'react';\r\nimport {Router, Route} from 'react-router-dom';\r\nimport {Redirect, Switch} from \"react-router\";\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport getMuiTheme from 'material-ui/styles/getMuiTheme';\r\nimport {connect} from \"react-redux\";\r\nimport {Coloumn} from \"./modules\";\r\nimport {history} from \"./managers/history\";\r\nimport BaseComponent from \"./modules/baseComponent\";\r\nimport Main from './modules/mainComponent';\r\nimport AddInfo from './modules/add-info/index';\r\nimport States from './modules/mobile-view/select-states'\r\nimport Category from './modules/mobile-view/select-category';\r\nimport Leads from './modules/mobile-view/leads';\r\n\r\n\r\nclass Routes extends BaseComponent {\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <MuiThemeProvider muiTheme={getMuiTheme()}>\r\n                <Router history={history}>\r\n                    <Switch>\r\n                        <Route exact path={'/'} component={Main}/>\r\n                        {/* <Route exact path={'/:state'} component={Main}/>\r\n                        <Route exact path={'/:state/:category'} component={Main}/> */}\r\n                        <Route exact path=\"/about\" component={AddInfo} />\r\n                        <Route exact path=\"/state\" component={States}/>\r\n                        <Route exact path=\"/state/:value/category\" component={Category}/>\r\n                        <Route exact path=\"/state/:value/category/:cat\" component={Leads}/>\r\n                   \r\n                        <Redirect exact from='*' to=\"/\"/>\r\n                        \r\n                    </Switch>\r\n                </Router>\r\n            </MuiThemeProvider>);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {user: state.user}\r\n};\r\nexport default connect(mapStateToProps)(Routes);","let initialState = {\r\n    isLoggedIn: false,\r\n    loginFailure: null,\r\n    deviceId: null,\r\n    sessionToken: null,\r\n    loading: false,\r\n    isForgotPasswordSuccess: false\r\n};\r\nexport default function user(state = initialState, action) {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from \"redux\";\r\nimport user from \"./user\";\r\n\r\nexport default combineReducers({\r\n    user\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\nimport rootReducer from \"./reducers/index\";\r\nconst loggerMiddleware = createLogger();\r\n\r\nexport default  createStore(\r\n    rootReducer,\r\n    applyMiddleware(\r\n        thunkMiddleware,\r\n        loggerMiddleware\r\n    )\r\n);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Routes from './routes';\r\nimport store from './store.js';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './assets/styles/custom.css';\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <Routes component={Routes}/>\r\n            </Provider>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}