{"version":3,"sources":["modules/baseComponent.js","managers/history.js","modules/login/loginComponent.js","utility/index.js","modules/signup/signUpComponent.js","modules/column-cards/columnCardsComponents.js","modules/column-cards/index.js","modules/columns/credits.js","modules/columns/navbar.js","modules/columns/coulumnsComponents.js","constants/index.js","managers/httpService.js","services/columns.js","modules/columns/index.js","modules/mainComponent.js","routes.js","reducers/user.js","reducers/index.js","store.js","serviceWorker.js","index.js"],"names":["BaseComponent","props","Component","history","createBrowserHistory","loginComponent","ToastService","new","place","duration","maxCount","require","Cookies","signUpComponent","ColumnCardComponent","responseData","map","ite","Card","className","CardContent","Typography","variant","description","moment","channelCreatedOn","fromNow","ColumnCard","state","name","nameError","this","Credits","show","setShow","Select","Option","id","style","right","top","position","width","zIndex","height","overflowY","overflowX","background","borderRadius","boxShadow","fontWeight","fontSize","marginLeft","marginTop","marginBottom","ColumnComponent","children","push","key","useState","selected","setSelected","showCredits","setshowCredits","gutter","backgroundColor","marginRight","span","color","size","defaultValue","onChange","value","getStates","onClick","onRefresh","cursor","cardStyle","maxWidth","flex","borderRight","label","filterKey","filterKey2","col","xs","sm","md","lg","filter","row","category","toLowerCase","httpConstants","POST","PUT","GET","DELETE","APPLICATION_JSON","MULTIPART_FORM_DATA","APPLICATION_FORM_URLENCODED","IMAGE_PNG","httpService","method","headers","data","url","requestOptions","keepalive","body","JSON","stringify","fetch","then","response","ok","text","responseText","Promise","reject","parse","success","responseCode","message","statusText","err","catch","console","log","states","toadd","a","resolve","Coloumn","stateValue","Array","isArray","length","setState","selectedState","selectedTime","useStyles","makeStyles","root","navbar","borderColor","mx10","dropdown","paddingRight","Main","classes","Container","disableGutters","Routes","muiTheme","getMuiTheme","exact","path","component","from","to","connect","user","initialState","isLoggedIn","loginFailure","deviceId","sessionToken","loading","isForgotPasswordSuccess","combineReducers","action","type","loggerMiddleware","createLogger","createStore","rootReducer","applyMiddleware","thunkMiddleware","Boolean","window","location","hostname","match","LIMBApp","store","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.566d245f.chunk.js","sourcesContent":["//base class\r\nimport React, {Component} from \"react\";\r\n\r\nexport default class BaseComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n}","/**\r\n * Created by Ayush Kulshrestha on 18/09/2019.\r\n */\r\n\r\nimport { createBrowserHistory } from 'history';\r\n\r\n/**\r\n * The history library lets you easily manage session history anywhere JavaScript runs.\r\n * history abstracts away the differences in various environments and provides a minimal API\r\n * that lets you manage the history stack, navigate, and persist state between sessions.\r\n */\r\n\r\n\r\nexport const history = createBrowserHistory();\r\n","import React from 'react'\r\nimport {Column, Row} from \"simple-flexbox\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport CustomInput from \"../../common/components/CustomInput\";\r\nimport {history} from \"../../managers/history\";\r\n\r\n\r\nfunction LoginForm(props) {\r\n    let {state, togglePassword, onChangeEvent, onLoginClicked} = props;\r\n    return (\r\n        <Column className=\"w-450 pt-5 align-items-center \" horizontal={'center'}>\r\n            <form onSubmit={onLoginClicked} className=\"w-100\">\r\n                <Row className=\"justify-content-center w-100 fs-28 fc-dark-slate-blue\">\r\n                    Sign in to your account\r\n                </Row>\r\n\r\n                <div className=\"fc-dark-slate-blue fs-15 mt-5\">Email Address</div>\r\n                <CustomInput id=\"email\" type=\"text\" value={state ? state.email : \"\"} onChange={onChangeEvent}\r\n                             error={state ? state.emailError : \"\"} className=\"fs-15 p-2 mt-1\"/>\r\n\r\n                <Row className=\"fs-15 mt-4 justify-content-between\">\r\n                    <div className=\"fc-dark-slate-blue\">Password</div>\r\n                    <div className=\"fc-blue cursor-pointer\" onClick={togglePassword}>\r\n                        {state && state.isPasswordVisible ? \"Hide Password\" : \"Show Password\"}\r\n                    </div>\r\n                </Row>\r\n                <CustomInput id=\"password\" type={state && state.isPasswordVisible ? \"text\" : \"password\"}\r\n                             value={state ? state.password : \"\"} onChange={onChangeEvent}\r\n                             error={state ? state.passwordError : \"\"} className=\"fs-15 p-2 mt-1\"/>\r\n\r\n                <Row vertical={'center'} className=\"my-3\">\r\n                    <input style={{width: '15px'}} id=\"isRememberMeSelected\" type=\"checkbox\"\r\n                           className=\"checkbox-border p-3\"/>\r\n                    <Column className=\"ml-2 fs-15 fc-blue-grey font-weight-normal\">Remember me</Column>\r\n                </Row>\r\n\r\n                <Button type='submit' className=\"bg-blue outline-none text-transform-capitalize\r\n                fc-white w-100 py-2 fs-17 my-3 cursor-pointer\">\r\n                    Log in\r\n                </Button>\r\n                <Row className=\"w-100 justify-content-center\">Not able to login?\r\n                    <a className=\"fc-blue\">Recover Password</a>\r\n                </Row>\r\n            </form>\r\n        </Column>\r\n    );\r\n}\r\n\r\nfunction HeaderComponent(props) {\r\n    return (\r\n        <Row vertical=\"center\" className=\"justify-content-between\">\r\n            <img src=\"/images/limb_logo.svg\" alt='limb' className=\"w-150\"/>\r\n            <Row vertical=\"center\">\r\n                <Column vertical=\"center\" className=\"fc-brownish-grey fs-15 px-2 py-1\">New user?</Column>\r\n                <Column vertical=\"center\" className=\"fc-blue br-4 b-1-blue fs-17 px-2 py-1 cursor-pointer\"\r\n                        onClick={() => history.replace(\"/sign-up\")}>\r\n                    Sign Up\r\n                </Column>\r\n            </Row>\r\n        </Row>\r\n    )\r\n}\r\n\r\nfunction loginComponent(props) {\r\n    return (\r\n        <Column horizontal={'center'} className=\"w-100 p-3 min-vh-100 h-100 justify-content-between\">\r\n            <Column className=\"w-100\">\r\n                {HeaderComponent(props)}\r\n                <Row horizontal=\"center\" className=\"w-100 my-5\">\r\n                    {LoginForm(props)}\r\n                </Row>\r\n            </Column>\r\n            <Column className=\"jc-center w-100 align-items-center fs-14 my-3\">\r\n                <div className=\"fc-warm-grey\">©2019 LIMB CRE. All Rights Reserved.</div>\r\n                <div className=\"fc-blue\">Privacy Policy</div>\r\n            </Column>\r\n        </Column>\r\n    );\r\n}\r\n\r\nexport default loginComponent;","import \"react-s-alert/dist/s-alert-default.css\";\r\nimport {history} from \"../managers/history\";\r\nimport swal from \"sweetalert\";\r\nimport Cookies from \"universal-cookie\";\r\nimport React from \"react\";\r\nimport ToastService from 'react-material-toast';\r\nimport aws from \"aws-sdk\";\r\n\r\nconst toast = ToastService.new({\r\n    place: 'topRight',\r\n    duration: 1,\r\n    maxCount: 2\r\n});\r\nlet moment = require('moment');\r\nconst cookies = new Cookies();\r\nconst utility = {\r\n    getHeader,\r\n    apiFailureToast,\r\n    apiSuccessToast,\r\n    getAddedByObject,\r\n    getCompanyObject,\r\n    generateGUID,\r\n    basicAlert,\r\n    getActivityDateEpochRange,\r\n    getMiniAwardNominationModel,\r\n    getAddress,\r\n    decodeBase64,\r\n    validationAlert,\r\n    isNumber,\r\n    trackEvent,\r\n    navigateToPath,\r\n    toggleDropDown,\r\n    validateName,\r\n    validateEmail,\r\n    isEmpty,\r\n    isMenuActive,\r\n    isPasswordValid,\r\n    getSignedUrl,\r\n    uploadFileToS3,\r\n    showUnderDevelopment,\r\n    epochToDate,\r\n    getDateAfterOneYear,\r\n    generateCompanyLogoKey,\r\n    dateCompare,\r\n    isCompanyBalanceLow,\r\n    getMiniUserModel,\r\n    getMiniRecognitionUserModel,\r\n    getTimeFromNow,\r\n    epocToPrettyTime,\r\n    epocToPrettyTimeForFuture,\r\n    getLeaderBoardAggregatedQuery,\r\n    getTopSenderAggregatedQuery,\r\n    getTimeDifference,\r\n    getYearsList,\r\n    getTimestampFromDate,\r\n    extractDate,\r\n    secondsToTime,\r\n    getDateFormat,\r\n    changeDateFormat,\r\n    getAggregatedPercWercQueryObject\r\n};\r\nexport default utility;\r\n\r\n\r\nexport const dispatchAction = (type, data) => {\r\n    return dispatch => dispatch({type, data});\r\n};\r\n\r\nfunction trackEvent(event, eventData) {\r\n    // try {\r\n    //     if (!eventData)\r\n    //         mixpanel.track(event);\r\n    //     else\r\n    //         mixpanel.track(event, eventData);\r\n    // } catch (err) {\r\n    //     console.log(err)\r\n    // }\r\n}\r\n\r\nfunction getDateFormat() {\r\n    var my_date = new Date(2019, 0, 31);\r\n    console.log(my_date.toLocaleDateString());\r\n    // Initialize variables\r\n    var separator = \"\";\r\n    var first = \"\";\r\n    var second = \"\";\r\n    var third = \"\";\r\n    var date_parts = [];\r\n\r\n    // get separator : \"-\", \"/\" or \" \", format based on toLocaleDateString function\r\n    if (my_date.toLocaleDateString().split(\"-\").length == 3) {\r\n        separator = \" - \";\r\n        date_parts = my_date.toLocaleDateString().split(\"-\");\r\n    }\r\n    if (my_date.toLocaleDateString().split(\"/\").length == 3) {\r\n        separator = \" / \";\r\n        date_parts = my_date.toLocaleDateString().split(\"/\");\r\n    }\r\n    if (my_date.toLocaleDateString().split(\" \").length == 3) {\r\n        separator = \" \";\r\n        date_parts = my_date.toLocaleDateString().split(\" \");\r\n    }\r\n\r\n    // get first part\r\n    if (date_parts[0] == 2019) {\r\n        first = \"YYYY\";\r\n    } else if (date_parts[0] == 31) {\r\n        first = \"DD\";\r\n    } else {\r\n        if (date_parts[0].length <= 2) {\r\n            first = \"MM\";\r\n        } else {\r\n            first = \"MMM\";\r\n        }\r\n    }\r\n\r\n    // get second part\r\n    if (date_parts[1] == 2019) {\r\n        second = \"YYYY\";\r\n    } else if (date_parts[1] == 31) {\r\n        second = \"DD\";\r\n    } else {\r\n        if (date_parts[1].length <= 2) {\r\n            second = \"MM\";\r\n        } else {\r\n            second = \"MMM\";\r\n        }\r\n    }\r\n\r\n    // get third part\r\n    if (date_parts[2] == 2019) {\r\n        third = \"YYYY\";\r\n    } else if (date_parts[2] == 31) {\r\n        third = \"DD\";\r\n    } else {\r\n        if (date_parts[2].length <= 2) {\r\n            third = \"MM\";\r\n        } else {\r\n            third = \"MMM\";\r\n        }\r\n    }\r\n    // assembly\r\n    var format = first + \"/\" + second + \"/\" + third;\r\n    return format;\r\n}\r\n\r\n\r\nfunction getHeader() {\r\n    // return {\r\n    //     'session-token': sessionManager.getDataFromCookies(genericConstants.COOKIES_KEY.SESSION_TOKEN),\r\n    //     'device-id': sessionManager.getDataFromCookies(genericConstants.COOKIES_KEY.DEVICE_ID),\r\n    //     'Content-Type': httpConstants.CONTENT_TYPE.APPLICATION_JSON\r\n    // };\r\n}\r\n\r\nfunction isNumber(n) {\r\n    return !isNaN(parseFloat(n)) && isFinite(n);\r\n}\r\n\r\n//TODO: update apiConstant.API_FAILURE\r\nfunction apiFailureToast(message) {\r\n    toast.error(message ? message : \"apiConstant.API_FAILURE\");\r\n}\r\n\r\nfunction apiSuccessToast(msg) {\r\n    toast.success(msg ? msg : \"apiConstant.API_SUCCESS\");\r\n}\r\n\r\nfunction generateGUID() {\r\n    var nav = window.navigator;\r\n    var screen = window.screen;\r\n    var guid = nav.mimeTypes.length;\r\n    guid += nav.userAgent.replace(/\\D+/g, '');\r\n    guid += nav.plugins.length;\r\n    guid += screen.height || '';\r\n    guid += screen.width || '';\r\n    guid += screen.pixelDepth || '';\r\n    return guid;\r\n}\r\n\r\nfunction basicAlert(message) {\r\n    swal({\r\n        title: message,\r\n        icon: '/images/alert-icon.png',\r\n    })\r\n}\r\n\r\nfunction validationAlert(message, type = 'info') {\r\n    swal({\r\n        title: message,\r\n        icon: type\r\n    })\r\n}\r\n\r\nfunction getTimeDifference(timeStampTo) {\r\n    let minFive = 300000;\r\n    let oneDay = 86400000;\r\n    let difference = \"\";\r\n    let am = \" AM\";\r\n    let pm = \" PM\";\r\n    let hh = epochToDate(timeStampTo, 'hh');\r\n    let mm = epochToDate(timeStampTo, 'mm');\r\n    let dateFormat = epochToDate(timeStampTo, 'DD MMM YYYY');\r\n    let hours = new Date(timeStampTo).getHours();\r\n    let timeDifference = new Date().getTime() - timeStampTo;\r\n    if (timeDifference < oneDay) {\r\n        if (timeDifference < minFive) {\r\n            difference = \"Just Now\";\r\n        } else {\r\n            if (hours < 12)\r\n                difference = \"Today at \" + hh + \":\" + mm + am;\r\n            else\r\n                difference = \"Today at \" + hh + \":\" + mm + pm;\r\n        }\r\n    } else {\r\n        if (hours < 12)\r\n            difference = dateFormat + \", \" + hh + ':' + mm + am;\r\n        else\r\n            difference = dateFormat + \", \" + hh + ':' + mm + pm;\r\n    }\r\n    return difference;\r\n}\r\n\r\nfunction epochToDate(timeStamp, timeFormat) {\r\n    timeStamp = Math.floor(timeStamp);  //to convert to integer if seconds is String.\r\n    let dateObject = new Date(timeStamp);\r\n    return moment(dateObject).format(timeFormat)//DD MMM YYYY\r\n}\r\n\r\n\r\nfunction getTimeFromNow(timeStamp) {\r\n    return moment(timeStamp, \"YYYYMMDD\").fromNow();\r\n}\r\n\r\nfunction dateCompare(timeStampFrom, timeStampTo) {\r\n    let diffTime = (timeStampFrom * 1000 - timeStampTo);\r\n    let diffDays = (diffTime / (1000 * 60 * 60 * 24));\r\n    return diffDays;\r\n}\r\n\r\nfunction getDateAfterOneYear(timeStamp) {\r\n    timeStamp = Math.floor(timeStamp);  //to convert to integer if seconds is String.\r\n    let dateObject = new Date(timeStamp);\r\n    return moment(dateObject).add(1, 'years').valueOf();\r\n}\r\n\r\nfunction getActivityDateEpochRange(activityDate) {\r\n    let currentDate = new Date();\r\n    currentDate.setHours(0, 0, 0, 0);\r\n    let startDayEpochOfCurrentWeek = moment().startOf('isoweek').unix() * 1000;\r\n    let startDayEpochOfCurrentMonth = moment().startOf('month').unix() * 1000;\r\n    let startDayEpochOfCurrentQuarter = moment().startOf('quarter').unix() * 1000;\r\n    let startDayEpochOfCurrentYear = moment().startOf('year').unix() * 1000;\r\n    let endDayEpochOfCurrentWeek = moment().endOf('isoweek').unix() * 1000;\r\n    let endDayEpochOfCurrentMonth = moment().endOf('month').unix() * 1000;\r\n    let endDayEpochOfCurrentQuarter = moment().endOf('quarter').unix() * 1000;\r\n    let endDayEpochOfCurrentYear = moment().endOf('year').unix() * 1000;\r\n    let day, start;\r\n    switch (activityDate) {\r\n        case \"Today\":\r\n            return {start: currentDate.getTime(), end: new Date().getTime()};\r\n        case \"Yesterday\":\r\n            day = new Date(currentDate);\r\n            day.setDate(currentDate.getDate() - 1);\r\n            return {start: day.getTime(), end: currentDate.getTime()};\r\n        case \"Last seven days\":\r\n            day = new Date(currentDate);\r\n            day.setDate(currentDate.getDate() - 7);\r\n            return {start: day.getTime(), end: currentDate.getTime()};\r\n        case \"Last fourteen days\":\r\n            day = new Date(currentDate);\r\n            day.setDate(currentDate.getDate() - 14);\r\n            return {start: day.getTime(), end: currentDate.getTime()};\r\n        case \"Last twenty one days\":\r\n            day = new Date(currentDate);\r\n            day.setDate(currentDate.getDate() - 21);\r\n            return {start: day.getTime(), end: currentDate.getTime()};\r\n        case \"Last Week\":\r\n            start = new Date(startDayEpochOfCurrentWeek);\r\n            start.setDate(start.getDate() - 7);\r\n            return {start: start.getTime(), end: startDayEpochOfCurrentWeek};\r\n        case \"Last two weeks\":\r\n            start = new Date(startDayEpochOfCurrentWeek);\r\n            start.setDate(start.getDate() - 14);\r\n            return {start: start.getTime(), end: startDayEpochOfCurrentWeek};\r\n        case \"Last three weeks\":\r\n            start = new Date(startDayEpochOfCurrentWeek);\r\n            start.setDate(start.getDate() - 21);\r\n            return {start: start.getTime(), end: startDayEpochOfCurrentWeek};\r\n        case \"Last Month\":\r\n            start = new Date(startDayEpochOfCurrentMonth);\r\n            start.setMonth(start.getMonth() - 1);\r\n            return {start: start.getTime(), end: startDayEpochOfCurrentMonth};\r\n        case \"Last Quarter\":\r\n            start = new Date(startDayEpochOfCurrentQuarter);\r\n            start.setMonth(start.getMonth() - 3);\r\n            return {start: start.getTime(), end: startDayEpochOfCurrentQuarter};\r\n        case \"Last Year\":\r\n            console.log(startDayEpochOfCurrentYear)\r\n            start = new Date(startDayEpochOfCurrentYear);\r\n            start.setFullYear(start.getFullYear() - 1);\r\n            return {start: start.getTime(), end: startDayEpochOfCurrentYear};\r\n        case \"This Week\":\r\n            return {start: startDayEpochOfCurrentWeek, end: endDayEpochOfCurrentWeek};\r\n        case \"This Quarter\":\r\n            return {start: startDayEpochOfCurrentQuarter, end: endDayEpochOfCurrentQuarter};\r\n        case \"This Year\":\r\n            return {start: startDayEpochOfCurrentYear, end: endDayEpochOfCurrentYear};\r\n        case \"Current Month\":\r\n            return {start: startDayEpochOfCurrentMonth, end: endDayEpochOfCurrentMonth};\r\n        default:\r\n            return {start: currentDate.getTime(), end: new Date().getTime()};\r\n    }\r\n\r\n}\r\n\r\nfunction getAddress(addressObj) {\r\n    if (!addressObj || !Object.keys(addressObj).length || !(addressObj.addressLine1 || addressObj.poBoxNumber))\r\n        return \"\";\r\n    return (\r\n        <span>\r\n            {addressObj.addressLine1 ? addressObj.addressLine1 : `PO Box ${addressObj.poBoxNumber}`}<br/>\r\n            {addressObj.addressLine2 ? <span>{addressObj.addressLine2}<br/></span> : ''}\r\n            {addressObj.city}, {addressObj.state} {addressObj.zipCode}<br/>\r\n            {addressObj.country}\r\n        </span>\r\n    )\r\n}\r\n\r\nfunction decodeBase64(s) {\r\n    let e = {}, i, b = 0, c, x, l = 0, a, r = '', w = String.fromCharCode, L = s.length;\r\n    let A = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n    for (i = 0; i < 64; i++) {\r\n        e[A.charAt(i)] = i;\r\n    }\r\n    for (x = 0; x < L; x++) {\r\n        c = e[s.charAt(x)];\r\n        b = (b << 6) + c;\r\n        l += 6;\r\n        while (l >= 8) {\r\n            ((a = (b >>> (l -= 8)) & 0xff) || (x < (L - 2))) && (r += w(a));\r\n        }\r\n    }\r\n    return r;\r\n}\r\n\r\nfunction navigateToPath(path) {\r\n    history.push(path)\r\n}\r\n\r\nfunction toggleDropDown(dropdownID) {\r\n    // $(\"#\" + dropdownID).toggle(\"show\");\r\n}\r\n\r\nfunction validateName(name) {\r\n    let reg = /[A-Z][a-zA-Z]*/;\r\n    return reg.test(name)\r\n}\r\n\r\nfunction validateEmail(email) {\r\n    let reg = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return reg.test(email);\r\n}\r\n\r\nfunction isPasswordValid(password) {\r\n    let reg = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/;\r\n    return reg.test(password);\r\n}\r\n\r\nfunction isEmpty(string) {\r\n    return !string || string.trim().length === 0;\r\n}\r\n\r\nfunction isMenuActive(path) {\r\n    return window.location.pathname.includes(path);\r\n}\r\n\r\nfunction getAddedByObject(propsOfComponent) {\r\n    if (!propsOfComponent || !propsOfComponent.user || !propsOfComponent.user.userDetails)\r\n        return null;\r\n    let user = propsOfComponent.user.userDetails;\r\n    return {\r\n        privateKey: user.privateKey,\r\n        publicKey: user.publicKey,\r\n        email: user.email,\r\n        wercPlaceID: user.wercPlaceID,\r\n        photo: user.photo ? user.photo : '',\r\n        designation: user.designation ? user.designation : {},\r\n        department: user.department ? user.department : {},\r\n        name: (user.firstName || user.lastName) ? (user.firstName + \" \" + user.lastName) : (user.company && user.company.name ? user.company.name : \"\"),\r\n        _id: user._id\r\n    };\r\n}\r\n\r\nfunction getMiniUserModel(user) {\r\n    if (!user)\r\n        return null;\r\n    return {\r\n        privateKey: user.privateKey,\r\n        publicKey: user.publicKey,\r\n        photo: user.photo ? user.photo : '',\r\n        email: user.email,\r\n        wercPlaceID: user.wercPlaceID,\r\n        designation: user.designation ? user.designation : {},\r\n        department: user.department ? user.department : {},\r\n        name: (user.firstName || user.lastName) ? (user.firstName + \" \" + user.lastName) : user.company.name,\r\n        _id: user._id\r\n    };\r\n}\r\n\r\nfunction getMiniRecognitionUserModel(recognizeUser) {\r\n    if (!recognizeUser)\r\n        return null;\r\n    return {\r\n        name: recognizeUser.name,\r\n        clapWeight: recognizeUser.clapWeight,\r\n        _id: recognizeUser._id\r\n    };\r\n}\r\n\r\n\r\nfunction getMiniAwardNominationModel(nomination) {\r\n    if (!nomination)\r\n        return null;\r\n    return {\r\n        name: nomination.name,\r\n        photo: nomination.photo,\r\n        _id: nomination._id\r\n    };\r\n}\r\n\r\n\r\nfunction generateRandomAlphaNumericString(length) {\r\n    var randomAlphaNumericString = \"\";\r\n    var charset = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n    for (var i = 0; i < length; i++)\r\n        randomAlphaNumericString += charset.charAt(Math.floor(Math.random() * charset.length));\r\n    return randomAlphaNumericString;\r\n}\r\n\r\nfunction generateCompanyLogoKey() {\r\n    var currentTimeStamp = (new Date().getTime()).toString();\r\n    return currentTimeStamp + \"_\" + generateRandomAlphaNumericString(13);\r\n}\r\n\r\nfunction uploadFileToS3(fileObject, fileName, mimeType, isPublic = false) {\r\n    let config = {\r\n        accessKeyId: process.env.REACT_APP_AWS_ACCESS_KEY,\r\n        secretAccessKey: process.env.REACT_APP_AWS_SECRET_KEY\r\n    }\r\n    aws.config.update(config);\r\n    console.log(\"config\", config);\r\n    console.log(\"fileObject\", fileObject);\r\n    const S3 = new aws.S3();\r\n    const params = {\r\n        Body: fileObject,\r\n        Bucket: process.env.REACT_APP_AWS_S3_BUCKET_NAME,\r\n        ContentType: mimeType,\r\n        Key: fileName\r\n    };\r\n    if (isPublic)\r\n        params.ACL = 'public-read';\r\n\r\n    return new Promise(function (resolve, reject) {\r\n        S3.upload(params, function (err, uploadData) {\r\n            if (err)\r\n                reject(err);\r\n            resolve(uploadData);\r\n        });\r\n    });\r\n}\r\n\r\nfunction getSignedUrl(fileName) {\r\n    if (!fileName)\r\n        return \"\";\r\n    aws.config.update({\r\n        accessKeyId: process.env.REACT_APP_AWS_ACCESS_KEY,\r\n        secretAccessKey: process.env.REACT_APP_AWS_SECRET_KEY\r\n    });\r\n    aws.config.region = process.env.REACT_APP_AWS_S3_BUCKET_REGION;\r\n    const s3 = new aws.S3();\r\n    const params = {\r\n        Bucket: process.env.REACT_APP_AWS_S3_BUCKET_NAME,\r\n        Key: fileName ? fileName : '',\r\n        Expires: 600000,\r\n    };\r\n    let signedUrl = s3.getSignedUrl('getObject', params);\r\n    return signedUrl;\r\n}\r\n\r\nfunction showUnderDevelopment() {\r\n    basicAlert(\"Under Development\")\r\n}\r\n\r\nfunction getCompanyObject(propsOfComponent) {\r\n    if (!propsOfComponent || !propsOfComponent.user || !propsOfComponent.user.userDetails || !propsOfComponent.user.userDetails.company)\r\n        return null;\r\n    return propsOfComponent.user.userDetails.company;\r\n}\r\n\r\nfunction isCompanyBalanceLow(company) {\r\n    if (!company || !company.tokenEconomy || !company.tokenEconomy) {\r\n        console.log('return false')\r\n        return false;\r\n    }\r\n    let remainingMonth = (new Date(company.tokenEconomy.endDate)).getMonth() - (new Date()).getMonth() +\r\n        (12 * ((new Date(company.tokenEconomy.endDate)).getFullYear() - (new Date()).getFullYear()));\r\n    if (company.tokenEconomy.PERCBalance < (company.tokenEconomy.monthlyPERCAllocation * remainingMonth))\r\n        return true;\r\n    return false;\r\n}\r\n\r\nfunction getYearsList(addedOn = new Date().getTime()) {\r\n    let durationList = [];\r\n    for (let i = new Date(addedOn).getFullYear(); i <= new Date().getFullYear(); i++) {\r\n        durationList.push(i)\r\n    }\r\n    return durationList;\r\n}\r\n\r\nfunction epocToPrettyTime(seconds) {\r\n    seconds = Math.floor(seconds);//to convert to integer if seconds is String.\r\n    var nowTimeMilliseconds = (new Date).getTime();\r\n    var date = new Date(seconds);\r\n    var dateObject = moment(date).format('DD MMMM YYYY');\r\n    //var dateObject = moment(date).format('ddd, MMM DD hh:mm A');\r\n    seconds = Math.floor((nowTimeMilliseconds / 1000) - (seconds / 1000));\r\n    var interval = Math.floor(seconds / 172800);\r\n    if (interval >= 1)\r\n        return dateObject;\r\n    //if (interval >= 1) return dateObject+\" \"+moment.tz(moment.tz.guess()).format('z');\r\n    interval = Math.floor(seconds / 86400);\r\n    if (interval >= 1)\r\n        return \"yesterday\";\r\n\r\n    interval = Math.floor(seconds / 3600);\r\n    if (interval >= 1) {\r\n        if (interval === 1)\r\n            return interval + \" hr ago\";\r\n        return interval + \" hrs ago\";\r\n    }\r\n    interval = Math.floor(seconds / 60);\r\n    if (interval >= 1) {\r\n        if (interval === 1)\r\n            return interval + \" minute ago\";\r\n        return interval + \" minutes ago\";\r\n    } else\r\n        return \"Just now\";\r\n}\r\n\r\nfunction epocToPrettyTimeForFuture(seconds) {\r\n    seconds = Math.floor(seconds);//to convert to integer if seconds is String.\r\n    var nowTimeMilliseconds = (new Date).getTime();\r\n    var date = new Date(seconds);\r\n    var dateObject = moment(date).format('DD MMMM YYYY');\r\n    //var dateObject = moment(date).format('ddd, MMM DD hh:mm A');\r\n    seconds = Math.floor((seconds / 1000) - (nowTimeMilliseconds / 1000));\r\n    var interval = Math.floor(seconds / 86400);\r\n    if (interval >= 1)\r\n        return interval + ' days';\r\n\r\n    interval = Math.floor(seconds / 3600);\r\n    if (interval >= 1) {\r\n        if (interval == 1)\r\n            return interval + \" hr\";\r\n        return interval + \" hrs\";\r\n    }\r\n    interval = Math.floor(seconds / 60);\r\n    if (interval >= 1) {\r\n        if (interval == 1)\r\n            return interval + \" minute\";\r\n        return interval + \" minutes\";\r\n    } else\r\n        return \"0 minute\";\r\n}\r\n\r\n\r\nfunction getLeaderBoardAggregatedQuery(propsOfComponent, skip = 0, limit = 0, matchObj = {}) {\r\n    if (!propsOfComponent || !propsOfComponent.user || !propsOfComponent.user.userDetails || !propsOfComponent.user.userDetails.company)\r\n        return null;\r\n    let queryObj = [];\r\n\r\n    //Match Object for the conditions-\r\n    let feedType = [];\r\n    feedType.push({'entityData.feedType': 'ADD_RECOGNITION'});\r\n    feedType.push({'entityData.feedType': 'ADD_NOMINATION'});\r\n    matchObj['$or'] = feedType;\r\n    matchObj['entityData.company.id'] = propsOfComponent.user.userDetails.company.id;\r\n\r\n    //addField Object for the conditions-\r\n    let addFieldObj = {\r\n        'recipient': {\r\n            '$arrayToObject': {\r\n                '$map': {\r\n                    'input': '$entityData.recipients',\r\n                    'as': 'recipients',\r\n                    'in': {'k': 'userDetails', 'v': '$$recipients'}\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    //Group object for grouping-\r\n    let groupObj = {};\r\n    groupObj._id = \"$entityData.recipients._id\";\r\n    groupObj.PERCBalance = {\"$sum\": \"$entityData.PERCValue\"};\r\n    groupObj.firstName = {\"$first\": \"$entityData.recipients.name\"};\r\n\r\n    queryObj.push({\"$match\": matchObj});\r\n    // queryObj.push({\"$addFields\": addFieldObj});\r\n    queryObj.push({\"$group\": groupObj});\r\n    queryObj.push({\"$sort\": {'PERCBalance': -1}});\r\n    queryObj.push({\"$limit\": limit});\r\n    queryObj.push({\"$skip\": skip});\r\n\r\n    return queryObj;\r\n}\r\n\r\nfunction getTopSenderAggregatedQuery(propsOfComponent, skip = 0, limit = 0, matchObj = {}) {\r\n    if (!propsOfComponent || !propsOfComponent.user || !propsOfComponent.user.userDetails || !propsOfComponent.user.userDetails.company)\r\n        return null;\r\n    let queryObj = [];\r\n\r\n    //Match Object for the conditions-\r\n    let feedType = [];\r\n    feedType.push({'entityData.feedType': 'ADD_RECOGNITION'});\r\n    feedType.push({'entityData.feedType': 'ADD_NOMINATION'});\r\n    matchObj['$or'] = feedType;\r\n    matchObj['entityData.company.id'] = propsOfComponent.user.userDetails.company.id;\r\n\r\n    //Group object for grouping-\r\n    let groupObj = {};\r\n    groupObj._id = \"$entityData.addedBy.email\";\r\n    groupObj.PERCBalance = {\"$sum\": \"$entityData.PERCValue\"};\r\n    groupObj.firstName = {\"$first\": \"$entityData.addedBy.name\"};\r\n\r\n    //Group object for grouping-\r\n    let sortObj = {};\r\n    sortObj._id = \"$recipient.userDetails.email\";\r\n\r\n    queryObj.push({\"$match\": matchObj});\r\n    queryObj.push({\"$group\": groupObj});\r\n\r\n    // queryObj.push({\"$sort\": {'PERCBalance':-1}});\r\n\r\n    queryObj.push({\"$limit\": limit});\r\n    queryObj.push({\"$skip\": skip});\r\n    queryObj.push({\"$sort\": {'PERCBalance': -1}});\r\n\r\n    return queryObj;\r\n}\r\n\r\nfunction secondsToTime(milliseconds) {\r\n    let date = new Date(milliseconds)\r\n    var duration = moment.duration(milliseconds, 'milliseconds');\r\n    return (duration.hours() + \":\" + duration.minutes() + \":\" + duration.seconds())\r\n    let dateObject = moment(date, 'hh:mm:ss').fromNow();\r\n    return dateObject\r\n\r\n    // let hours = Math.floor(secs / (60 * 60));\r\n    //\r\n    // let divisor_for_minutes = secs % (60 * 60);\r\n    // let minutes = Math.floor(divisor_for_minutes / 60);\r\n    //\r\n    // let divisor_for_seconds = divisor_for_minutes % 60;\r\n    // let seconds = Math.ceil(divisor_for_seconds);\r\n    //\r\n    // let obj = {\r\n    //     \"h\": hours,\r\n    //     \"m\": minutes,\r\n    //     \"s\": seconds\r\n    // };\r\n    // return obj;\r\n}\r\n\r\nfunction getTimestampFromDate(year, month, date = 0) {\r\n    let days = new Date(year, month, date).getDate();\r\n    return new Date(year + \"/\" + month + \"/\" + days).getTime();\r\n\r\n}\r\n\r\nfunction extractDate(date, getType) {\r\n    console.log(\"date\", typeof date, \"getType\", getType);\r\n    switch (getType) {\r\n        case \"DAY\":\r\n            return new Date(date.toString()).getDate();\r\n            break;\r\n        case \"MONTH\":\r\n            return new Date(date.toString()).getMonth() + 1;\r\n            break;\r\n        case \"YEAR\":\r\n            return new Date(date.toString()).getFullYear();\r\n            break;\r\n        default :\r\n            return date;\r\n    }\r\n\r\n}\r\n\r\nfunction changeDateFormat(date, newFormat) {\r\n    let currentFormat = getDateFormat()\r\n    return moment(date, currentFormat).format(newFormat)\r\n}\r\n\r\nfunction getAggregatedPercWercQueryObject(start, end, skip, id) {\r\n    console.log(start, end, skip, id);\r\n    return [\r\n        {\r\n            \"$match\": {\r\n                \"$and\": [\r\n                    {\r\n                        \"date\": {\r\n                            \"$gte\": start.toString()\r\n                        }\r\n                    },\r\n                    {\r\n                        \"date\": {\r\n                            \"$lte\": end.toString()\r\n                        }\r\n                    }\r\n                ],\r\n                \"companyId\": id.toString()\r\n            }\r\n\r\n        },\r\n        {\r\n            \"$skip\": skip\r\n        }\r\n    ];\r\n}\r\n","import React from 'react'\r\nimport {Column, Row} from \"simple-flexbox\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport CustomInput from \"../../common/components/CustomInput\";\r\nimport {history} from \"../../managers/history\";\r\nimport Divider from \"@material-ui/core/Divider/Divider\";\r\n\r\n\r\nfunction SubscriptionTypeComponent(props) {\r\n    return (\r\n        <div\r\n            className=\"p-3 cursor-pointer fc-dark-slate-blue text-center m-3 w-250 bg-white b-1-white subscription-plan-card-shadow z-index-100 br-4\">\r\n            <div className=\"fs-20 font-weight-bold\">Loan Seller</div>\r\n            <div className=\"fs-15 my-3\">Create, transfer, sell and\r\n                publish Loan Data Records\r\n                on Blockchain\r\n            </div>\r\n            <img/>\r\n            <Button className=\"my-3 bg-blue px-2 fc-white fs-17 outline-none text-transform-capitalize\">\r\n                Buy this plan\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction SubscriptionPlanComponent(props) {\r\n    let {state, togglePassword, onChangeEvent, onLoginClicked} = props;\r\n    return (\r\n        <Column className=\"align-items-center my-5\" horizontal={'center'}>\r\n            <div className=\"w-100 fs-28 text-center fc-dark-slate-blue\">\r\n                LIMB CRE Plans for your Business\r\n            </div>\r\n            <div className=\"w-100 fs-20 text-center fc-dusky-blue\">\r\n                Select a plan to match your company type\r\n            </div>\r\n            <Row className=\"mt-4\">\r\n                {SubscriptionTypeComponent(props)}\r\n                {SubscriptionTypeComponent(props)}\r\n                {SubscriptionTypeComponent(props)}\r\n                {SubscriptionTypeComponent(props)}\r\n            </Row>\r\n        </Column>\r\n    );\r\n}\r\n\r\nfunction SignUpForm(props) {\r\n    let {state, togglePassword, onChangeEvent, onLoginClicked} = props;\r\n    return (\r\n        <Column className=\"w-450 pl-5 ml-3 border-left py-3 my-3 align-items-center fc-dark-slate-blue\"\r\n                horizontal={'center'}>\r\n            <form onSubmit={onLoginClicked} className=\"w-100\">\r\n\r\n                <label className=\"text-left w-100 fs-20\"><span\r\n                    className='font-weight-bold'>Create your account</span> (all field required)</label>\r\n\r\n                <div className=\"fs-15 mt-3 font-weight-bold\">Full Name</div>\r\n                <CustomInput id=\"name\" type=\"text\" value={state ? state.name : \"\"} onChange={onChangeEvent}\r\n                             error={state ? state.nameError : \"\"} className=\"fs-15 p-2 mt-1\"/>\r\n\r\n                <div className=\"fs-15 mt-2 font-weight-bold \">Email Address</div>\r\n                <CustomInput id=\"email\" type=\"text\" value={state ? state.email : \"\"} onChange={onChangeEvent}\r\n                             error={state ? state.emailError : \"\"} className=\"fs-15 p-2 mt-1\"/>\r\n\r\n                <Row className=\"fs-15 mt-2 font-weight-bold\">Password</Row>\r\n                <CustomInput id=\"password\" type={\"password\"} value={state ? state.password : \"\"}\r\n                             onChange={onChangeEvent} error={state ? state.passwordError : \"\"}\r\n                             className=\"fs-15 p-2 mt-1\"/>\r\n\r\n                <Row className=\"fs-15 mt-2 font-weight-bold\">Confirm Password</Row>\r\n                <CustomInput id=\"confirmPassword\" type={\"password\"} value={state ? state.confirmPassword : \"\"}\r\n                             onChange={onChangeEvent} error={state ? state.confirmPasswordError : \"\"}\r\n                             className=\"fs-15 p-2 mt-1\"/>\r\n\r\n                <Button type='submit' className=\"bg-blue outline-none text-transform-capitalize\r\n                fc-white w-100 py-2 fs-17 mt-4 cursor-pointer\">\r\n                    Continue\r\n                </Button>\r\n                <div className=\"w-100 text-left fs-15 my-1\">By clicking on continue, you agree to the LIMB CRE\r\n                    <a className=\"fc-blue\"> Terms of Service </a>\r\n                    and <a className=\"fc-blue\">Privacy Policy.</a>\r\n                </div>\r\n            </form>\r\n        </Column>\r\n    );\r\n}\r\n\r\nfunction SelectedSubscriptionComponent(props) {\r\n    return (\r\n        <div\r\n            className=\"p-3 mx-3 cursor-pointer fc-dark-slate-blue text-center m-3 w-250 bg-white\">\r\n            <div className=\"fs-20 font-weight-bold\">Loan Seller</div>\r\n            <div className=\"fs-15 my-3\">Create, transfer, sell and\r\n                publish Loan Data Records\r\n                on Blockchain\r\n            </div>\r\n            <img/>\r\n            <Button className=\"my-3 bg-blue px-2 fc-white fs-17 outline-none text-transform-capitalize\">\r\n                Buy this plan\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction SignUpComponent(props) {\r\n    let {state, togglePassword, onChangeEvent, onLoginClicked} = props;\r\n    return (\r\n        <Row className=\"align-items-center my-5\" horizontal={'center'}>\r\n            {SelectedSubscriptionComponent(props)}\r\n            {SignUpForm(props)}\r\n        </Row>\r\n    );\r\n}\r\n\r\nfunction HeaderComponent(props) {\r\n    return (\r\n        <Row vertical=\"center\" className=\"justify-content-between w-100\">\r\n            <img src=\"/images/limb_logo.svg\" alt='limb' className=\"w-150\"/>\r\n            <Row vertical=\"center\">\r\n                <Column vertical=\"center\" className=\"fc-brownish-grey fs-15 px-2 py-1\">Existing user?</Column>\r\n                <Column vertical=\"center\" className=\"fc-blue br-4 b-1-blue fs-17 px-2 py-1 cursor-pointer\"\r\n                        onClick={() => history.replace(\"/\")}>\r\n\r\n                    Log in</Column>\r\n            </Row>\r\n        </Row>\r\n    )\r\n}\r\n\r\nfunction signUpComponent(props) {\r\n    return (\r\n        <Column horizontal={'center'} className=\"w-100 p-3 min-vh-100\">\r\n            {HeaderComponent(props)}\r\n            {/*{SubscriptionPlanComponent(props)}*/}\r\n            {SignUpComponent(props)}\r\n        </Column>\r\n    );\r\n}\r\n\r\nexport default signUpComponent;","import React from 'react'\r\nimport './column-cards.css'\r\nimport 'antd/dist/antd.css';\r\nimport { Avatar, Card, CardContent, Typography } from '@material-ui/core';\r\nimport moment from 'moment'\r\nfunction ColumnCardComponent(props) {\r\n    return (\r\n        <>\r\n            {props.responseData && props.responseData.map(ite => (\r\n                <Card className=\"m-10\">\r\n                    <CardContent className=\"card-desc-container\">\r\n                        <Typography className=\"mb-10\" variant=\"body2\">\r\n                              \r\n                        </Typography>\r\n                        <Typography className=\"card-desc\" variant=\"body2\">{ite.description}</Typography>\r\n                        <Typography className=\"card-timestamp\" variant=\"body2\">{moment(ite.channelCreatedOn).fromNow()}</Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            ))}\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default ColumnCardComponent;","import React from \"react\";\r\nimport BaseComponent from '../baseComponent'\r\nimport ColumnCardComponent from \"./columnCardsComponents\";\r\n\r\nclass ColumnCard extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: \"\",\r\n            nameError: \"\",\r\n          \r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n  \r\n\r\n    render() {\r\n        return (\r\n            <ColumnCardComponent responseData={this.props.responseData} state={this.state} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default ColumnCard;","import React, { useState } from 'react'\r\nimport { Row, Col } from 'antd';\r\nimport { Select, Radio } from 'antd';\r\nimport './column.css'\r\nfunction Credits({show,setShow}) {\r\n    const { Option } = Select;\r\n    \r\n    return (\r\n       <>\r\n        {show? <div className=\"scrollbar\" id=\"style-1\" style={{right:'80px',top:'33px',position:'absolute',width:'290px',zIndex:'100000',height:'300px',overflowY:'scroll',overflowX:'hidden',background:'white',borderRadius:'5px',boxShadow:'0px 0px 3px #0005'}}>\r\n            <p style={{fontWeight:'700',fontSize:'17px',marginLeft:'10px',marginTop:'15px',marginBottom:'5px'}}>\r\n                Contributors\r\n            </p>\r\n            <p style={{fontWeight:'400',fontSize:'11px',marginLeft:'10px',marginTop:'15px',marginBottom:'5px'}}>\r\n            We are a team working to help people find relevant and verified information at the time of the pandemic. Here is the list of contributors:\r\n\r\n            <br/>\r\n            <br/>\r\n            <li>Akash Takyar</li>\r\n            <li>Kapil Saxena</li>\r\n            <li>Prashant Raghav</li>\r\n            <li>Anurag Kumar</li>\r\n            <li>Ayush Kulshrestha</li>\r\n            <li>Chandrika</li>\r\n            <li>Rituraj</li>\r\n            <li>Nishant Garg</li>\r\n            <li>Gaurav Chauhan</li>\r\n            <li>Sristi Rajput</li>\r\n            <li>Dhanya Mary Biju</li>\r\n            <li>Sharad Gupta</li>\r\n            <li>Shivansh Mehendiratta</li>\r\n            <li>Jayesh Gadewar</li>\r\n            <li>Srinjoy Chowdhary</li>\r\n            <br/>\r\n            For any further queries please contact at covidindiahelp.info@gmail.com\r\n            </p>\r\n        </div>:\"\"}\r\n       </>\r\n    );\r\n}\r\n\r\nexport default Credits;","import React, { useState } from 'react'\r\nimport { Row, Col } from 'antd';\r\nimport { Select, Radio } from 'antd';\r\nimport './column.css'\r\nimport Credits from './credits';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nfunction ColumnComponent(props) {\r\n    const { Option } = Select;\r\n    const children = [];\r\n    children.push(<Option key={\"\"}>{\"All\"}</Option>);\r\n    children.push(<Option key={\"andhra\"}>{\"Andhra Pradesh\"}</Option>);\r\n    children.push(<Option key={\"arunachal\"}>{\"Arunachal Pradesh\"}</Option>);\r\n    children.push(<Option key={\"assam\"}>{\"Assam\"}</Option>);\r\n    children.push(<Option key={\"bihar\"}>{\"Bihar\"}</Option>);\r\n    children.push(<Option key={\"chhattisgarh\"}>{\"Chhattisgarh\"}</Option>);\r\n    children.push(<Option key={\"goa\"}>{\"Goa\"}</Option>);\r\n    children.push(<Option key={\"gujarat\"}>{\"Gujarat\"}</Option>);\r\n    children.push(<Option key={\"haryana\"}>{\"Haryana\"}</Option>);\r\n    children.push(<Option key={\"himachal\"}>{\"Himachal Pradesh\"}</Option>);\r\n    children.push(<Option key={\"jharkhand\"}>{\"Jharkhand\"}</Option>);\r\n    children.push(<Option key={\"karnataka\"}>{\"Karnataka\"}</Option>);\r\n    children.push(<Option key={\"kerala\"}>{\"Kerala\"}</Option>);\r\n    children.push(<Option key={\"madhya\"}>{\"Madhya Pradesh\"}</Option>);\r\n    children.push(<Option key={\"maharashtra\"}>{\"Maharashtra\"}</Option>);\r\n    children.push(<Option key={\"manipur\"}>{\"Manipur\"}</Option>);\r\n    children.push(<Option key={\"meghalaya\"}>{\"Meghalaya\"}</Option>);\r\n    children.push(<Option key={\"mizoram\"}>{\"Mizoram\"}</Option>);\r\n    children.push(<Option key={\"nagaland\"}>{\"Nagaland\"}</Option>);\r\n    children.push(<Option key={\"odisha\"}>{\"Odisha\"}</Option>);\r\n    children.push(<Option key={\"punjab\"}>{\"Punjab\"}</Option>);\r\n    children.push(<Option key={\"rajasthan\"}>{\"Rajasthan\"}</Option>);\r\n    children.push(<Option key={\"sikkim\"}>{\"Sikkim\"}</Option>);\r\n    children.push(<Option key={\"tamil\"}>{\"Tamil Nadu\"}</Option>);\r\n    children.push(<Option key={\"telangana\"}>{\"Telangana\"}</Option>);\r\n    children.push(<Option key={\"tripura\"}>{\"Tripura\"}</Option>);\r\n    children.push(<Option key={\"uttarakhand\"}>{\"Uttarakhand\"}</Option>);\r\n    children.push(<Option key={\"uttar\"}>{\"Uttar Pradesh\"}</Option>);\r\n    children.push(<Option key={\"bengal\"}>{\"West Bengal\"}</Option>);\r\n    children.push(<Option key={\"andaman\"}>{\"Andaman And Nicobar Islands\"}</Option>);\r\n    children.push(<Option key={\"chandigarh\"}>{\"Chandigarh\"}</Option>);\r\n    children.push(<Option key={\"delhi\"}>{\"Delhi\"}</Option>);\r\n    children.push(<Option key={\"jammu\"}>{\"Jammu & Kashmir\"}</Option>);\r\n    children.push(<Option key={\"ladakh\"}>{\"Ladakh\"}</Option>);\r\n    children.push(<Option key={\"lakshadweep\"}>{\"Lakshadweep\"}</Option>);\r\n    children.push(<Option key={\"puducherry\"}>{\"Puducherry\"}</Option>)\r\n    children.push(<Option key={\"dadra\"}>{\"Dadra and Nagar Haveli\"}</Option>)\r\n    children.push(<Option key={\"daman\"}>{\"Daman and Diu\"}</Option>)\r\n\r\n    const [selected  , setSelected ] = useState(\"Delhi\")\r\n    const [showCredits  , setshowCredits ] = useState(false)\r\n\r\n    function handleChange(value) {\r\n        setSelected(value)\r\n        props.getStates(value)\r\n    }\r\n    return (\r\n        <Row gutter={[24, 16]} style={{backgroundColor : \"#474951\" , height: \"35px\",marginLeft:'0px',marginRight:'0px'}}>\r\n             <Col className=\"navbar-cont\" span={2.5}>\r\n                <Row>\r\n                    <span className=\"bookmarked\" style={{fontSize: \"12px\",marginLeft:'10px'}}>Covid India Help</span>\r\n                </Row>\r\n            </Col>\r\n            <Col className=\"navbar-cont\" span={3}>\r\n                <Row style={{marginLeft : \"12px\"}}>\r\n                    <Select style={{background : \"#55575E\" , color : \"white\",fontSize:'11px',height:'30px'}} size={\"medium\"} defaultValue={selected} onChange={handleChange} style={{ width: 150 }}>\r\n                        {children}\r\n                    </Select>\r\n                </Row>\r\n            </Col>\r\n            <Col className=\"navbar-cont\" span={15}>\r\n                <Row onClick={props.onRefresh} style={{cursor:'pointer'}}>\r\n                    <span className=\"bookmarked\" style={{fontSize: \"12px\"}}><RefreshIcon style={{color:'white',fontSize:'20px'}} /></span>\r\n                </Row>\r\n            </Col>\r\n            {/* <Col  className=\"navbar-cont\"span={1}>\r\n                <Row>\r\n                    <span className=\"bookmarked\" style={{fontSize: \"12px\"}}>Leads</span>\r\n                </Row>\r\n            </Col>\r\n            <Col  className=\"navbar-cont\"span={12}>\r\n                <Row>\r\n                    <span className=\"bookmarked\" style={{fontSize: \"12px\"}}>Bookmarked</span>\r\n                </Row>\r\n            </Col> */}\r\n            <Col  className=\"navbar-cont\" span={2}>\r\n                <Row>\r\n                    <span className=\"bookmarked\" style={{fontSize: \"12px\"}}>Showing Recent</span>\r\n                </Row>\r\n            </Col>\r\n            \r\n            <Col onClick={()=>setshowCredits(!showCredits)} className=\"navbar-cont\" span={1}>\r\n                <Row style={{cursor:'pointer'}}>\r\n                    <span className=\"bookmarked\" style={{fontSize: \"11px\"}}><InfoIcon style={{color:'white',fontSize:'20px'}} /> </span>\r\n                </Row>\r\n            </Col>\r\n            \r\n                <Credits show={showCredits} setShow={setshowCredits} />\r\n                \r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default ColumnComponent;","import React, { useState } from 'react'\r\nimport { Row, Col } from 'antd';\r\nimport './column.css'\r\nimport 'antd/dist/antd.css';\r\nimport ColumnCard from '../column-cards';\r\nimport { CaretDownOutlined, CaretUpOutlined } from '@ant-design/icons';\r\nimport NavBar from './navbar'\r\nfunction ColumnComponent(props) {\r\n    const cardStyle= {\r\n        maxWidth:'20%',\r\n        flex:'0 0 20%', \r\n        borderRight: \"1px solid #D5D5D5\",\r\n        height: '95vh',\r\n        overflowY: 'scroll', \r\n        overflowX: 'hidden' \r\n    }\r\n    const [blood, setBlood] = useState(true)\r\n    const [medicine, setMedicine] = useState(true)\r\n    const [rem, setrem] = useState(true)\r\n    const [toc, setToc] = useState(true)\r\n    const [ven, setVen] = useState(true)\r\n    const [oxy, setOxy] = useState(true)\r\n    const [bed, setBed] = useState(true)\r\n    const [icu, setIcu] = useState(true)\r\n    const list = [\r\n        {\r\n            label:\"Blood Plasma\",\r\n            filterKey:\"plasma\"\r\n        },\r\n        {\r\n            label:\"Remdesvir/ Tocilizumab\",\r\n            filterKey:\"remdesivir\",\r\n            filterKey2:\"tocilizumab\"\r\n        },\r\n        {\r\n            label:\"Oxygen\",\r\n            filterKey:\"oxygen\"\r\n        },\r\n        {\r\n            label:\"Bed\",\r\n            filterKey:\"bed\"\r\n        },\r\n        {\r\n            label:\"Fabiflu\",\r\n            filterKey:\"fabiflu\"\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <>\r\n            <NavBar getStates={props.getStates} onRefresh={props.getStates} />\r\n            <Row style={{ height: \"1000px\" }}>\r\n                {\r\n                    list.map((col)=>(\r\n                        <Col id=\"style-1\" xs={24} sm={12} md={4} lg={3}  style={cardStyle} >\r\n                            <Row>\r\n                                <Col span={20}> <span className=\"oxygen-beds\" style={{fontSize: \"12px\"}}>{col.label}</span></Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <ColumnCard responseData={props.responseData.filter((row)=>row.category.toLowerCase()===col.filterKey||row.category.toLowerCase()===col.filterKey2)}></ColumnCard>\r\n                            </Row>\r\n                        </Col>\r\n                    ))\r\n                }\r\n                \r\n           \r\n               \r\n                \r\n            </Row>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default ColumnComponent;","/**\r\n * Created by Ayush Kulshrestha on 18/09/2019.\r\n */\r\n\r\n\r\nexport const httpConstants = {\r\n    METHOD_TYPE: {\r\n        POST: 'POST',\r\n        PUT: 'PUT',\r\n        GET: 'GET',\r\n        DELETE: 'DELETE',\r\n    },\r\n    CONTENT_TYPE: {\r\n        APPLICATION_JSON: 'application/json',\r\n        MULTIPART_FORM_DATA: 'multipart/form-data',\r\n        APPLICATION_FORM_URLENCODED: 'application/x-www-form-urlencoded',\r\n        IMAGE_PNG: 'image/png'\r\n    },\r\n    DEVICE_TYPE: {\r\n        WEB: 'web'\r\n    },\r\n    API_END_POINT: {}\r\n};","import {httpConstants} from \"../constants\";\r\n\r\nexport const httpService = (method, headers, data, url) => {\r\n    const requestOptions = {\r\n        method: method,\r\n        keepalive: true,\r\n        headers: headers || {'Content-Type': 'application/json'}\r\n    };\r\n\r\n    if (method !== httpConstants.METHOD_TYPE.GET)\r\n        requestOptions.body = JSON.stringify(data);\r\n\r\n    return fetch(url, requestOptions)\r\n        .then(function handleResponse(response) {\r\n            //in case API is down-\r\n            if (!response || !response.ok)\r\n                return Promise.reject(\"Unable to fetch data\");\r\n            return response.text().then(responseText => {\r\n                if (!responseText)\r\n                    return Promise.reject(responseText);\r\n                let data;\r\n                try {\r\n                    data = typeof responseText === 'object' ? responseText : JSON.parse(responseText);\r\n                    if (data && !data.success)\r\n                        return Promise.reject((data && data.responseCode) === 404 ? data : (data && {\r\n                            message: data.message,\r\n                            responseCode: data.responseCode,\r\n                            responseData: data.responseData\r\n                        }) || response.statusText);\r\n\r\n                } catch (err) {\r\n                    return Promise.reject(err)\r\n                }\r\n                return data;\r\n            });\r\n        }).catch(function (err) {\r\n            console.log('Class: httpService, Function: fetch ==', err);\r\n            return Promise.reject(err);\r\n        })\r\n\r\n};\r\n","import {httpService} from \"../managers/httpService\";\r\nimport {httpConstants} from \"../constants\";\r\n\r\n\r\n\r\nexport default {\r\n    states\r\n}\r\n\r\n\r\nexport async function states(toadd){\r\n    let url = `http://www.covidindiahelp.info:3002/getCards?duration=2000000&state=` + toadd;\r\n    return httpService(httpConstants.METHOD_TYPE.GET, {'Content-Type': httpConstants.CONTENT_TYPE.APPLICATION_JSON},{},url)\r\n        .then(response => {\r\n            // console.log(\"response dasd\",response)\r\n                return Promise.resolve(response);\r\n            }\r\n        ).catch(function (err) {\r\n            // console.log(\"err dasd\",err)\r\n            return Promise.reject(err);\r\n        });\r\n}\r\n","import React from \"react\";\r\nimport BaseComponent from '../baseComponent'\r\nimport CoulumnComponent from './coulumnsComponents'\r\nimport Utils from \"../../utility\";\r\nimport {states} from \"../../services/columns\"\r\n\r\nclass Coloumn extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: \"\",\r\n            nameError: \"\",\r\n            selectedState: \"Delhi\",\r\n            selectedTime: \"4\",\r\n            responseData : []\r\n          \r\n        }\r\n    }\r\n\r\n     componentDidMount() {\r\n        this.getStates(\"delhi\")\r\n\r\n        console.log(\"===================compdiodi mount\")\r\n          \r\n    }\r\n   \r\n     getStates = async(stateValue) => {\r\n         let data = `${stateValue}`\r\n         \r\n        try{\r\n            let response = await states(data)\r\n            console.log(\"state respons\",response)\r\n            if(response.responseData && Array.isArray(response.responseData) && response.responseData.length){\r\n                this.setState({responseData : response.responseData})\r\n            }\r\n        }catch(error){\r\n            console.log(error)\r\n        }\r\n    \r\n     }\r\n  \r\n\r\n    render() {\r\n        return (\r\n            <CoulumnComponent state={this.state}\r\n            getStates={this.getStates}\r\n            responseData={this.state.responseData}\r\n                            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Coloumn;","import React from \"react\";\r\n// import { Route, Switch } from \"react-router-dom\";\r\n\r\n// Import material modules\r\nimport {\r\n    Container\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Navbar from \"../common/components/Navbar\";\r\nimport { Coloumn } from \".\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        marginLeft: 0,\r\n        marginRight: 0\r\n    },\r\n    navbar: {\r\n        backgroundColor: '#333333',\r\n        Select: {\r\n            '&:before': {\r\n                borderColor: 'white',\r\n            },\r\n            '&:after': {\r\n                borderColor: 'white',\r\n            }\r\n        }\r\n    },\r\n    mx10: {\r\n        marginLeft: 10,\r\n        marginRight: 10\r\n    },\r\n    dropdown:{\r\n     '.& MuiSelect-outlined.MuiSelect-outlined':{     \r\n     paddingRight: '82px'\r\n     }\r\n    },\r\n  });\r\n\r\n  \r\nfunction Main() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container disableGutters=\"true\" maxWidth=\"xl\" className={classes.root}>\r\n            {/* <Navbar classes={classes} /> */}\r\n            <Coloumn />\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport {Router, Route} from 'react-router-dom';\r\nimport {Redirect, Switch} from \"react-router\";\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport getMuiTheme from 'material-ui/styles/getMuiTheme';\r\nimport {connect} from \"react-redux\";\r\nimport {Coloumn} from \"./modules\";\r\nimport {history} from \"./managers/history\";\r\nimport BaseComponent from \"./modules/baseComponent\";\r\nimport Main from './modules/mainComponent';\r\n\r\nclass Routes extends BaseComponent {\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <MuiThemeProvider muiTheme={getMuiTheme()}>\r\n                <Router history={history}>\r\n                    <Switch>\r\n                        <Route exact path={'/'} component={Main}/>\r\n                   \r\n                        <Redirect exact from='*' to=\"/\"/>\r\n                        \r\n                    </Switch>\r\n                </Router>\r\n            </MuiThemeProvider>);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {user: state.user}\r\n};\r\nexport default connect(mapStateToProps)(Routes);","let initialState = {\r\n    isLoggedIn: false,\r\n    loginFailure: null,\r\n    deviceId: null,\r\n    sessionToken: null,\r\n    loading: false,\r\n    isForgotPasswordSuccess: false\r\n};\r\nexport default function user(state = initialState, action) {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from \"redux\";\r\nimport user from \"./user\";\r\n\r\nexport default combineReducers({\r\n    user\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\nimport rootReducer from \"./reducers/index\";\r\nconst loggerMiddleware = createLogger();\r\n\r\nexport default  createStore(\r\n    rootReducer,\r\n    applyMiddleware(\r\n        thunkMiddleware,\r\n        loggerMiddleware\r\n    )\r\n);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Routes from './routes';\r\nimport store from './store.js';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './assets/styles/custom.css';\r\n\r\n\r\nfunction LIMBApp() {\r\n    return (\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <Routes component={Routes}/>\r\n            </Provider>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nReactDOM.render(<LIMBApp/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}