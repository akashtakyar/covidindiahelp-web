{"version":3,"sources":["constants/index.js","managers/history.js","modules/baseComponent.js","utility/index.js","modules/column-cards/columnCardsComponents.js","managers/httpService.js","services/columns.js","modules/columns/footer.js","modules/columns/coulumnsComponents.js","modules/common/drawer.js","modules/columns/credits.js","modules/common/navbar.js","modules/common/backdrop.js","modules/common/index.js","modules/add-info/addInfoComponent.js","modules/mobile-view/select-category/selectCategoryComponent.js","modules/mobile-view/select-category/index.js","modules/add-info/index.js","modules/mobile-view/select-states/selectStates.js","managers/sessionManager.js","services/notification.js","modules/pushAlert/index.js","modules/mobile-view/leads/lead.js","modules/mobile-view/leads/index.js","modules/mobile-view/header.js","modules/leadDetails/leadDetailsComponent.js","modules/leadDetails/index.js","modules/mobile-view/select-states/index.js","modules/disclaimer/disclaimer.js","modules/disclaimer/index.js","modules/mainComponent.js","routes.js","serviceWorker.js","index.js"],"names":["httpConstants","METHOD_TYPE","POST","PUT","GET","DELETE","CONTENT_TYPE","APPLICATION_JSON","MULTIPART_FORM_DATA","APPLICATION_FORM_URLENCODED","IMAGE_PNG","DEVICE_TYPE","WEB","API_END_POINT","REGISTER_DEVICE","stateNamesConstant","andhra","arunachal","assam","bihar","chandigarh","chhattisgarh","dadra","daman","delhi","goa","gujarat","haryana","himachal","jammu","jharkhand","karnataka","kerala","lakshadweep","madhya","maharashtra","manipur","meghalaya","mizoram","nagaland","odisha","puducherry","punjab","rajasthan","sikkim","tamil","telangana","tripura","uttarakhand","uttar","west","eventConstants","REGISTER_DEVICE_SUCCESS","REGISTER_DEVICE_FAILURE","cookiesConstants","DISCLAIMER","DEVICE_ID","genericConstants","WEB_COMPONENT_TYPE","STATE","CATEGORY","CARDS","firebaseConfig","apiKey","process","authDomain","databaseURL","REACT_APP_DATABASE_URL","projectId","storageBucket","messagingSenderId","appId","measurementId","voteTypeConstants","UP_VOTE","DOWN_VOTE","history","createBrowserHistory","BaseComponent","props","Component","toast","ToastService","new","place","duration","maxCount","moment","require","utility","getHeader","apiFailureToast","message","error","apiSuccessToast","msg","success","getAddedByObject","propsOfComponent","user","userDetails","privateKey","publicKey","email","wercPlaceID","photo","designation","department","name","firstName","lastName","company","_id","getCompanyObject","generateGUID","nav","window","navigator","screen","guid","mimeTypes","length","userAgent","replace","plugins","height","width","pixelDepth","basicAlert","getActivityDateEpochRange","activityDate","currentDate","Date","setHours","day","start","startDayEpochOfCurrentWeek","startOf","unix","startDayEpochOfCurrentMonth","startDayEpochOfCurrentQuarter","startDayEpochOfCurrentYear","endDayEpochOfCurrentWeek","endOf","endDayEpochOfCurrentMonth","endDayEpochOfCurrentQuarter","endDayEpochOfCurrentYear","getTime","end","setDate","getDate","setMonth","getMonth","console","log","setFullYear","getFullYear","getMiniAwardNominationModel","nomination","getAddress","addressObj","Object","keys","addressLine1","poBoxNumber","addressLine2","city","state","zipCode","country","decodeBase64","s","i","c","x","a","e","b","l","r","w","String","fromCharCode","L","charAt","validationAlert","type","swal","title","icon","isNumber","n","isNaN","parseFloat","isFinite","trackEvent","event","eventData","navigateToPath","path","push","toggleDropDown","dropdownID","validateName","test","validateEmail","isEmpty","string","trim","isMenuActive","location","pathname","includes","isPasswordValid","password","showUnderDevelopment","epochToDate","getDateAfterOneYear","timeStamp","Math","floor","dateObject","add","valueOf","generateCompanyLogoKey","toString","randomAlphaNumericString","charset","random","generateRandomAlphaNumericString","dateCompare","timeStampFrom","timeStampTo","isCompanyBalanceLow","tokenEconomy","remainingMonth","endDate","PERCBalance","monthlyPERCAllocation","getMiniUserModel","getMiniRecognitionUserModel","recognizeUser","clapWeight","getTimeFromNow","fromNow","epocToPrettyTime","seconds","nowTimeMilliseconds","date","format","interval","epocToPrettyTimeForFuture","getTopSenderAggregatedQuery","skip","limit","matchObj","queryObj","feedType","id","groupObj","getTimeDifference","difference","hh","mm","dateFormat","hours","getHours","timeDifference","getYearsList","addedOn","durationList","getTimestampFromDate","year","month","days","extractDate","getType","secondsToTime","milliseconds","minutes","getDateFormat","changeDateFormat","newFormat","currentFormat","toSentenceCase","stringToChange","toLowerCase","toUpperCase","parseResponse","promise","then","data","catch","err","getLatestDownVoteComment","list","filter","obj","sort","my_date","toLocaleDateString","date_parts","split","timeFormat","makeStyles","theme","popover","pointerEvents","maxWidth","border","background","ColumnCardComponent","httpService","method","headers","url","requestOptions","keepalive","body","JSON","stringify","fetch","response","ok","text","responseText","Promise","reject","parse","responseCode","responseData","statusText","upVote","description","resolve","downVote","getFilteredData","req","category","getCardDetails","getTags","Footer","className","ColumnComponent","useStyles","hide","display","drawer","flexShrink","drawerPaper","top","DrawerComponent","classes","useTheme","Drawer","variant","anchor","open","show","paper","List","map","index","ListItem","button","key","ListItemText","primary","onClick","handleNavigate","Credits","setShow","Select","Option","style","right","position","zIndex","overflowY","overflowX","borderRadius","boxShadow","fontWeight","fontSize","marginLeft","marginTop","marginBottom","NavbarComponent","useState","showCredits","setshowCredits","backgroundColor","marginRight","alignItems","justifyContent","columnGap","cursor","src","alt","drawerToggleClickHandler","isHeader","Autocomplete","options","countryStateList","getOptionLabel","option","onInputChange","value","handleChangeForCountryState","renderInput","params","TextField","label","categoryList","handleChangeForCategory","onRefresh","paddingRight","color","close","HeaderComponent","drawerOpen","setState","backdropClickHandler","this","AddInfoComponent","SelectCategoryComponent","onBackToSelectState","selectedState","Card","onSelectCategory","CardContent","Typography","Category","toggleState","AddInfo","SelectStates","placeholder","onChange","handleSearchLocationInput","target","onSelectLocation","cookies","Cookies","sessionManager","setDataInCookies","set","getDataFromCookies","get","removeDataFromCookies","remove","registerDevice","updateDevice","getHeaders","requestData","token","Utility","NotificationService","deviceResponse","deviceId","selectedCategory","registerForPush","pushToken","messaging","firebase","usePublicVapidKey","Notification","requestPermission","permission","getToken","currentToken","PushAlert","styled","PushAlertComponent","onAlertClicked","criteriaCategory","criteriaState","select","NotWorkingDialog","Dialog","isShowNotWorkingPopup","handlePopoverClose","aria-labelledby","aria-describedby","sendDownVoteRequest","LeadsComponent","latestComment","isShowSharePopup","onClose","selectedItem","attachments","media_keys","uniqueContact","href","tweetId","channelID","comments","comment","channelCreatedOn","channel","textAlign","incrementUpVote","sendUpVoteRequest","upVoteCount","handleNotWorkingPopoverOpen","downVoteCount","FacebookShareButton","quote","FacebookIcon","size","round","WhatsappShareButton","WhatsappIcon","TwitterShareButton","TwitterIcon","DialogBox","backToSelectCategory","fill","isIOS","isIOS13","isIPad13","isPod13","padding","labelId","selectedSortingAttr","onSelectSorting","MenuItem","disabled","allLeads","ite","handlePopoverOpen","district","responseMessage","originalResponseData","getAllLeads","request","responseByIndex","forEach","desription","Array","isArray","incrementDownVote","item","getUniqueContact","popoverText","popoverAnchor","phoneNumber","dummyData","isInfo","LeadDetailsComponent","margin","leadDetails","handleNotWorkingPopoverClose","LeadDetails","getLeadDetails","pathArray","Coloumn","getSelectedComponent","getSelectedCategory","getSelectedState","getStates","statesArray","categoryArray","allLocations","selectedCountryState","document","getElementById","blur","responseByLocation","locations","isStateSelected","selectedComponent","MobileComponent","DisclaimerDialog","isDisclaimer","DisclaimerComponent","root","navbar","borderColor","mx10","dropdown","Main","setSize","useLayoutEffect","updateSize","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","Routes","initializeApp","muiTheme","getMuiTheme","exact","component","from","to","Boolean","hostname","match","App","ReactDOM","render","serviceWorker","register","registration","scope"],"mappings":"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","file":"static/js/main.5e9fa87c.chunk.js","sourcesContent":["/**\n * Created by Ayush Kulshrestha on 18/09/2019.\n */\n\n\nexport const httpConstants = {\n    METHOD_TYPE: {\n        POST: 'POST',\n        PUT: 'PUT',\n        GET: 'GET',\n        DELETE: 'DELETE',\n    },\n    CONTENT_TYPE: {\n        APPLICATION_JSON: 'application/json',\n        MULTIPART_FORM_DATA: 'multipart/form-data',\n        APPLICATION_FORM_URLENCODED: 'application/x-www-form-urlencoded',\n        IMAGE_PNG: 'image/png'\n    },\n    DEVICE_TYPE: {\n        WEB: 'web'\n    },\n    API_END_POINT: {\n        REGISTER_DEVICE: '/device',\n\n    }\n};\n\nexport const stateNamesConstant = {\n    andhra: \"Andhra Pradesh\",\n    arunachal: \"Arunachal Pradesh\",\n    assam: \"Assam\",\n    bihar: \"Bihar\",\n    chandigarh: \"Chandigarh\",\n    chhattisgarh: \"Chhattisgarh\",\n    dadra: \"Dadra and Nagar Haveli\",\n    daman: \"Daman and Diu\",\n    delhi: \"Delhi\",\n    goa: \"Goa\",\n    gujarat: \"Gujarat\",\n    haryana: \"Haryana\",\n    himachal: \"Himachal\",\n    jammu: \"Jammu\",\n    jharkhand: \"Jharkhand\",\n    karnataka: \"Karnataka\",\n    kerala: \"Kerala\",\n    lakshadweep: \"Lakshadweep\",\n    madhya: \"Madhya Pradesh\",\n    maharashtra: \"Maharashtra\",\n    manipur: \"Manipur\",\n    meghalaya: \"Meghalaya\",\n    mizoram: \"Mizoram\",\n    nagaland: \"Nagaland\",\n    odisha: \"Odisha\",\n    puducherry: \"Puducherry\",\n    punjab: \"Punjab\",\n    rajasthan: \"Rajasthan\",\n    sikkim: \"Sikkim\",\n    tamil: \"Tamil Nadu\",\n    telangana: \"Telangana\",\n    tripura: \"Tripura\",\n    uttarakhand: \"Uttarakhand\",\n    uttar: \"Uttar Pradesh\",\n    west: \"West Bengal\"\n}\n\nexport const eventConstants = {\n    REGISTER_DEVICE_SUCCESS: \"REGISTER_DEVICE_SUCCESS\",\n    REGISTER_DEVICE_FAILURE: \"REGISTER_DEVICE_FAILURE\",\n}\nexport const cookiesConstants = {\n    DISCLAIMER: 'DISCLAIMER',\n    DEVICE_ID: 'deviceId',\n};\n\n\nexport const genericConstants = {\n    WEB_COMPONENT_TYPE: {\n        STATE: \"STATE\",\n        CATEGORY: \"CATEGORY\",\n        CARDS: \"CARDS\",\n    }\n}\nexport const firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID,\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID\n}\n\nexport const voteTypeConstants = {\n    UP_VOTE:'UP_VOTE',\n    DOWN_VOTE:'DOWN_VOTE'\n}","/**\n * Created by Ayush Kulshrestha on 18/09/2019.\n */\n\nimport { createBrowserHistory } from 'history';\n\n/**\n * The history library lets you easily manage session history anywhere JavaScript runs.\n * history abstracts away the differences in various environments and provides a minimal API\n * that lets you manage the history stack, navigate, and persist state between sessions.\n */\n\n\nexport const history = createBrowserHistory();\n","//base class\nimport React, {Component} from \"react\";\n\nexport default class BaseComponent extends Component {\n    constructor(props) {\n        super(props);\n    }\n}","import \"react-s-alert/dist/s-alert-default.css\";\nimport {history} from \"../managers/history\";\nimport swal from \"sweetalert\";\nimport React from \"react\";\nimport ToastService from 'react-material-toast';\nimport {voteTypeConstants} from \"../constants\";\n\nconst toast = ToastService.new({\n    place: 'topRight',\n    duration: 1,\n    maxCount: 2\n});\nlet moment = require('moment');\nconst utility = {\n    getHeader,\n    apiFailureToast,\n    apiSuccessToast,\n    getAddedByObject,\n    getCompanyObject,\n    generateGUID,\n    basicAlert,\n    getActivityDateEpochRange,\n    getMiniAwardNominationModel,\n    getAddress,\n    decodeBase64,\n    validationAlert,\n    isNumber,\n    trackEvent,\n    navigateToPath,\n    toggleDropDown,\n    validateName,\n    validateEmail,\n    isEmpty,\n    isMenuActive,\n    isPasswordValid,\n    showUnderDevelopment,\n    epochToDate,\n    getDateAfterOneYear,\n    generateCompanyLogoKey,\n    dateCompare,\n    isCompanyBalanceLow,\n    getMiniUserModel,\n    getMiniRecognitionUserModel,\n    getTimeFromNow,\n    epocToPrettyTime,\n    epocToPrettyTimeForFuture,\n    getTopSenderAggregatedQuery,\n    getTimeDifference,\n    getYearsList,\n    getTimestampFromDate,\n    extractDate,\n    secondsToTime,\n    getDateFormat,\n    changeDateFormat,\n    toSentenceCase,\n    parseResponse,\n    getLatestDownVoteComment\n};\nexport default utility;\n\nfunction getLatestDownVoteComment(list) {\n    if (!list || list.length < 1)\n        return ''\n    list = list.filter(obj => obj.type === voteTypeConstants.DOWN_VOTE).sort((a, b) => a.addedOn > b.addedOn ? 1 : -1)\n    return list[list.length - 1]\n\n}\n\nfunction parseResponse(promise) {\n    return promise.then(data => {\n        return [null, data];\n    }).catch(err => [err]);\n};\n\nexport const dispatchAction = (type, data) => {\n    return dispatch => dispatch({type, data});\n};\n\nfunction trackEvent(event, eventData) {\n    // try {\n    //     if (!eventData)\n    //         mixpanel.track(event);\n    //     else\n    //         mixpanel.track(event, eventData);\n    // } catch (err) {\n    //     console.log(err)\n    // }\n}\n\nfunction getDateFormat() {\n    var my_date = new Date(2019, 0, 31);\n    console.log(my_date.toLocaleDateString());\n    // Initialize variables\n    var separator = \"\";\n    var first = \"\";\n    var second = \"\";\n    var third = \"\";\n    var date_parts = [];\n\n    // get separator : \"-\", \"/\" or \" \", format based on toLocaleDateString function\n    if (my_date.toLocaleDateString().split(\"-\").length == 3) {\n        separator = \" - \";\n        date_parts = my_date.toLocaleDateString().split(\"-\");\n    }\n    if (my_date.toLocaleDateString().split(\"/\").length == 3) {\n        separator = \" / \";\n        date_parts = my_date.toLocaleDateString().split(\"/\");\n    }\n    if (my_date.toLocaleDateString().split(\" \").length == 3) {\n        separator = \" \";\n        date_parts = my_date.toLocaleDateString().split(\" \");\n    }\n\n    // get first part\n    if (date_parts[0] == 2019) {\n        first = \"YYYY\";\n    } else if (date_parts[0] == 31) {\n        first = \"DD\";\n    } else {\n        if (date_parts[0].length <= 2) {\n            first = \"MM\";\n        } else {\n            first = \"MMM\";\n        }\n    }\n\n    // get second part\n    if (date_parts[1] == 2019) {\n        second = \"YYYY\";\n    } else if (date_parts[1] == 31) {\n        second = \"DD\";\n    } else {\n        if (date_parts[1].length <= 2) {\n            second = \"MM\";\n        } else {\n            second = \"MMM\";\n        }\n    }\n\n    // get third part\n    if (date_parts[2] == 2019) {\n        third = \"YYYY\";\n    } else if (date_parts[2] == 31) {\n        third = \"DD\";\n    } else {\n        if (date_parts[2].length <= 2) {\n            third = \"MM\";\n        } else {\n            third = \"MMM\";\n        }\n    }\n    // assembly\n    var format = first + \"/\" + second + \"/\" + third;\n    return format;\n}\n\n\nfunction getHeader() {\n    // return {\n    //     'session-token': sessionManager.getDataFromCookies(genericConstants.COOKIES_KEY.SESSION_TOKEN),\n    //     'device-id': sessionManager.getDataFromCookies(genericConstants.COOKIES_KEY.DEVICE_ID),\n    //     'Content-Type': httpConstants.CONTENT_TYPE.APPLICATION_JSON\n    // };\n}\n\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\n\n//TODO: update apiConstant.API_FAILURE\nfunction apiFailureToast(message) {\n    toast.error(message ? message : \"apiConstant.API_FAILURE\");\n}\n\nfunction apiSuccessToast(msg) {\n    toast.success(msg ? msg : \"apiConstant.API_SUCCESS\");\n}\n\nfunction generateGUID() {\n    var nav = window.navigator;\n    var screen = window.screen;\n    var guid = nav.mimeTypes.length;\n    guid += nav.userAgent.replace(/\\D+/g, '');\n    guid += nav.plugins.length;\n    guid += screen.height || '';\n    guid += screen.width || '';\n    guid += screen.pixelDepth || '';\n    return guid;\n}\n\nfunction basicAlert(message) {\n    swal({\n        title: message,\n        icon: '/images/alert.svg',\n    })\n}\n\nfunction validationAlert(message, type = 'info') {\n    swal({\n        title: message,\n        icon: type\n    })\n}\n\nfunction getTimeDifference(timeStampTo) {\n    let minFive = 300000;\n    let oneDay = 86400000;\n    let difference = \"\";\n    let am = \" AM\";\n    let pm = \" PM\";\n    let hh = epochToDate(timeStampTo, 'hh');\n    let mm = epochToDate(timeStampTo, 'mm');\n    let dateFormat = epochToDate(timeStampTo, 'DD MMM YYYY');\n    let hours = new Date(timeStampTo).getHours();\n    let timeDifference = new Date().getTime() - timeStampTo;\n    if (timeDifference < oneDay) {\n        if (timeDifference < minFive) {\n            difference = \"Just Now\";\n        } else {\n            if (hours < 12)\n                difference = \"Today at \" + hh + \":\" + mm + am;\n            else\n                difference = \"Today at \" + hh + \":\" + mm + pm;\n        }\n    } else {\n        if (hours < 12)\n            difference = dateFormat + \", \" + hh + ':' + mm + am;\n        else\n            difference = dateFormat + \", \" + hh + ':' + mm + pm;\n    }\n    return difference;\n}\n\nfunction epochToDate(timeStamp, timeFormat) {\n    timeStamp = Math.floor(timeStamp);  //to convert to integer if seconds is String.\n    let dateObject = new Date(timeStamp);\n    return moment(dateObject).format(timeFormat)//DD MMM YYYY\n}\n\n\nfunction getTimeFromNow(timeStamp) {\n    return moment(timeStamp, \"YYYYMMDD\").fromNow();\n}\n\nfunction dateCompare(timeStampFrom, timeStampTo) {\n    let diffTime = (timeStampFrom * 1000 - timeStampTo);\n    let diffDays = (diffTime / (1000 * 60 * 60 * 24));\n    return diffDays;\n}\n\nfunction getDateAfterOneYear(timeStamp) {\n    timeStamp = Math.floor(timeStamp);  //to convert to integer if seconds is String.\n    let dateObject = new Date(timeStamp);\n    return moment(dateObject).add(1, 'years').valueOf();\n}\n\nfunction getActivityDateEpochRange(activityDate) {\n    let currentDate = new Date();\n    currentDate.setHours(0, 0, 0, 0);\n    let startDayEpochOfCurrentWeek = moment().startOf('isoweek').unix() * 1000;\n    let startDayEpochOfCurrentMonth = moment().startOf('month').unix() * 1000;\n    let startDayEpochOfCurrentQuarter = moment().startOf('quarter').unix() * 1000;\n    let startDayEpochOfCurrentYear = moment().startOf('year').unix() * 1000;\n    let endDayEpochOfCurrentWeek = moment().endOf('isoweek').unix() * 1000;\n    let endDayEpochOfCurrentMonth = moment().endOf('month').unix() * 1000;\n    let endDayEpochOfCurrentQuarter = moment().endOf('quarter').unix() * 1000;\n    let endDayEpochOfCurrentYear = moment().endOf('year').unix() * 1000;\n    let day, start;\n    switch (activityDate) {\n        case \"Today\":\n            return {start: currentDate.getTime(), end: new Date().getTime()};\n        case \"Yesterday\":\n            day = new Date(currentDate);\n            day.setDate(currentDate.getDate() - 1);\n            return {start: day.getTime(), end: currentDate.getTime()};\n        case \"Last seven days\":\n            day = new Date(currentDate);\n            day.setDate(currentDate.getDate() - 7);\n            return {start: day.getTime(), end: currentDate.getTime()};\n        case \"Last fourteen days\":\n            day = new Date(currentDate);\n            day.setDate(currentDate.getDate() - 14);\n            return {start: day.getTime(), end: currentDate.getTime()};\n        case \"Last twenty one days\":\n            day = new Date(currentDate);\n            day.setDate(currentDate.getDate() - 21);\n            return {start: day.getTime(), end: currentDate.getTime()};\n        case \"Last Week\":\n            start = new Date(startDayEpochOfCurrentWeek);\n            start.setDate(start.getDate() - 7);\n            return {start: start.getTime(), end: startDayEpochOfCurrentWeek};\n        case \"Last two weeks\":\n            start = new Date(startDayEpochOfCurrentWeek);\n            start.setDate(start.getDate() - 14);\n            return {start: start.getTime(), end: startDayEpochOfCurrentWeek};\n        case \"Last three weeks\":\n            start = new Date(startDayEpochOfCurrentWeek);\n            start.setDate(start.getDate() - 21);\n            return {start: start.getTime(), end: startDayEpochOfCurrentWeek};\n        case \"Last Month\":\n            start = new Date(startDayEpochOfCurrentMonth);\n            start.setMonth(start.getMonth() - 1);\n            return {start: start.getTime(), end: startDayEpochOfCurrentMonth};\n        case \"Last Quarter\":\n            start = new Date(startDayEpochOfCurrentQuarter);\n            start.setMonth(start.getMonth() - 3);\n            return {start: start.getTime(), end: startDayEpochOfCurrentQuarter};\n        case \"Last Year\":\n            console.log(startDayEpochOfCurrentYear)\n            start = new Date(startDayEpochOfCurrentYear);\n            start.setFullYear(start.getFullYear() - 1);\n            return {start: start.getTime(), end: startDayEpochOfCurrentYear};\n        case \"This Week\":\n            return {start: startDayEpochOfCurrentWeek, end: endDayEpochOfCurrentWeek};\n        case \"This Quarter\":\n            return {start: startDayEpochOfCurrentQuarter, end: endDayEpochOfCurrentQuarter};\n        case \"This Year\":\n            return {start: startDayEpochOfCurrentYear, end: endDayEpochOfCurrentYear};\n        case \"Current Month\":\n            return {start: startDayEpochOfCurrentMonth, end: endDayEpochOfCurrentMonth};\n        default:\n            return {start: currentDate.getTime(), end: new Date().getTime()};\n    }\n\n}\n\nfunction getAddress(addressObj) {\n    if (!addressObj || !Object.keys(addressObj).length || !(addressObj.addressLine1 || addressObj.poBoxNumber))\n        return \"\";\n    return (\n        <span>\n            {addressObj.addressLine1 ? addressObj.addressLine1 : `PO Box ${addressObj.poBoxNumber}`}<br/>\n            {addressObj.addressLine2 ? <span>{addressObj.addressLine2}<br/></span> : ''}\n            {addressObj.city}, {addressObj.state} {addressObj.zipCode}<br/>\n            {addressObj.country}\n        </span>\n    )\n}\n\nfunction decodeBase64(s) {\n    let e = {}, i, b = 0, c, x, l = 0, a, r = '', w = String.fromCharCode, L = s.length;\n    let A = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    for (i = 0; i < 64; i++) {\n        e[A.charAt(i)] = i;\n    }\n    for (x = 0; x < L; x++) {\n        c = e[s.charAt(x)];\n        b = (b << 6) + c;\n        l += 6;\n        while (l >= 8) {\n            ((a = (b >>> (l -= 8)) & 0xff) || (x < (L - 2))) && (r += w(a));\n        }\n    }\n    return r;\n}\n\nfunction navigateToPath(path) {\n    history.push(path)\n}\n\nfunction toggleDropDown(dropdownID) {\n    // $(\"#\" + dropdownID).toggle(\"show\");\n}\n\nfunction validateName(name) {\n    let reg = /[A-Z][a-zA-Z]*/;\n    return reg.test(name)\n}\n\nfunction validateEmail(email) {\n    let reg = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return reg.test(email);\n}\n\nfunction isPasswordValid(password) {\n    let reg = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/;\n    return reg.test(password);\n}\n\nfunction isEmpty(string) {\n    return !string || string.trim().length === 0;\n}\n\nfunction isMenuActive(path) {\n    return window.location.pathname.includes(path);\n}\n\nfunction getAddedByObject(propsOfComponent) {\n    if (!propsOfComponent || !propsOfComponent.user || !propsOfComponent.user.userDetails)\n        return null;\n    let user = propsOfComponent.user.userDetails;\n    return {\n        privateKey: user.privateKey,\n        publicKey: user.publicKey,\n        email: user.email,\n        wercPlaceID: user.wercPlaceID,\n        photo: user.photo ? user.photo : '',\n        designation: user.designation ? user.designation : {},\n        department: user.department ? user.department : {},\n        name: (user.firstName || user.lastName) ? (user.firstName + \" \" + user.lastName) : (user.company && user.company.name ? user.company.name : \"\"),\n        _id: user._id\n    };\n}\n\nfunction getMiniUserModel(user) {\n    if (!user)\n        return null;\n    return {\n        privateKey: user.privateKey,\n        publicKey: user.publicKey,\n        photo: user.photo ? user.photo : '',\n        email: user.email,\n        wercPlaceID: user.wercPlaceID,\n        designation: user.designation ? user.designation : {},\n        department: user.department ? user.department : {},\n        name: (user.firstName || user.lastName) ? (user.firstName + \" \" + user.lastName) : user.company.name,\n        _id: user._id\n    };\n}\n\nfunction getMiniRecognitionUserModel(recognizeUser) {\n    if (!recognizeUser)\n        return null;\n    return {\n        name: recognizeUser.name,\n        clapWeight: recognizeUser.clapWeight,\n        _id: recognizeUser._id\n    };\n}\n\n\nfunction getMiniAwardNominationModel(nomination) {\n    if (!nomination)\n        return null;\n    return {\n        name: nomination.name,\n        photo: nomination.photo,\n        _id: nomination._id\n    };\n}\n\n\nfunction generateRandomAlphaNumericString(length) {\n    var randomAlphaNumericString = \"\";\n    var charset = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n    for (var i = 0; i < length; i++)\n        randomAlphaNumericString += charset.charAt(Math.floor(Math.random() * charset.length));\n    return randomAlphaNumericString;\n}\n\nfunction generateCompanyLogoKey() {\n    var currentTimeStamp = (new Date().getTime()).toString();\n    return currentTimeStamp + \"_\" + generateRandomAlphaNumericString(13);\n}\n\nfunction showUnderDevelopment() {\n    basicAlert(\"Under Development\")\n}\n\nfunction getCompanyObject(propsOfComponent) {\n    if (!propsOfComponent || !propsOfComponent.user || !propsOfComponent.user.userDetails || !propsOfComponent.user.userDetails.company)\n        return null;\n    return propsOfComponent.user.userDetails.company;\n}\n\nfunction isCompanyBalanceLow(company) {\n    if (!company || !company.tokenEconomy || !company.tokenEconomy) {\n        console.log('return false')\n        return false;\n    }\n    let remainingMonth = (new Date(company.tokenEconomy.endDate)).getMonth() - (new Date()).getMonth() +\n        (12 * ((new Date(company.tokenEconomy.endDate)).getFullYear() - (new Date()).getFullYear()));\n    if (company.tokenEconomy.PERCBalance < (company.tokenEconomy.monthlyPERCAllocation * remainingMonth))\n        return true;\n    return false;\n}\n\nfunction getYearsList(addedOn = new Date().getTime()) {\n    let durationList = [];\n    for (let i = new Date(addedOn).getFullYear(); i <= new Date().getFullYear(); i++) {\n        durationList.push(i)\n    }\n    return durationList;\n}\n\nfunction epocToPrettyTime(seconds) {\n    seconds = Math.floor(seconds);//to convert to integer if seconds is String.\n    var nowTimeMilliseconds = (new Date).getTime();\n    var date = new Date(seconds);\n    var dateObject = moment(date).format('DD MMMM YYYY');\n    //var dateObject = moment(date).format('ddd, MMM DD hh:mm A');\n    seconds = Math.floor((nowTimeMilliseconds / 1000) - (seconds / 1000));\n    var interval = Math.floor(seconds / 172800);\n    if (interval >= 1)\n        return dateObject;\n    //if (interval >= 1) return dateObject+\" \"+moment.tz(moment.tz.guess()).format('z');\n    interval = Math.floor(seconds / 86400);\n    if (interval >= 1)\n        return \"yesterday\";\n\n    interval = Math.floor(seconds / 3600);\n    if (interval >= 1) {\n        if (interval === 1)\n            return interval + \" hr ago\";\n        return interval + \" hrs ago\";\n    }\n    interval = Math.floor(seconds / 60);\n    if (interval >= 1) {\n        if (interval === 1)\n            return interval + \" minute ago\";\n        return interval + \" minutes ago\";\n    } else\n        return \"Just now\";\n}\n\nfunction epocToPrettyTimeForFuture(seconds) {\n    seconds = Math.floor(seconds);//to convert to integer if seconds is String.\n    var nowTimeMilliseconds = (new Date).getTime();\n    var date = new Date(seconds);\n    var dateObject = moment(date).format('DD MMMM YYYY');\n    //var dateObject = moment(date).format('ddd, MMM DD hh:mm A');\n    seconds = Math.floor((seconds / 1000) - (nowTimeMilliseconds / 1000));\n    var interval = Math.floor(seconds / 86400);\n    if (interval >= 1)\n        return interval + ' days';\n\n    interval = Math.floor(seconds / 3600);\n    if (interval >= 1) {\n        if (interval == 1)\n            return interval + \" hr\";\n        return interval + \" hrs\";\n    }\n    interval = Math.floor(seconds / 60);\n    if (interval >= 1) {\n        if (interval == 1)\n            return interval + \" minute\";\n        return interval + \" minutes\";\n    } else\n        return \"0 minute\";\n}\n\n\nfunction getTopSenderAggregatedQuery(propsOfComponent, skip = 0, limit = 0, matchObj = {}) {\n    if (!propsOfComponent || !propsOfComponent.user || !propsOfComponent.user.userDetails || !propsOfComponent.user.userDetails.company)\n        return null;\n    let queryObj = [];\n\n    //Match Object for the conditions-\n    let feedType = [];\n    feedType.push({'entityData.feedType': 'ADD_RECOGNITION'});\n    feedType.push({'entityData.feedType': 'ADD_NOMINATION'});\n    matchObj['$or'] = feedType;\n    matchObj['entityData.company.id'] = propsOfComponent.user.userDetails.company.id;\n\n    //Group object for grouping-\n    let groupObj = {};\n    groupObj._id = \"$entityData.addedBy.email\";\n    groupObj.PERCBalance = {\"$sum\": \"$entityData.PERCValue\"};\n    groupObj.firstName = {\"$first\": \"$entityData.addedBy.name\"};\n\n    //Group object for grouping-\n    let sortObj = {};\n    sortObj._id = \"$recipient.userDetails.email\";\n\n    queryObj.push({\"$match\": matchObj});\n    queryObj.push({\"$group\": groupObj});\n\n    // queryObj.push({\"$sort\": {'PERCBalance':-1}});\n\n    queryObj.push({\"$limit\": limit});\n    queryObj.push({\"$skip\": skip});\n    queryObj.push({\"$sort\": {'PERCBalance': -1}});\n\n    return queryObj;\n}\n\nfunction secondsToTime(milliseconds) {\n    let date = new Date(milliseconds)\n    var duration = moment.duration(milliseconds, 'milliseconds');\n    return (duration.hours() + \":\" + duration.minutes() + \":\" + duration.seconds())\n    return moment(date, 'hh:mm:ss').fromNow()\n}\n\nfunction getTimestampFromDate(year, month, date = 0) {\n    let days = new Date(year, month, date).getDate();\n    return new Date(year + \"/\" + month + \"/\" + days).getTime();\n\n}\n\nfunction extractDate(date, getType) {\n    console.log(\"date\", typeof date, \"getType\", getType);\n    switch (getType) {\n        case \"DAY\":\n            return new Date(date.toString()).getDate();\n            break;\n        case \"MONTH\":\n            return new Date(date.toString()).getMonth() + 1;\n            break;\n        case \"YEAR\":\n            return new Date(date.toString()).getFullYear();\n            break;\n        default :\n            return date;\n    }\n\n}\n\n\nfunction changeDateFormat(date, newFormat) {\n    let currentFormat = getDateFormat()\n    return moment(date, currentFormat).format(newFormat)\n}\n\nfunction toSentenceCase(stringToChange) {\n    return stringToChange.toLowerCase().replace(/(^\\s*\\w|[\\.\\!\\?]\\s*\\w)/g, function (c) {\n        return c.toUpperCase()\n    });\n}\n","import React from 'react'\nimport './column-cards.css'\nimport 'antd/dist/antd.css';\nimport {Avatar, Card, CardContent, Typography} from '@material-ui/core';\nimport moment from 'moment'\nimport {Row, Column} from \"simple-flexbox\";\nimport utility from \"../../utility\";\nimport {makeStyles} from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport { TwitterTweetEmbed} from 'react-twitter-embed';\n\nimport {\n    FacebookShareButton,\n    FacebookIcon,\n    LinkedinIcon,\n    WhatsappIcon,\n    TwitterIcon,\n    WhatsappShareButton,\n    TwitterShareButton,\n    LinkedinShareButton,\n    InstapaperShareButton,\n    InstapaperIcon\n} from 'react-share';\n\n\nconst useStyles = makeStyles((theme) => ({\n    popover: {\n        pointerEvents: 'none',\n        maxWidth: '400px',\n        border: \"none\",\n        background: \"white\"\n    }\n}));\n\nfunction ColumnCardComponent(props) {\n    const classes = useStyles();\n    return (\n        <>\n            {DialogBox(props)}\n            {\n                props.responseData.length > 0 ?\n                    props.responseData && props.responseData.map((ite, index) => (\n                        <>\n                            <Card className=\"m-10\" key={index}>\n                                <CardContent className=\"card-desc-container\">\n                                    <Typography className=\"mb-10\" variant=\"body2\">\n\n                                    </Typography>\n                                    <Typography className=\"card-desc\" variant=\"body2\"\n                                                onClick={() => props.handlePopoverOpen(ite)}\n                                    >\n                                        {ite.description}</Typography>\n\n                                    <Row className=\"card-timestamp\">\n                                        <Row className=\"card-vote-buttons\" style={{cursor: 'pointer'}}><span\n                                            className=\"underline-text\" onClick=\n                                            {() => {\n                                                props.incrementUpVote(ite._id);\n                                                props.sendUpVoteRequest(ite._id)\n                                            }}\n                                        >Working:&nbsp;{ite.upVoteCount}</span>&nbsp;&nbsp;\n\n                                            <span className=\"card-vote-buttons  underline-text\" style={{cursor: 'pointer'}}\n                                                  onClick=\n                                                      {() => {\n                                                          props.incrementDownVote(ite._id);\n                                                          props.sendDownVoteRequest(ite._id)\n                                                      }}\n                                            >Not working:&nbsp;{ite.downVoteCount}</span></Row>&nbsp;\n\n                                        <Column\n                                            className=\"card-footer-info\">{utility.toSentenceCase(ite.state)} {utility.toSentenceCase(ite.district)} {moment(ite.channelCreatedOn).fromNow()}</Column>\n                                    </Row>\n                                </CardContent>\n                            </Card>\n                        </>\n                    )\n                    ) :\n                    <div\n                        className=\"loading\">{props?.originalResponseData?.length < 1 && 'Loading...' || 'No leads available. Search for other cities.'}</div>}\n        </>\n\n    );\n}\n\nfunction DialogBox(props) {\n    return (\n        <Dialog\n            open={props.state.isShowSharePopup}\n            onClose={props.handlePopoverClose}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n        >\n            <div className=\"dialog-box\">\n                <Row className=\"dialog-header\">\n                    <Column>\n                        <div className=\"p-b-10\">Details</div>\n                    </Column>\n                    <Column onClick={props.handlePopoverClose} style={{cursor: 'pointer'}}><img\n                        src=\"/images/Cancel.svg\"/> </Column>\n                </Row>\n                {props.state.selectedItem && props.state.selectedItem.attachments && props.state.selectedItem.attachments.media_keys.length>0\n                ?  \n                <>\n                {props.state.uniqueContact && props.state.uniqueContact.length ? <div className=\"p-t-20 p-r-20\">Contact :</div> :\"\"}\n                    {props.state.uniqueContact && props.state.uniqueContact.length ? props.state.uniqueContact.map(data => (\n                        <div className=\"\"><a href={`tel:${data}`}>{data}</a></div>\n                    )) : \"\"}\n                <TwitterTweetEmbed  options={{width: 400}}\n                tweetId={props.state.selectedItem.channelID}/> \n                  \n                    <Row className=\"card-timestamp\">\n                   <Column><div className=\"p-t-20 p-r-20 p-b-10 bottom-text\">{moment(props.state.selectedItem.channelCreatedOn).fromNow()}</div></Column>\n                    <Column><div className=\"p-t-20 p-r-20 p-b-10 bottom-text\">Source: Twitter</div></Column>\n                     </Row>   \n                </>\n                :\n                <div className=\"selected-item \">\n                    <div className=\"p-l-20 p-t-20 p-r-20\"> {props.state.selectedItem.description}</div>\n                    {props.state.uniqueContact && props.state.uniqueContact.length ? <div className=\"p-l-20 p-t-20 p-r-20\">Contact :</div> :\"\"}\n                    {props.state.uniqueContact && props.state.uniqueContact.length ? props.state.uniqueContact.map(data => (\n                        <div className=\"p-l-20 \"><a href={`tel:${data}`}>{data}</a></div>\n                    )) : \"\"}\n                    <Row className=\"card-timestamp\">\n                   <Column><div className=\"p-l-20 p-t-20 p-r-20 p-b-10 bottom-text\">{moment(props.state.selectedItem.channelCreatedOn).fromNow()}</div></Column>\n                    <Column><div className=\"p-l-20 p-t-20 p-r-20 p-b-10 bottom-text\">Source: Twitter</div></Column>\n                     </Row>   \n                </div> }\n               \n               \n                <Row className=\"card-timestamp p-t-20\">\n                    <Row className=\"card-vote-buttons\" style={{cursor: 'pointer'}}><span className=\" working-text\"\n                                                                                         onClick=\n                                                                                             {() => {\n\n\n                                                                                                 props.incrementUpVote(props.state.selectedItem._id);\n\n                                                                                                 props.sendUpVoteRequest(props.state.selectedItem._id)\n                                                                                             }}\n                    ><img style={{width: \"20px\", paddingRight: \"1px\"}}\n                          src=\"/images/Working.svg\"></img>Working:{props.state.selectedItem.upVoteCount}</span>&nbsp;\n\n                        <span className=\"  not-working-text\" style={{cursor: 'pointer'}} onClick=\n                            {() => {\n                                props.incrementDownVote(props.state.selectedItem._id);\n                                props.sendDownVoteRequest(props.state.selectedItem._id)\n                            }}\n                        ><img style={{width: \"20px\", paddingRight: \"1px\"}} src=\"/images/NotWorking.svg\"></img>Not working:{props.state.selectedItem.downVoteCount}</span></Row>&nbsp;\n\n                    <Column className=\"card-footer-info\">\n                        <Row>\n            <FacebookShareButton style={{paddingRight:\"3px\"}} url={process.env.REACT_APP_WEBAPP_URL} quote={`${props.state.selectedItem.description} Found at`}>\n                <FacebookIcon  size={20} round={true}></FacebookIcon>\n            </FacebookShareButton>\n            <WhatsappShareButton style={{paddingRight:\"3px\"}} url={process.env.REACT_APP_WEBAPP_URL} title={`${props.state.selectedItem.description} Found at`}>\n                <WhatsappIcon size={20} round={true}></WhatsappIcon>\n            </WhatsappShareButton>\n            <TwitterShareButton  url={process.env.REACT_APP_WEBAPP_URL} title={`${props.state.selectedItem.description} Found at`}>\n                <TwitterIcon size={20} round={true}></TwitterIcon>\n            </TwitterShareButton>\n                        </Row>\n                    </Column>\n\n                </Row>\n             </div>\n        </Dialog>\n    );\n}\n\nexport default ColumnCardComponent;","import {httpConstants} from \"../constants\";\n\nexport const httpService = (method, headers, data, url) => {\n    const requestOptions = {\n        method: method,\n        keepalive: true,\n        headers: headers || {'Content-Type': 'application/json'}\n    };\n\n    if (method !== httpConstants.METHOD_TYPE.GET)\n        requestOptions.body = JSON.stringify(data);\n\n    return fetch(url, requestOptions)\n        .then(function handleResponse(response) {\n            //in case API is down-\n            if (!response || !response.ok)\n                return Promise.reject(\"Unable to fetch data\");\n            return response.text().then(responseText => {\n                if (!responseText)\n                    return Promise.reject(responseText);\n                let data;\n                try {\n                    data = typeof responseText === 'object' ? responseText : JSON.parse(responseText);\n                    if (data && !data.success)\n                        return Promise.reject((data && data.responseCode) === 404 ? data : (data && {\n                            message: data.message,\n                            responseCode: data.responseCode,\n                            responseData: data.responseData\n                        }) || response.statusText);\n\n                } catch (err) {\n                    return Promise.reject(err)\n                }\n                return data;\n            });\n        }).catch(function (err) {\n            console.log('Class: httpService, Function: fetch ==', err);\n            return Promise.reject(err);\n        })\n\n};\n","import {httpService} from \"../managers/httpService\";\nimport {httpConstants} from \"../constants\";\n\n\n\nexport default {\n    states,\n    upVote,\n    downVote,\n    getCategories,\n    getFilteredData,\n    getStates: getTags,\n    getCardDetails\n}\n\n\nexport async function states(toadd){\n    let url = `https://www.covidindiahelp.info:3002/getCards?duration=2000000&state=` + toadd;\n    // let url = `https://3tzqfrzicb.execute-api.us-east-1.amazonaws.com/prod-v1/getCards?duration=2000000&state=` + toadd;\n    return httpService(httpConstants.METHOD_TYPE.GET, {'Content-Type': httpConstants.CONTENT_TYPE.APPLICATION_JSON},{},url)\n        .then(response => {\n            // console.log(\"response dasd\",response)\n                return Promise.resolve(response);\n            }\n        ).catch(function (err) {\n            // console.log(\"err dasd\",err)\n            return Promise.reject(err);\n        });\n}\n\n\n\nexport async function upVote(id,description){\n    // let url = `https://www.covidindiahelp.info:3002/upVote`;\n    let url = `https://3tzqfrzicb.execute-api.us-east-1.amazonaws.com/prod-v1/upvote`;\n    let data={\n        \"id\":id,\n        \"description\":description\n    };\n    return httpService(httpConstants.METHOD_TYPE.POST, {'Content-Type': httpConstants.CONTENT_TYPE.APPLICATION_JSON},data,url)\n        .then(response => {\n                // console.log(\"response dasd\",response)\n                return Promise.resolve(response);\n            }\n        ).catch(function (err) {\n            // console.log(\"err dasd\",err)\n            return Promise.reject(err);\n        });\n}\n\n\n\n\nexport async function downVote(id,description){\n    // let url = `https://www.covidindiahelp.info:3002/downVote`;\n    let url = `https://3tzqfrzicb.execute-api.us-east-1.amazonaws.com/prod-v1/downvote`;\n    let data={\n        \"id\":id,\n        \"description\":description\n    };\n    return httpService(httpConstants.METHOD_TYPE.POST, {'Content-Type': httpConstants.CONTENT_TYPE.APPLICATION_JSON},data,url)\n        .then(response => {\n                // console.log(\"response dasd\",response)\n                return Promise.resolve(response);\n            }\n        ).catch(function (err) {\n            // console.log(\"err dasd\",err)\n            return Promise.reject(err);\n        });\n}\n\nexport async function getCategories(req){\n    // let url = `https://www.covidindiahelp.info:3001/tags?type=CATEGORY`;\n    let url = `https://3tzqfrzicb.execute-api.us-east-1.amazonaws.com/prod-v1/tags?type=CATEGORY`;\n    return httpService(httpConstants.METHOD_TYPE.GET, {'Content-Type': httpConstants.CONTENT_TYPE.APPLICATION_JSON},{},url)\n        .then(response => {\n                // console.log(\"response dasd\",response)\n                return Promise.resolve(response);\n            }\n        ).catch(function (err) {\n            // console.log(\"err dasd\",err)\n            return Promise.reject(err);\n        });\n}\n\nexport async function getFilteredData(req){\n    // let url = `https://www.covidindiahelp.info:3002/getCards?duration=2000000&state=${req.state}&category=${req.category}`;\n    let url = `https://3tzqfrzicb.execute-api.us-east-1.amazonaws.com/prod-v1/cards?duration=2000000&state=${req.state}&category=${req.category}`;\n    return httpService(httpConstants.METHOD_TYPE.GET, {'Content-Type': httpConstants.CONTENT_TYPE.APPLICATION_JSON},{},url)\n        .then(response => {\n                // console.log(\"response dasd\",response)\n                return Promise.resolve(response);\n            }\n        ).catch(function (err) {\n            // console.log(\"err dasd\",err)\n            return Promise.reject(err);\n        });\n}\n\nexport async function getCardDetails(req){\n    // let url = `https://covidindiahelp.info:3002/card/${req.id}`;\n    let url = `https://3tzqfrzicb.execute-api.us-east-1.amazonaws.com/prod-v1/card/${req.id}`;\n    return httpService(httpConstants.METHOD_TYPE.GET, {'Content-Type': httpConstants.CONTENT_TYPE.APPLICATION_JSON},{},url)\n        .then(response => {\n                // console.log(\"response dasd\",response)\n                return Promise.resolve(response);\n            }\n        ).catch(function (err) {\n            // console.log(\"err dasd\",err)\n            return Promise.reject(err);\n        });\n}\nexport async function getTags(){\n    // let url = `https://www.covidindiahelp.info:3001/tags`;\n    let url = `https://3tzqfrzicb.execute-api.us-east-1.amazonaws.com/prod-v1/tags`;\n    return httpService(httpConstants.METHOD_TYPE.GET, {'Content-Type': httpConstants.CONTENT_TYPE.APPLICATION_JSON},{},url)\n        .then(response => {\n                // console.log(\"response dasd\",response)\n                return Promise.resolve(response);\n            }\n        ).catch(function (err) {\n            // console.log(\"err dasd\",err)\n            return Promise.reject(err);\n        });\n}\n","import React from \"react\";\nimport {Row} from \"simple-flexbox\";\n\nconst Footer = () => {\n    return (\n        <Row className=\"disclaimer-text\">Disclaimer: Please do not send any money to anyone. We are not responsible for\n            any loss. The information listed on our website is crowd sourced and it can be inaccurate.</Row>\n    )\n\n}\nexport default Footer","import React from 'react'\nimport {Row, Col} from 'antd';\nimport './column.css'\nimport 'antd/dist/antd.css';\nimport ColumnCard from '../column-cards';\nimport Footer from \"./footer\";\n\n\nfunction ColumnComponent(props) {\n\n    return (\n        <>\n            <Row className=\"wrapOnMedia\">\n                {\n                    props.state.list.map((col, index) => (\n                        <Col id=\"style-1\" className=\"cardStyle\" key={index}>\n                            <Row>\n                                <Col span={20}> <span className=\"oxygen-beds\"\n                                                      style={{fontSize: \"11px\"}}>{col.label}</span>\n                                                      </Col>\n                                                      <Col className=\"left-p\" onClick={() => props.handleColumnClose(col)} style={{cursor: 'pointer'}}><img\n                        src=\"/images/Cancel.svg\"/> </Col>\n                            </Row>\n                            <Row className=\"coloumn-scroll\">\n\n                                <ColumnCard\n                                    originalResponseData={props.state.originalResponseData}\n                                    responseData={props.responseData.filter((row) => row.category.toLowerCase() === col.filterKey || row.category.toLowerCase() === col.filterKey2)}\n                                    incrementUpVote={props.incrementUpVote}\n                                    incrementDownVote={props.incrementDownVote}\n                                />\n                            </Row>\n                        </Col>\n                    ))\n                }\n            </Row>\n            <Footer/>\n        </>\n\n    );\n}\n\nexport default ColumnComponent;\n","import React, {useState} from 'react'\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n      top:\"35px\",\n    }\n  }));\n\nfunction DrawerComponent(props) {\n    const classes = useStyles();\n  const theme = useTheme();\n\n    return (\n\n        <div>\n        <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={props.show}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <List>\n          {['Dashboard', 'Add Information', 'About'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemText primary={text} onClick={() => {\n                props.handleNavigate(index)}}/>\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n        </div>\n\n    );\n}\n\nexport default DrawerComponent;","import React, { useState } from 'react'\nimport { Row, Col } from 'antd';\nimport { Select, Radio } from 'antd';\nimport './column.css'\nfunction Credits({show,setShow}) {\n    const { Option } = Select;\n    \n    return (\n       <>\n        {show? <div className=\"scrollbar\" id=\"style-1\" style={{right:'12px',top:'33px',position:'absolute',width:'290px',zIndex:'100000',height:'300px',overflowY:'scroll',overflowX:'hidden',background:'white',borderRadius:'5px',boxShadow:'0px 0px 3px #0005'}}>\n            <p style={{fontWeight:'700',fontSize:'17px',marginLeft:'10px',marginTop:'15px',marginBottom:'5px'}}>\n                Contributors\n            </p>\n            <p style={{fontWeight:'400',fontSize:'11px',marginLeft:'10px',marginTop:'15px',marginBottom:'5px'}}>\n            We are a team working to help people find relevant and verified information at the time of the pandemic. Please be careful before sending any money to anyone. We are not responsible for any loss. The information is crowd sourced and it can be inaccurate. Here is the list of contributors of the project:\n\n            <br/>\n            <br/>\n            <li>Akash Takyar</li>\n            <li>Kapil Saxena</li>\n            <li>Prashant Raghav</li>\n            <li>Ayush Kulshrestha</li>\n            <li>Anurag Kumar</li>\n            <li>Chandrika</li>\n            <li>Rituraj</li>\n            <li>Nishant Garg</li>\n            <li>Gaurav Chauhan</li>\n            <li>Sristi Rajput</li>\n            <li>Dhanya Mary Biju</li>\n            <li>Sharad Gupta</li>\n            <li>Shivansh Mehendiratta</li>\n            <li>Jayesh Gadewar</li>\n                <li>Srinjoy Chowdhary</li>\n                <li>Sunny Kumar</li>\n            <br/>\n            For any further queries please contact at covidindiahelp.info@gmail.com<br/><br/>v0.1 - beta\n            </p>\n        </div>:\"\"}\n       </>\n    );\n}\n\nexport default Credits;","import React, {useState} from 'react'\nimport '../columns/column.css'\nimport Credits from '../columns/./credits';\nimport InfoIcon from '@material-ui/icons/Info';\n\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {Column, Row} from \"simple-flexbox\";\nimport {stateNamesConstant} from '../../constants'\n\nfunction NavbarComponent(props) {\n    const [showCredits, setshowCredits] = useState(false)\n    return (\n        <Row\n            style={{\n                backgroundColor: \"#474951\",\n                height: \"35px\",\n                marginLeft: '0px',\n                marginRight: '0px',\n                alignItems: 'center',\n                justifyContent: \"space-between\"\n            }}>\n            <Column className=\"navbar-cont\">\n                <Row style={{height: \"100%\", alignItems: 'center', columnGap: '5px'}}>\n                <Column className=\"drawericon\" style={{fontSize: \"10px\", cursor: 'pointer'}}>\n                        <img src=\"/images/drawer-white.png\" alt={'Refresh'} width={'24px'} onClick={() => props.drawerToggleClickHandler()}/>\n                    </Column>\n                    <Column className=\"bookmarked\" style={{fontSize: \"12px\", marginLeft: '10px'}}>Covid India\n                        Help</Column>\n                        {props.isHeader?<>\n                    <Column style={{marginLeft: \"12px\"}} id={'state-list-container'}>\n                        <Autocomplete\n                            id=\"AllStates\"\n                            options={props.countryStateList}\n                            getOptionLabel={(option) => option.title}\n                            style={{width: 160, zIndex: 100000}}\n                            onInputChange={(event, value) => props.handleChangeForCountryState(event, value)}\n                            renderInput={(params) => <TextField {...params} label=\"All States\" variant=\"outlined\"/>}\n                        />\n                    </Column>\n                    <Column style={{marginLeft: \"12px\"}} id={'state-list-container'}>\n                        <Autocomplete\n                            id=\"AllCategories\"\n                            options={props.state.categoryList}\n                            getOptionLabel={(option) => option.name}\n                            style={{width: 160, zIndex: 100000}}\n                            onInputChange={(event, value) => props.handleChangeForCategory(event, value)}\n                            renderInput={(params) => <TextField {...params} label=\"All Categories\" variant=\"outlined\"/>}\n                        />\n                    </Column>\n                    <Column className=\"bookmarked\" style={{fontSize: \"10px\", cursor: 'pointer'}}>\n                        <img src=\"/images/refresh_48px.svg\"\n                        style={{filter: 'invert(100%) sepia(0%) saturate(2%) hue-rotate(282deg) brightness(105%) contrast(101%)'}}\n                        alt={'Refresh'} width={'24px'} onClick={() => props.onRefresh('')}/>\n                    </Column>\n                    </>:\n                    \"\"\n                        }\n                </Row>\n            </Column>\n            {props.isHeader?<>\n            <Column onClick={() => setshowCredits(!showCredits)} className=\"navbar-cont\">\n                <Row className=\"bookmarked\"\n                     style={{fontSize: \"11px\", cursor: 'pointer', paddingRight: '10px', position: 'relative'}}><InfoIcon\n                    style={{color: 'white', fontSize: '20px'}}/> </Row>\n                <Credits show={showCredits} setShow={setshowCredits}/>\n            </Column>\n            </> : \"\"}\n        </Row>\n    );\n}\n\nexport default NavbarComponent;\n","import React, {useState} from 'react'\nimport '../columns/column.css'\n\nfunction ColumnComponent(props) {\n\n    return (\n        <div className=\"backdrop\" \n            onClick={props.close}\n        />\n    );\n}\n\nexport default ColumnComponent;","import React from \"react\";\nimport BaseComponent from '../baseComponent'\nimport Drawer from './drawer'\nimport {history} from \"../../managers/history\";\nimport  Navbar  from \"./navbar\";\nimport Backdrop from \"./backdrop\";\n\nclass HeaderComponent extends BaseComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \n            isHeader:true,\n            drawerOpen: false,\n\n        }\n    }\n\n    componentDidMount() {\n      if(this.props.type===\"about\")\n      this.setState({isHeader:false})\n    }\n\n\n\n    drawerToggleClickHandler = () => {\n      console.log(\"drawerToggleClickHandler\",this.state.drawerOpen);\n        this.setState({\n          drawerOpen: !this.state.drawerOpen\n        })\n    }\n\n    backdropClickHandler = () => {\n        this.setState({\n          drawerOpen: false\n        })\n      }\n\n      handleNavigate=async(index)=>{\n          if(index==0){\n            this.setState({\n              drawerOpen: !this.state.drawerOpen,isHeader:true\n            })\n            history.push('/');\n          }\n          else if(index==1){\n            window.open(\"https://docs.google.com/forms/d/e/1FAIpQLScFjzTeZ2jr3in3uPEKkHGHgAwDxAm98yH4INz8FjXHG-dSfQ/viewform\")\n          }\n          else if(index==2)\n          {\n            console.log(\"header\");\n            await this.setState({isHeader: false})\n            history.push('/about'); \n          }\n      }\n\n    render() {\n        return (\n            <>\n            <Navbar drawerToggleClickHandler={this.drawerToggleClickHandler}\n                     handleChangeForCountryState={this.props.handleChangeForCountryState} onRefresh={this.props.onRefresh}\n                     countryStateList={this.props.countryStateList} \n                     state={this.props.state}\n                     isHeader={this.state.isHeader}\n                     handleChangeForCategory={this.props.handleChangeForCategory}\n            ></Navbar>\n            <Drawer handleNavigate={this.handleNavigate} show={this.state.drawerOpen}/>\n            {this.state.drawerOpen?\n            <Backdrop close={this.backdropClickHandler}></Backdrop> : \"\"}\n            \n            </>\n        );\n    }\n}\n\nexport default HeaderComponent;","import React, {useState} from 'react'\nimport Header from \"../common/index\";\nimport './addinfo.css'\n\nfunction AddInfoComponent(props) {\n\n    console.log(\"props\",props);\n\n    return (\n        <>\n        <Header type=\"about\"/>\n\n        <div className='main'>\n            <div className='div1'>\n                \n            </div>\n            <div className='div2'>\n            <div className='fs-14 fc-label-black m-t-40 mb-xs'>\n                    About\n                </div>\n                <p style={{fontWeight:'400',fontSize:'11px',marginLeft:'10px',marginTop:'15px',marginBottom:'5px'}}>\n            We are a team working to help people find relevant and verified information at the time of the pandemic. Please be careful before sending any money to anyone. We are not responsible for any loss. The information is crowd sourced and it can be inaccurate. Here is the list of contributors of the project:\n\n            <br/>\n            <br/>\n            <li>Akash Takyar</li>\n            <li>Kapil Saxena</li>\n            <li>Prashant Raghav</li>\n            <li>Ayush Kulshrestha</li>\n            <li>Anurag Kumar</li>\n            <li>Chandrika</li>\n            <li>Rituraj</li>\n            <li>Nishant Garg</li>\n            <li>Gaurav Chauhan</li>\n            <li>Sristi Rajput</li>\n            <li>Dhanya Mary Biju</li>\n            <li>Sharad Gupta</li>\n            <li>Shivansh Mehendiratta</li>\n            <li>Jayesh Gadewar</li>\n                <li>Srinjoy Chowdhary</li>\n                <li>Sunny Kumar</li>\n            <br/>\n            For any further queries please contact at covidindiahelp.info@gmail.com<br/><br/>v0.1 - beta\n            </p>\n            </div>\n            <div className=\"div3\">\n\n            </div>\n        </div>\n        \n        </>\n\n    );\n}\n\nexport default AddInfoComponent;","import React from \"react\";\nimport \"./custom.css\";\nimport {Card, CardContent, Typography} from \"@material-ui/core\";\nimport {Row, Column} from \"simple-flexbox\";\nimport {stateNamesConstant} from '../../../constants';\n\nfunction SelectCategoryComponent(props) {\n    console.log('Class: SelectCategoryComponent, Function: SelectCategoryComponent ==', props);\n    return (\n        <>\n            <Row><Column className=\"back\" onClick={props.onBackToSelectState}><span>\n                <img src=\"/images/BackButtonBlack.svg\" alt=\"covid19\"/></span></Column></Row>\n            <Row className=\"category-header\">\n                <Column>What are you searching in {stateNamesConstant[props.selectedState]}?</Column>\n            </Row>\n            {props.categoryList ? props.categoryList.map(data => (\n                <div className=\"option\">\n                    <Card className=\"m-10 select-category\" onClick={() => {\n                        props.onSelectCategory(data.name)\n                    }}>\n                        <CardContent className=\"card-desc-container\">\n                            <Typography className=\"mb-10\">\n                                <p>\n                                    {data.name.toUpperCase()}\n                                </p>\n\n                            </Typography>\n                        </CardContent>\n                    </Card>\n                </div>)) : \"\"}\n                <div className=\"hidden-div\">.</div>\n        </>\n    );\n}\n\nexport default SelectCategoryComponent;\n","import React from \"react\";\nimport BaseComponent from '../../baseComponent'\nimport SelectCategoryComponent from './selectCategoryComponent'\nimport {history} from '../../../managers/history'\nimport {genericConstants} from \"../../../constants\";\n\nclass Category extends BaseComponent {\n    onSelectCategory = (value) => {\n        if (this.props.toggleState) {\n            this.props.toggleState(\"selectedComponent\", genericConstants.WEB_COMPONENT_TYPE.CARDS)\n            this.props.toggleState(\"selectedCategory\", value.includes('/') ? value.split('/')[0] : value)\n        }\n        history.push(`/${this.props.selectedState}/${value.includes('/') ? value.split('/')[0].toLowerCase() : value.toLowerCase()}`)\n    }\n\n    onBackToSelectState = () => {\n        if (this.props.toggleState)\n            this.props.toggleState(\"selectedComponent\", genericConstants.WEB_COMPONENT_TYPE.STATE)\n        history.push('/')\n    }\n\n    render() {\n        return (\n            <SelectCategoryComponent\n                selectedState={this.props.selectedState}\n                categoryList={this.props.categoryList}\n                onSelectCategory={this.onSelectCategory}\n                onBackToSelectState={this.onBackToSelectState}\n            />\n        );\n    }\n}\n\nexport default Category;\n","import React from \"react\";\nimport BaseComponent from '../baseComponent'\nimport AddInfoComponent from './addInfoComponent'\nimport {history} from \"../../managers/history\";\n\nclass AddInfo extends BaseComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            drawerOpen:false\n        }\n    }\n\n    componentDidMount() {\n    \n    }\n\n  \n    render() {\n        return (\n            <AddInfoComponent/>\n        );\n    }\n}\n\nexport default AddInfo;","import React, {useState} from 'react'\nimport '../../columns/column.css'\nimport {Column, Row} from \"simple-flexbox\";\nimport { stateNamesConstant } from '../../../constants';\n\nfunction SelectStates(props) {\n    return (\n        <>\n            <Row className=\"search-location-row\">\n                <Column className=\"search-row\">\n                    <span><img className=\"search-image p-r-10\" src=\"/images/search.svg\"></img>   \n                <input placeholder=\"Search Location\" className=\"search-location\" onChange={(event)=>{props.handleSearchLocationInput(event.target.value.trim())}}></input>\n                </span>\n                </Column>\n            </Row>\n            {props.countryStateList && props.countryStateList.length >0 ? props.countryStateList.map(location=>(\n                <>\n                {location && location.name && location.name.length ?\n                    <Row className=\"location-row\" onClick={()=>{props.onSelectLocation(location.name)}}>\n                   <Column className=\"location-column\">\n                        {stateNamesConstant[location.name]}\n                   </Column>\n                   </Row> : \"\"}\n                   </>\n            ))\n            \n         : \"\"}\n         <div className=\"hidden-div\">.</div>\n        </>\n    );\n}\n\nexport default SelectStates;","/**\n * Created by Ayush Kulshrestha on 18/09/2019.\n */\n\nimport Cookies from 'universal-cookie';\n\nconst cookies = new Cookies();\n\nexport const sessionManager = {\n    setDataInCookies,\n    getDataFromCookies,\n    removeDataFromCookies,\n};\n\nfunction setDataInCookies(key, data) {\n    cookies.set(key, JSON.stringify(data), {path: '/'});\n}\n\nfunction getDataFromCookies(key) {\n    return cookies.get(key)\n}\n\nfunction removeDataFromCookies(key) {\n    cookies.remove(key, {path: '/'});\n}\n","import {httpService} from \"../managers/httpService\";\n\nconst {httpConstants} = require(\"../constants\");\n\nexport default {\n    registerDevice,\n    updateDevice,\n}\n\nfunction getHeaders() {\n    return {'Content-Type': httpConstants.CONTENT_TYPE.APPLICATION_JSON, 'skip': true}\n}\n\nasync function registerDevice(requestData) {\n    let url = process.env.REACT_APP_NOTIFICATION_SERVICE_URL + httpConstants.API_END_POINT.REGISTER_DEVICE;\n    return httpService(httpConstants.METHOD_TYPE.POST, getHeaders(), requestData, url)\n        .then(\n            response => {\n                if (!response.success || response.responseCode !== 200 || !response.responseData || response.responseData.length === 0)\n                    return Promise.reject();\n                return Promise.resolve(response.responseData);\n            }\n        ).catch(function (err) {\n            return Promise.reject(err);\n        });\n};\nasync function updateDevice(requestData) {\n    let url = process.env.REACT_APP_NOTIFICATION_SERVICE_URL + httpConstants.API_END_POINT.REGISTER_DEVICE;\n    return httpService(httpConstants.METHOD_TYPE.PUT, getHeaders(), requestData, url)\n        .then(\n            response => {\n                if (!response.success || response.responseCode !== 200 || !response.responseData || response.responseData.length === 0)\n                    return Promise.reject();\n                return Promise.resolve(response.responseData);\n            }\n        ).catch(function (err) {\n            return Promise.reject(err);\n        });\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport {sessionManager} from \"../../managers/sessionManager\";\nimport Utility from \"../../utility\";\nimport {NotificationService} from \"../../services\";\nimport firebase from \"firebase\";\nimport {stateNamesConstant} from \"../../constants\";\n\nconst registerDevice = async (token, requestData) => {\n    requestData[\"deviceType\"] = \"web\";\n    requestData[\"pushToken\"] = token ? token : \"\";\n    let [error, deviceResponse] = await Utility.parseResponse(\n        NotificationService.registerDevice(requestData),\n    );\n    sessionManager.setDataInCookies(\"deviceId\", deviceResponse.deviceId);\n    if (deviceResponse && !error)\n        Utility.apiSuccessToast(\n            `You will receive latest information about ${\n                requestData.selectedCategory\n            } in ${stateNamesConstant[requestData.selectedState]}`,\n        );\n    else Utility.apiFailureToast('Unable to proceed!');\n};\n\nconst registerForPush = async (requestData) => {\n    const pushToken = await sessionManager.getDataFromCookies(\"pushToken\");\n    if (pushToken) {\n        registerDevice(pushToken, requestData).catch((error) =>\n            console.log(\"Device Registration Error! \", error),\n        );\n        return;\n    }\n    try {\n        const messaging = firebase.messaging();\n        messaging.usePublicVapidKey(\n            process.env.REACT_APP_FIREBASE_WEB_PUSH_PUBLIC_KEY,\n        );\n\n        Notification.requestPermission().then((permission) => {\n            if (permission === \"granted\") {\n                console.log(\"Notification permission granted.\");\n                messaging\n                    .getToken()\n                    .then((currentToken) => {\n                        sessionManager.setDataInCookies(\"pushToken\", currentToken);\n                        if (currentToken)\n                            registerDevice(currentToken, requestData).catch((error) =>\n                                console.log(\"Device Registration Error! \", error),\n                            );\n                        else {\n                            console.log(\n                                \"No Instance ID token available. Request permission to generate one.\",\n                            );\n                            Utility.apiFailureToast('Unable to proceed!');\n                        }\n                    })\n                    .catch((err) => {\n                        console.log(\"An error occurred while retrieving token. \", err);\n                    });\n            } else {\n                console.log(\"Unable to get permission to notify.\");\n            }\n        });\n    } catch (e) {\n        console.log(\"error handling in try catch\", e);\n    }\n};\n\nconst PushAlert = styled.button`\n  color: #ff0000;\n  outline: none;\n  border: none;\n  background-color: white;\n  font-weight: 600;\n  font-size: 14px;\n  text-align: center;\n  & img {\n    margin: 5px;\n  }\n`;\n\nconst PushAlertComponent = (props) => {\n    const {selectedCategory, selectedState} = props;\n\n    const onAlertClicked = async () => {\n        let deviceId = await sessionManager.getDataFromCookies(\"deviceId\");\n        const requestData = {\n            criteriaCategory: selectedCategory.toUpperCase(),\n            criteriaState: selectedState,\n        };\n        if (deviceId) {\n            requestData.deviceId = deviceId;\n            let [error, deviceResponse] = await Utility.parseResponse(\n                NotificationService.updateDevice(requestData),\n            );\n            if (deviceResponse && !error)\n                Utility.apiSuccessToast(\n                    `You will receive latest information about ${selectedCategory} in ${stateNamesConstant[selectedState]}`,\n                );\n        } else await registerForPush(requestData);\n    };\n\n    return (\n        <PushAlert onClick={onAlertClicked}>\n            <img src=\"/images/alert.svg\"/>\n            Set Alert\n        </PushAlert>\n    );\n};\nexport default PushAlertComponent;\n","import React from \"react\";\nimport \"../../column-cards/column-cards.css\";\nimport \"antd/dist/antd.css\";\nimport {Avatar, Card, CardContent, Typography} from \"@material-ui/core\";\nimport moment from \"moment\";\nimport {Row, Column} from \"simple-flexbox\";\nimport utility from \"../../../utility\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport {TwitterTweetEmbed} from \"react-twitter-embed\";\nimport {stateNamesConstant, voteTypeConstants} from \"../../../constants\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {isIOS, isIOS13, isIPad13, isPod13} from \"react-device-detect\";\n\nimport {\n    FacebookShareButton,\n    FacebookIcon,\n    WhatsappIcon,\n    TwitterIcon,\n    WhatsappShareButton,\n    TwitterShareButton,\n} from \"react-share\";\nimport PushAlertComponent from \"../../pushAlert\";\n\nconst useStyles = makeStyles((theme) => ({\n    popover: {\n        pointerEvents: \"none\",\n        maxWidth: \"400px\",\n        border: \"none\",\n        background: \"white\",\n    },\n    select: {\n        fontSize: \"12px\",\n    },\n}));\n\nfunction LeadsComponent(props) {\n    const classes = useStyles();\n    let latestComment =null\n    return (\n        <>\n            {DialogBox(props)}\n            {NotWorkingDialog(props)}\n            <Row className=\"selected-param\">\n                <Column style={{width: \"100%\"}}>\n                    <Row\n                        justifyContent=\"space-between\"\n                        alignItems=\"center\"\n                        style={{width: \"100%\"}}\n                    >\n            <span>\n              <img\n                  alt=\"back\"\n                  onClick={props.backToSelectCategory}\n                  style={{\n                      width: \"35px\",\n                      height: \"30px\",\n                      fill:\n                          \"invert(44%) sepia(97%) saturate(3395%) hue-rotate(187deg) brightness(101%) contrast(109%)\",\n                  }}\n                  src=\"/images/BackButton.svg\"\n              />\n            </span>\n                        <span className=\"selected\">\n            {`${\n                stateNamesConstant[props.selectedState]\n            }/${utility.toSentenceCase(props.selectedCategory)}`}\n          </span>\n                        {!isIOS && !isIOS13 && !isIPad13 && !isPod13 ? (\n                            <PushAlertComponent\n                                selectedCategory={props.selectedCategory}\n                                selectedState={props.selectedState}\n                            />\n                        ) : (\n                            \"\"\n                        )}\n                    </Row>\n                </Column>\n            </Row>\n            <Row style={{padding: \"15px 5px 15px 15px\"}} className=\"sort-by\">\n                <Column style={{width: \"60%\"}}>\n                    <Select\n                        className={classes.select}\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={props.state.selectedSortingAttr}\n                        onChange={props.onSelectSorting}\n                    >\n                        <MenuItem value={\"Sort\"} disabled>\n                            Sort By -\n                        </MenuItem>\n                        <MenuItem value={\"recent\"}>Sort By - Recent</MenuItem>\n                        <MenuItem value={\"working\"}>Sort By - Working</MenuItem>\n                    </Select>\n                </Column>\n            </Row>\n            {props.state.allLeads.length > 0 ? (\n                props.state.allLeads &&\n                props.state.allLeads.map((ite, index) => {\n                    latestComment =utility.getLatestDownVoteComment(ite.comments)\n\n                    return(\n                        <>\n                            <Card className=\"m-10\" className=\"lead-card\" key={index}>\n                                <CardContent className=\"lead-container\">\n                                    <Typography className=\"mb-10\" variant=\"body2\"></Typography>\n                                    <Typography\n                                        className=\"card-desc\"\n                                        variant=\"body2\"\n                                        onClick={() => props.handlePopoverOpen(ite)}\n                                    >\n                                        {ite.description}\n                                    </Typography>\n                                    {ite.comments.length > 0 && <>\n                                        <hr style={{marginBottom: '5px'}}/>\n                                        <Typography\n                                            className=\"card-desc pt-1\"\n                                            variant=\"body2\"\n                                        >\n                                        <span\n                                            className=\"bottom-text\">{latestComment?.addedOn && moment(latestComment?.addedOn).fromNow()}</span> {\" \"}{latestComment?.description || ''}\n                                        </Typography></>}\n\n                                    <Row className=\"card-timestamp\">\n                                        <Row\n                                            className=\"card-vote-buttons\"\n                                            style={{cursor: \"pointer\"}}\n                                        >\n                    <span\n                        className=\"underline-text\"\n                        onClick={() => {\n                            props.incrementUpVote(ite._id);\n                            props.sendUpVoteRequest(ite._id);\n                        }}\n                    >\n                      Working:&nbsp;{ite.upVoteCount}\n                    </span>\n                                            &nbsp;&nbsp;\n                                            <span\n                                                className=\"card-vote-buttons  underline-text\"\n                                                style={{cursor: \"pointer\"}}\n                                                onClick={() => {\n                                                    props.handleNotWorkingPopoverOpen(ite._id);\n                                                }}\n                                            >\n                      Not working:&nbsp;{ite.downVoteCount}\n                    </span>\n                                        </Row>\n                                        &nbsp;\n                                        <Column className=\"card-footer-info\">\n                                            {utility.toSentenceCase(ite.state)}{\" \"}\n                                            {utility.toSentenceCase(ite.district)}{\" \"}\n                                            {ite.comments.length < 1 && moment(ite.channelCreatedOn).fromNow()}\n                                        </Column>\n                                    </Row>\n                                </CardContent>\n                            </Card>\n                        </>\n                    )\n                })\n            ) : (\n                <div className=\"loading\">\n                    {!props.state.responseMessage &&\n                    props.state.originalResponseData.length === 0\n                        ? \"Loading...\"\n                        : \"No leads available. Search for other cities.\"}\n                </div>\n            )}\n            <div className=\"hidden-div\">.</div>\n        </>\n    );\n}\n\nexport function NotWorkingDialog(props) {\n    return (\n        <Dialog\n            open={props.state.isShowNotWorkingPopup}\n            close={props.handlePopoverClose}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n        >\n            <div className=\"dialog-box\">\n                <Row className=\"dialog-header\">\n                    <Column>\n                        <div className=\"p-b-10\">Not Working Reasons</div>\n                    </Column>\n                    <Column\n                        onClick={()=>props.handlePopoverClose()}\n                        style={{cursor: \"pointer\"}}\n                    >\n                        <img alt=\"cancel\" src=\"/images/Cancel.svg\"/>{\" \"}\n                    </Column>\n                </Row>\n                <div className=\"p-sm-1 selected-item \" style={{cursor: \"pointer\"}}>\n                    <List>\n                        <ListItem\n                            button\n                            key={\"\"}\n                            onClick={() => {\n                                // props.incrementDownVote(props.state.id);\n                                props.sendDownVoteRequest(props.state.id, \"Wrong phone number\");\n                            }}\n                        >\n                            <ListItemText primary={\"Wrong phone number\"}/>\n                        </ListItem>\n                        <ListItem button key={\"\"}\n                                  onClick={() => {\n                                      // props.incrementDownVote(props.state.id);\n                                      props.sendDownVoteRequest(props.state.id, \"No answer\");\n                                  }}>\n                            <ListItemText primary={\"No answer\"}/>\n                        </ListItem>\n                        <ListItem button key={\"\"}\n                                  onClick={() => {\n                                      // props.incrementDownVote(props.state.id);\n                                      props.sendDownVoteRequest(props.state.id, \"Switched off/Out of coverage\");\n                                  }}>\n                            <ListItemText primary={\"Switched off/Out of coverage\"}/>\n                        </ListItem>\n                        <ListItem button key={\"\"}\n                                  onClick={() => {\n                                      // props.incrementDownVote(props.state.id);\n                                      props.sendDownVoteRequest(props.state.id, \"Answered but out of stock\");\n                                  }}>\n                            <ListItemText primary={\"Answered but out of stock\"}/>\n                        </ListItem>\n                        <ListItem button key={\"\"}\n                                  onClick={() => {\n                                      // props.incrementDownVote(props.state.id);\n                                      props.sendDownVoteRequest(props.state.id, \"Fake\");\n                                  }}>\n                            <ListItemText primary={\"Fake\"}/>\n                        </ListItem>\n                    </List>\n                </div>\n            </div>\n        </Dialog>\n    );\n}\n\nfunction DialogBox(props) {\n    return (\n        <Dialog\n            open={props.state.isShowSharePopup}\n            onClose={props.handlePopoverClose}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n        >\n            <div className=\"dialog-box\">\n                <Row className=\"dialog-header\">\n                    <Column>\n                        <div className=\"p-b-10\">Details</div>\n                    </Column>\n                    <Column\n                        onClick={() => props.handlePopoverClose()}\n                        style={{cursor: \"pointer\"}}\n                    >\n                        <img src=\"/images/Cancel.svg\"/>{\" \"}\n                    </Column>\n                </Row>\n                {props.state.selectedItem &&\n                typeof props.state.selectedItem.attachments === 'object' &&\n                typeof props.state.selectedItem.attachments.media_keys === 'object'\n                && props.state.selectedItem.attachments.media_keys.length\n                    ? (\n                        <>\n                            {props.state.uniqueContact && props.state.uniqueContact.length > 0 ? (\n                                <div className=\"p-t-20 p-r-20\">Contact :</div>\n                            ) : (\n                                \"\"\n                            )}\n                            {props.state.uniqueContact && props.state.uniqueContact.length > 0\n                                ? props.state.uniqueContact.map((data) => (\n                                    <div className=\"\">\n                                        <a href={`tel:${data}`}>{data}</a>\n                                    </div>\n                                ))\n                                : \"\"}\n                            <TwitterTweetEmbed\n                                options={{width: 400}}\n                                tweetId={props.state.selectedItem.channelID}\n                            />\n\n                            <Row className=\"card-timestamp\">\n                                <Column>\n                                    <div className=\"p-t-20 p-r-20 p-b-10 bottom-text\">\n                                        {props.state.selectedItem?.comments?.length > 0 && props.state.selectedItem.comments.map((comment, index) =>\n                                            comment.type === voteTypeConstants.DOWN_VOTE &&\n                                            <Typography className=\"card-desc pt-1\"\n                                                        variant=\"body2\">\n                                                <span\n                                                    className=\"p-t-20 bottom-text\">{moment(comment.addedOn).fromNow()}</span> {\" \"}<span\n                                                className=\"fc-black\">{comment.description}</span>\n                                            </Typography>\n                                        ) || moment(props.state.selectedItem?.channelCreatedOn || '').fromNow()}\n                                    </div>\n                                </Column>\n                                <Column>\n                                    <div className=\"p-t-20 p-r-20 p-b-10 bottom-text\">\n                                        {`Source: ${utility.toSentenceCase(props.state.selectedItem?.channel || '')}`}\n                                    </div>\n                                </Column>\n                            </Row>\n                        </>\n                    ) : (\n                        <div className=\"selected-item \">\n                            <div className=\"p-l-20 p-t-20 p-r-20\">\n                                {\" \"}\n                                {props.state.selectedItem.description}\n                            </div>\n                            {props.state.uniqueContact && props.state.uniqueContact.length > 0 ? (\n                                <div className=\"p-l-20 p-t-20 p-r-20\">Contact :</div>\n                            ) : (\n                                \"\"\n                            )}\n                            {props.state.uniqueContact && props.state.uniqueContact.length > 0\n                                ? props.state.uniqueContact.map((data) => (\n                                    <div className=\"p-l-20 \">\n                                        <a href={`tel:${data}`}>{data}</a>\n                                    </div>\n                                ))\n                                : \"\"}\n                            <Row className=\"card-timestamp\">\n                                <Column>\n                                    <div className=\"p-l-20 p-t-20 p-r-20 p-b-10 bottom-text\">\n                                        {props.state.selectedItem?.comments?.length > 0 && props.state.selectedItem.comments.map((comment, index) =>\n                                            comment.type === voteTypeConstants.DOWN_VOTE &&\n                                            <Typography className=\"card-desc pt-1\"\n                                                        variant=\"body2\">\n                                                <span\n                                                    className=\"p-t-20 bottom-text\">{moment(comment.addedOn).fromNow()}</span> {\" \"}<span\n                                                className=\"fc-black\">{comment.description}</span>\n                                            </Typography>\n                                        ) || moment(props.state.selectedItem?.channelCreatedOn || '').fromNow()}\n                                    </div>\n                                </Column>\n                                {props.state.selectedItem?.comments?.length < 1 && <Column>\n                                    <div className=\"p-l-20 p-t-20 p-r-20 p-b-10 bottom-text\">\n                                        {`Source: ${utility.toSentenceCase(props.state.selectedItem?.channel || '')}`}\n                                    </div>\n                                </Column>}\n                            </Row>\n                        </div>\n                    )}\n                {props.state.selectedItem?.comments?.length > 0 && <Row>\n                    <div className=\"p-l-20 bottom-text\" style={{textAlign: 'end'}}>\n                        {`Source: ${utility.toSentenceCase(props.state.selectedItem?.channel || '')}`}\n                    </div>\n                </Row>}\n\n                <Row className=\"card-timestamp p-t-20\">\n                    <Row className=\"card-vote-buttons\" style={{cursor: \"pointer\"}}>\n            <span\n                className=\" working-text\"\n                onClick={() => {\n                    props.incrementUpVote(props.state.selectedItem._id);\n\n                    props.sendUpVoteRequest(props.state.selectedItem._id, \"\");\n                }}\n            >\n              <img\n                  style={{width: \"20px\", paddingRight: \"1px\"}}\n                  src=\"/images/Working.svg\"\n                  alt={'image'}/>\n              Working:{props.state.selectedItem.upVoteCount}\n            </span>\n                        &nbsp;\n                        <span\n                            className=\"  not-working-text\"\n                            style={{cursor: \"pointer\"}}\n                            onClick={() => {\n                                props.handleNotWorkingPopoverOpen(props.state.selectedItem._id);\n                                // props.incrementDownVote(props.state.selectedItem._id);\n                                // props.sendDownVoteRequest(props.state.selectedItem._id, \"\");\n                            }}\n                        >\n              <img\n                  style={{width: \"20px\", paddingRight: \"1px\"}}\n                  src=\"/images/NotWorking.svg\"\n              ></img>\n              Not working:{props.state.selectedItem.downVoteCount}\n            </span>\n                    </Row>\n                    &nbsp;\n                    <Column className=\"card-footer-info\">\n                        <Row>\n                            <FacebookShareButton\n                                style={{paddingRight: \"3px\"}}\n                                url={process.env.REACT_APP_WEBAPP_URL}\n                                quote={`${props.state.selectedItem.description} Found at`}\n                            >\n                                <FacebookIcon size={20} round={true}></FacebookIcon>\n                            </FacebookShareButton>\n                            <WhatsappShareButton\n                                style={{paddingRight: \"3px\"}}\n                                url={process.env.REACT_APP_WEBAPP_URL}\n                                title={`${props.state.selectedItem.description} Found at`}\n                            >\n                                <WhatsappIcon size={20} round={true}></WhatsappIcon>\n                            </WhatsappShareButton>\n                            <TwitterShareButton\n                                url={process.env.REACT_APP_WEBAPP_URL}\n                                title={`${props.state.selectedItem.description} Found at`}\n                            >\n                                <TwitterIcon size={20} round={true}></TwitterIcon>\n                            </TwitterShareButton>\n                        </Row>\n                    </Column>\n                </Row>\n            </div>\n        </Dialog>\n    );\n}\n\nexport default LeadsComponent;\n","import React from \"react\";\nimport BaseComponent from '../../baseComponent'\nimport LeadsComponent from './lead'\nimport {getFilteredData, downVote, upVote} from \"../../../services/columns\"\nimport {history} from '../../../managers/history'\nimport {genericConstants} from \"../../../constants\";\n\n\nclass Category extends BaseComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            allLeads: [],\n            selectedState: props.selectedState,\n            selectedCategory: props.selectedCategory,\n            isShowSharePopup: false,\n            isShowNotWorkingPopup: false,\n            id: '',\n            popoverText: '',\n            selectedItem: {},\n            uniqueContact: [],\n            responseByIndex: {},\n            selectedSortingAttr: 'recent',\n            originalResponseData: [],\n            responseMessage: false\n        }\n    }\n\n    async componentDidMount() {\n        await this.getAllLeads();\n    }\n\n    getAllLeads = async () => {\n        let request = {\n            state: this.props.selectedState.toLowerCase(),\n            category: this.props.selectedCategory.toUpperCase()\n        }\n        let responseByIndex = {};\n        const {responseData, error, message} = await getFilteredData(request);\n        if (!responseData) return\n        responseData.forEach((obj, index) => {\n            responseByIndex[obj._id] = {\"index\": index, ...obj}\n        });\n        if (message === \"Covid Help info fetched successfully\") {\n            this.setState({responseMessage: true})\n        }\n        this.setState({allLeads: responseData, responseByIndex, originalResponseData: responseData})\n    }\n    backToSelectCategory = async () => {\n        this.props.toggleState(\"selectedComponent\", genericConstants.WEB_COMPONENT_TYPE.CATEGORY)\n        history.push(`/${this.props.selectedState}`)\n    }\n\n    sendUpVoteRequest = async (id, desription) => {\n        let data = `${id}`\n        try {\n            let response = await upVote(data, desription)\n            if (response.responseData && Array.isArray(response.responseData) && response.responseData.length) {\n                this.setState({allLeads: response.responseData, originalResponseData: response.responseData})\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    sendDownVoteRequest = async (id, desription) => {\n        let data = `${id}`\n        try {\n            let response = await downVote(data, desription)\n            if (response.responseData && Array.isArray(response.responseData) && response.responseData.length) {\n                this.setState({allLeads: response.responseData, originalResponseData: response.responseData})\n            }\n            this.incrementDownVote(id, response?.responseData?.comments || [])\n\n        } catch (error) {\n            console.log(error)\n        }\n        this.handlePopoverClose(this.state.isShowSharePopup);\n\n    }\n\n    handlePopoverOpen = async (item) => {\n        console.log(\"item=handlePopoverOpen==\", item)\n        let uniqueContact = []\n        uniqueContact = await this.getUniqueContact(item);\n        await this.setState({\n            isShowSharePopup: true,\n            popoverText: item.description,\n            selectedItem: item,\n            uniqueContact: uniqueContact\n        });\n    };\n\n    handlePopoverClose = async (isShowSharePopup = false) => {\n        console.log(\"isShowSharePopup===\", isShowSharePopup)\n        await this.setState({popoverAnchor: null, isShowSharePopup: isShowSharePopup, isShowNotWorkingPopup: false});\n    };\n\n    getUniqueContact = async (data) => {\n        if (!data && !data.phoneNumber.length) {\n            return []\n        }\n        let uniqueContact = []\n        data.phoneNumber.map((item) => {\n            item = item.trim()\n            if (!uniqueContact.includes(item) && item.length >= 10) uniqueContact.push(item)\n        })\n        return uniqueContact;\n    }\n\n    incrementUpVote = (id) => {\n        let index = this.state.responseByIndex[id].index;\n        this.state.allLeads[index].upVoteCount = this.state.allLeads[index].upVoteCount + 1;\n        this.setState({allLeads: this.state.allLeads, originalResponseData: this.state.allLeads})\n    }\n\n    incrementDownVote = (id, comments = []) => {\n        let index = this.state.responseByIndex[id].index;\n        this.state.allLeads[index].downVoteCount = this.state.allLeads[index].downVoteCount + 1;\n        this.state.allLeads[index].comments = comments;\n        this.setState({allLeads: this.state.allLeads, originalResponseData: this.state.allLeads})\n    }\n\n\n    onSelectSorting = (event) => {\n        let dummyData = this.state.originalResponseData;\n        this.setState({selectedSortingAttr: event.target.value});\n        if (event.target.value === \"Sort\") return\n        if (event.target.value === 'working')\n            dummyData = dummyData.sort((a, b) => {\n                return b.upVoteCount - a.upVoteCount\n            })\n        else {\n            console.log(\"this.state.originalResponseData\", this.state.originalResponseData);\n            dummyData = dummyData.sort((a, b) => {\n                return b.channelCreatedOn - a.channelCreatedOn\n            })\n        }\n        this.setState({allLeads: dummyData})\n    }\n\n    handleNotWorkingPopoverOpen = async (id) => {\n        await this.setState({isShowNotWorkingPopup: true, id: id});\n    };\n\n    render() {\n        return (\n            <LeadsComponent\n                state={this.state}\n                selectedState={this.props.selectedState}\n                selectedCategory={this.props.selectedCategory}\n                backToSelectCategory={this.backToSelectCategory}\n                handlePopoverOpen={this.handlePopoverOpen}\n                handlePopoverClose={this.handlePopoverClose}\n                incrementUpVote={this.incrementUpVote}\n                incrementDownVote={this.incrementDownVote}\n                sendUpVoteRequest={this.sendUpVoteRequest}\n                sendDownVoteRequest={this.sendDownVoteRequest}\n                onSelectSorting={this.onSelectSorting}\n                handleNotWorkingPopoverOpen={this.handleNotWorkingPopoverOpen}\n            />\n        );\n    }\n}\n\nexport default Category;\n","import React, {useState} from 'react'\nimport '../columns/column.css'\nimport Credits from '../columns/credits';\nimport InfoIcon from '@material-ui/icons/Info';\n\nimport {Column, Row} from \"simple-flexbox\";\n\nfunction NavbarComponent(props) {\n    const [showCredits, setshowCredits] = useState(false)\n    return (\n        <Row\n            style={{\n                backgroundColor: \"#474951\",\n                height: \"35px\",\n                marginLeft: '0px',\n                marginRight: '0px',\n                alignItems: 'center',\n                justifyContent: \"space-between\",\n                position:\"sticky\",\n                top:0\n            }}>\n            <Column>\n                <Column className=\"navbar-cont\">\n                    <Row style={{height: \"100%\", alignItems: 'center', columnGap: '5px'}}>\n                        <Column className=\"drawericon\" style={{fontSize: \"10px\", cursor: 'pointer'}}>\n                            <img src=\"/images/hands.svg\" alt={'Covid Help'}/>\n                        </Column>\n                        <Column className=\"bookmarked\" style={{fontSize: \"12px\", marginLeft: '10px'}}>Mission Humane</Column>\n                    </Row>\n                </Column>\n            </Column>\n\n            <Column>\n                <Column className=\"navbar-cont\">\n                    <Row className=\"bookmarked\"\n                         style={{cursor: 'pointer'}}>\n                        {props.isInfo ?\n                            <>\n                                <img onClick={() => window.open(\"https://forms.gle/5LhpNqX1vCYb671P7\")}\n                                     className='header-icons' src=\"/images/add.svg\"/>\n                            </> :\n                            <img className='header-icons' src=\"/images/info.svg\"\n                                 onClick={() => setshowCredits(!showCredits)}/>\n                        }\n                    </Row>\n                    <Credits show={showCredits} setShow={setshowCredits}/>\n                </Column>\n            </Column>\n\n        </Row>\n    );\n}\n\nexport default NavbarComponent;\n","import React from 'react'\nimport {Column, Row} from \"simple-flexbox\";\nimport {TwitterTweetEmbed} from \"react-twitter-embed\";\nimport {Typography} from \"@material-ui/core\";\nimport moment from \"moment\";\nimport utility from \"../../utility\";\nimport {\n    FacebookIcon,\n    FacebookShareButton,\n    TwitterIcon,\n    TwitterShareButton,\n    WhatsappIcon,\n    WhatsappShareButton\n} from \"react-share\";\nimport {NotWorkingDialog} from \"../mobile-view/leads/lead\";\nimport {voteTypeConstants} from \"../../constants\";\n\nconst LeadDetailsComponent = (props) => {\n    return (<div>\n        <div className=\"dialog-box\" style={{maxWidth: '80%', margin:'auto'}}>\n            <Row className=\"dialog-header\">\n                <Column>\n                    <div className=\"p-b-10\">Details</div>\n                </Column>\n            </Row>\n            {props.state?.leadDetails &&\n            typeof props.state?.leadDetails.attachments === 'object' &&\n            typeof props.state?.leadDetails.attachments.media_keys === 'object'\n            && props.state?.leadDetails.attachments.media_keys.length\n                ? (\n                    <>\n                        {props.state?.uniqueContact && props.state?.uniqueContact.length > 0 ? (\n                            <div className=\"p-t-20 p-r-20\">Contact :</div>\n                        ) : (\n                            \"\"\n                        )}\n                        {props.state?.uniqueContact && props.state?.uniqueContact.length > 0\n                            ? props.state?.uniqueContact.map((data) => (\n                                <div className=\"\">\n                                    <a href={`tel:${data}`}>{data}</a>\n                                </div>\n                            ))\n                            : \"\"}\n                        <TwitterTweetEmbed\n                            options={{width: 400}}\n                            tweetId={props.state?.leadDetails.channelID}\n                        />\n\n                        <Row className=\"card-timestamp\">\n                            <Column>\n                                <div className=\"p-t-20 p-r-20 p-b-10 bottom-text\">\n                                    {props.state?.leadDetails?.comments?.length > 0 && props.state?.leadDetails.comments.map((comment, index) =>\n                                        comment.type === voteTypeConstants.DOWN_VOTE &&\n                                        <Typography className=\"card-desc pt-1\"\n                                                    variant=\"body2\">\n                                                <span\n                                                    className=\"p-t-20 bottom-text\">{moment(comment.addedOn).fromNow()}</span> {\" \"}<span\n                                            className=\"fc-black\">{comment.description}</span>\n                                        </Typography>\n                                    ) || moment(props.state?.leadDetails?.channelCreatedOn || '').fromNow()}\n                                </div>\n                            </Column>\n                            <Column>\n                                <div className=\"p-t-20 p-r-20 p-b-10 bottom-text\">\n                                    {`Source: ${utility.toSentenceCase(props.state?.leadDetails?.channel || '')}`}\n                                </div>\n                            </Column>\n                        </Row>\n                    </>\n                ) : (\n                    <div className=\"selected-item \">\n                        <div className=\"p-l-20 p-t-20 p-r-20\">\n                            {\" \"}\n                            {props.state?.leadDetails.description}\n                        </div>\n                        {props.state?.uniqueContact && props.state?.uniqueContact.length > 0 ? (\n                            <div className=\"p-l-20 p-t-20 p-r-20\">Contact :</div>\n                        ) : (\n                            \"\"\n                        )}\n                        {props.state?.uniqueContact && props.state?.uniqueContact.length > 0\n                            ? props.state?.uniqueContact.map((data) => (\n                                <div className=\"p-l-20 \">\n                                    <a href={`tel:${data}`}>{data}</a>\n                                </div>\n                            ))\n                            : \"\"}\n                        <Row className=\"card-timestamp\">\n                            <Column>\n                                <div className=\"p-l-20 p-t-20 p-r-20 p-b-10 bottom-text\">\n                                    {props.state?.leadDetails?.comments?.length > 0 && props.state?.leadDetails.comments.map((comment, index) =>\n                                        comment.type === voteTypeConstants.DOWN_VOTE &&\n                                        <Typography className=\"card-desc pt-1\"\n                                                    variant=\"body2\">\n                                                <span\n                                                    className=\"p-t-20 bottom-text\">{moment(comment.addedOn).fromNow()}</span> {\" \"}<span\n                                            className=\"fc-black\">{comment.description}</span>\n                                        </Typography>\n                                    ) || moment(props.state?.leadDetails?.channelCreatedOn || '').fromNow()}\n                                </div>\n                            </Column>\n                            {props.state?.leadDetails?.comments?.length < 1 && <Column>\n                                <div className=\"p-l-20 p-t-20 p-r-20 p-b-10 bottom-text\">\n                                    {`Source: ${utility.toSentenceCase(props.state?.leadDetails?.channel || '')}`}\n                                </div>\n                            </Column>}\n                        </Row>\n                    </div>\n                )}\n            {props.state?.leadDetails?.comments?.length > 0 && <Row>\n                <div className=\"p-l-20 bottom-text\" style={{textAlign: 'end'}}>\n                    {`Source: ${utility.toSentenceCase(props.state?.leadDetails?.channel || '')}`}\n                </div>\n            </Row>}\n\n            <Row className=\"card-timestamp p-t-20\">\n                <Row className=\"card-vote-buttons\" style={{cursor: \"pointer\"}}>\n            <span\n                className=\" working-text\"\n                onClick={() => {\n                    props.sendUpVoteRequest(props.state?.leadDetails._id, \"\");\n                }}\n            >\n              <img\n                  style={{width: \"20px\", paddingRight: \"1px\"}}\n                  src=\"/images/Working.svg\"\n                  alt={'image'}/>\n              Working:{props.state?.leadDetails.upVoteCount}\n            </span>\n                    &nbsp;\n                    <span\n                        className=\"  not-working-text\"\n                        style={{cursor: \"pointer\"}}\n                        onClick={() => {\n                            props.handleNotWorkingPopoverOpen();\n                            // props.incrementDownVote(props.state?.leadDetails._id);\n                            // props.sendDownVoteRequest(props.state?.leadDetails._id, \"\");\n                        }}\n                    >\n              <img\n                  style={{width: \"20px\", paddingRight: \"1px\"}}\n                  src=\"/images/NotWorking.svg\"\n              ></img>\n              Not working:{props.state?.leadDetails.downVoteCount}\n            </span>\n                </Row>\n                &nbsp;\n                <Column className=\"card-footer-info\">\n                    <Row>\n                        <FacebookShareButton\n                            style={{paddingRight: \"3px\"}}\n                            url={process.env.REACT_APP_WEBAPP_URL}\n                            quote={`${props.state?.leadDetails.description} Found at`}\n                        >\n                            <FacebookIcon size={20} round={true}></FacebookIcon>\n                        </FacebookShareButton>\n                        <WhatsappShareButton\n                            style={{paddingRight: \"3px\"}}\n                            url={process.env.REACT_APP_WEBAPP_URL}\n                            title={`${props.state?.leadDetails.description} Found at`}\n                        >\n                            <WhatsappIcon size={20} round={true}></WhatsappIcon>\n                        </WhatsappShareButton>\n                        <TwitterShareButton\n                            url={process.env.REACT_APP_WEBAPP_URL}\n                            title={`${props.state?.leadDetails.description} Found at`}\n                        >\n                            <TwitterIcon size={20} round={true}/>\n                        </TwitterShareButton>\n                    </Row>\n                </Column>\n            </Row>\n        </div>\n\n        {props.state.isShowNotWorkingPopup && <NotWorkingDialog state={props.state}\n                                                                handlePopoverClose={props.handleNotWorkingPopoverClose}\n                                                                sendDownVoteRequest={props.sendDownVoteRequest}\n                                                                incrementDownVote={(id) => console.log(id)}\n        />}\n\n    </div>)\n\n}\nexport default LeadDetailsComponent","import React from 'react';\nimport BaseComponent from \"../baseComponent\";\nimport LeadDetailsComponent from \"./leadDetailsComponent\";\nimport {downVote, getCardDetails, upVote} from \"../../services/columns\";\n\n\nclass LeadDetails extends BaseComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            leadDetails: '',\n            uniqueContact: [],\n            isShowNotWorkingPopup: false,\n        }\n    }\n\n    async componentDidMount() {\n        let pathArray = window.location.pathname.split('/')\n        if (pathArray.length === 3)\n            await this.getLeadDetails(pathArray[pathArray.length - 1]);\n    }\n\n    getLeadDetails = async (id) => {\n        try {\n            let response = await getCardDetails({id})\n            if (!response || !response.responseData || Object.keys(response.responseData).length < 1)\n                return;\n            let uniqueContact = await this.getUniqueContact(response.responseData)\n            this.setState({uniqueContact, leadDetails: response.responseData})\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    getUniqueContact = async (data) => {\n        if (!data && !data.phoneNumber.length) {\n            return []\n        }\n        let uniqueContact = []\n        data.phoneNumber.map((item) => {\n            item = item.trim()\n            if (!uniqueContact.includes(item) && item.length >= 10) uniqueContact.push(item)\n        })\n        return uniqueContact;\n    }\n\n    sendUpVoteRequest = async (id, desription) => {\n        let data = `${this.state?.leadDetails?._id || ''}`\n        try {\n            let response = await upVote(data, desription)\n            if (!response || !response.responseData || Object.keys(response.responseData).length < 1)\n                return;\n            this.setState({leadDetails: response.responseData})\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    sendDownVoteRequest = async (id = '', desription) => {\n        let data = `${this.state?.leadDetails?._id || ''}`\n        try {\n            let response = await downVote(data, desription)\n            if (!response || !response.responseData || Object.keys(response.responseData).length < 1)\n                return;\n            this.setState({leadDetails: response.responseData})\n\n        } catch (error) {\n            console.log(error)\n        }\n        this.handleNotWorkingPopoverClose();\n    }\n\n    handleNotWorkingPopoverOpen = () => {\n        this.setState({isShowNotWorkingPopup: true})\n    }\n    handleNotWorkingPopoverClose = () => {\n        this.setState({isShowNotWorkingPopup: false})\n    }\n\n\n    render() {\n        return (<>\n            <LeadDetailsComponent state={this.state}\n                                  handleNotWorkingPopoverOpen={this.handleNotWorkingPopoverOpen}\n                                  sendUpVoteRequest={this.sendUpVoteRequest}\n                                  sendDownVoteRequest={this.sendDownVoteRequest}\n                                  handleNotWorkingPopoverClose={this.handleNotWorkingPopoverClose}\n            />\n        </>)\n    }\n\n}\n\nexport default LeadDetails;\n\n","import React from \"react\";\nimport BaseComponent from '../../baseComponent'\nimport StateComponent from './selectStates'\nimport LeadsComponent from '../leads'\nimport Category from '../select-category';\nimport {getTags} from \"../../../services/columns\"\nimport {history} from \"../../../managers/history\";\nimport Header from \"../header\";\nimport {genericConstants} from \"../../../constants\";\nimport Footer from '../../columns/footer'\nimport LeadDetails from \"../../leadDetails\";\n\nclass Coloumn extends BaseComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedComponent: this.getSelectedComponent(),\n            selectedCategory: this.getSelectedCategory(),\n            selectedState: this.getSelectedState(),\n            countryStateList: [],\n            categoryList: [],\n            responseByLocation: {},\n            allLocations: [],\n            responseData: [],\n            originalResponseData: [],\n            isStateSelected: false\n        }\n    }\n\n    getSelectedComponent = () => {\n        let pathArray = window.location.pathname.split('/')\n        pathArray = pathArray.filter(item => !!item)\n        switch (pathArray.length) {\n            case 0:\n                return genericConstants.WEB_COMPONENT_TYPE.STATE;\n            case 1:\n                return genericConstants.WEB_COMPONENT_TYPE.CATEGORY;\n            case 2:\n                return genericConstants.WEB_COMPONENT_TYPE.CARDS;\n        }\n        return genericConstants.WEB_COMPONENT_TYPE.STATE;\n    }\n\n    getSelectedCategory = () => {\n        let pathArray = window.location.pathname.split('/')\n        pathArray = pathArray.filter(item => !!item)\n        return pathArray.length > 1 ? pathArray[1] : ''\n    }\n\n    getSelectedState = () => {\n        let pathArray = window.location.pathname.split('/')\n        pathArray = pathArray.filter(item => !!item)\n        return pathArray.length > 0 ? pathArray[0] : 'All States'\n    }\n\n    componentDidMount() {\n        this.getStates()\n    }\n\n    getStates = async () => {\n        try {\n            const response = await getTags()\n            if (!response || !response.responseData || !Array.isArray(response.responseData)) {\n\n                return;\n            }\n            const statesArray = await response.responseData.filter((obj) => obj.type === \"STATE\");\n            const categoryArray = await response.responseData.filter((obj) => obj.type === \"CATEGORY\");\n            this.setState({\n                countryStateList: statesArray,\n                allLocations: statesArray,\n                categoryList: categoryArray\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    handleChangeForCountryState = (event, selectedCountryState) => {\n        if (event && event.target && !event.target.value && document.getElementById(\"AllStates\"))\n            document.getElementById(\"AllStates\").blur();\n\n        let responseData = selectedCountryState ? this.state.responseByLocation[selectedCountryState] : this.state.originalResponseData\n        if (!responseData)\n            return\n        this.setState({responseData})\n    }\n\n    handleSearchLocationInput = (value) => {\n        let locations = this.state.allLocations;\n        if (value.length)\n            locations = locations.filter(item => item.name.toLowerCase().includes(value.toLowerCase()))\n        this.setState({countryStateList: locations})\n    }\n\n    toggleState = (key, value) => {\n        this.setState({[key]: value})\n        console.log(\"login===123\")\n    }\n\n    onSelectLocation = (value) => {\n        this.setState({\n            isStateSelected: true,\n            selectedState: value,\n            selectedComponent: genericConstants.WEB_COMPONENT_TYPE.CATEGORY\n        })\n        history.push({\n            pathname: `/${value}`,\n            state: {name: value}\n        })\n    }\n\n    MobileComponent = () => {\n        switch (this.state.selectedComponent) {\n            case genericConstants.WEB_COMPONENT_TYPE.STATE:\n                return (\n                    <StateComponent\n                        state={this.state}\n                        getStates={this.getStates}\n                        countryStateList={this.state.countryStateList}\n                        handleChangeForCountryState={this.handleChangeForCountryState}\n                        handleSearchLocationInput={this.handleSearchLocationInput}\n                        onSelectLocation={this.onSelectLocation}\n                    />)\n            case genericConstants.WEB_COMPONENT_TYPE.CATEGORY:\n                return (\n                    <Category\n                        toggleState={this.toggleState}\n                        selectedState={this.state.selectedState}\n                        categoryList={this.state.categoryList}\n                    />)\n            case genericConstants.WEB_COMPONENT_TYPE.CARDS:\n                return (\n                    <LeadsComponent\n                        toggleState={this.toggleState}\n                        selectedState={this.state.selectedState}\n                        selectedCategory={this.state.selectedCategory}\n                    />)\n        }\n    }\n\n    render() {\n        let pathArray = window.location.pathname.split('/')\n\n            return (\n            <div className=\"mobile-view\">\n                <Header isInfo={this.state.selectedComponent === genericConstants.WEB_COMPONENT_TYPE.CARDS}/>\n                {pathArray.length ===3 && pathArray[pathArray.length-2] === 'details'?\n                    <LeadDetails/>\n                    :this.MobileComponent()}\n                <Footer></Footer>\n            </div>\n        );\n    }\n}\n\nexport default Coloumn;\n","import React from 'react'\nimport {Row, Column} from \"simple-flexbox\";\nimport Dialog from '@material-ui/core/Dialog';\n\n\nfunction DisclaimerDialog (props) {\n    return(\n         <Dialog\n        open={props.isDisclaimer}\n        onClose={props.onClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n    >\n        <div className=\"disclaimer\">\n            <Row className=\"disclaimer-row\">Covidindiahelp.info is a crowdsourced covid resources website. We try to verify covid help leads’ information to the best of our ability, but we cannot verify every entry on the website.</Row>\n\n            <Row  className=\"disclaimer-row\">Contacting the leads and performing primary verification before moving forward with the information is the user's responsibility. We strongly recommend that you verify the lead information on your end before following up on them.</Row>\n\n            <Row  className=\"disclaimer-row\">We should not be held responsible for any fraudulent information or monetary exchange. The users on the website are responsible for their actions with the data we make public.\n            By clicking on 'accept', you are affirming to follow our privacy policy.</Row>\n\n            <Row style={{justifyContent:\"flex-end\"}}><button className=\"disclaimer-button\" onClick={props.onClose}>Accept</button></Row>\n        </div>\n     </Dialog>\n    );\n}\nexport default DisclaimerDialog","import React from \"react\";\nimport BaseComponent from '../baseComponent'\nimport Disclaimer from './disclaimer'\nimport {sessionManager} from '../../managers/sessionManager';\nimport {cookiesConstants} from \"../../constants\";\n\n\n\nclass DisclaimerComponent extends BaseComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isDisclaimer:false\n        }\n    }\n\n    async componentDidMount() {\n        if(!sessionManager.getDataFromCookies(cookiesConstants.DISCLAIMER)){\n        this.setState({isDisclaimer:true})\n        sessionManager.setDataInCookies(cookiesConstants.DISCLAIMER,true,)\n        }\n\n    }\n    onClose=()=>{\n        this.setState({isDisclaimer:false})\n    }\n \n  \n    render() {\n        return (\n            <Disclaimer isDisclaimer={this.state.isDisclaimer}\n            onClose={this.onClose}\n            />\n        );\n    }\n}\n\nexport default DisclaimerComponent;","import React, {useLayoutEffect, useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Coloumn} from \".\";\nimport MobileView from '../modules/mobile-view/select-states'\nimport Disclaimer from './disclaimer'\n\nconst useStyles = makeStyles({\n    root: {\n        marginLeft: 0,\n        marginRight: 0,\n        position: \"relative\"\n    },\n    navbar: {\n        backgroundColor: '#333333',\n        Select: {\n            '&:before': {\n                borderColor: 'white',\n            },\n            '&:after': {\n                borderColor: 'white',\n            }\n        }\n    },\n    mx10: {\n        marginLeft: 10,\n        marginRight: 10\n    },\n    dropdown: {\n        '.& MuiSelect-outlined.MuiSelect-outlined': {\n            paddingRight: '82px'\n        }\n    },\n});\n\nfunction useWindowSize() {\n    const [size, setSize] = useState([0, 0]);\n    useLayoutEffect(() => {\n        function updateSize() {\n            setSize([window.innerWidth, window.innerHeight]);\n        }\n\n        window.addEventListener('resize', updateSize);\n        updateSize();\n        return () => window.removeEventListener('resize', updateSize);\n    }, []);\n    return size;\n}\n\n\nfunction Main() {\n    const [width, height] = useWindowSize();\n    const classes = useStyles();\n    return (\n        <div style={{width: \"100% !important\"}} className={classes.root}>\n            <Disclaimer></Disclaimer>\n            <MobileView className=\"mobile-view\"/>\n            {/* {width > 480 ? <Coloumn className=\"desktop-view\"/> : <MobileView className=\"mobile-view\"/>} */}\n        </div>\n    );\n}\n\nexport default Main;\n","import React from 'react';\nimport {Router, Route} from 'react-router-dom';\nimport {Redirect, Switch} from \"react-router\";\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport getMuiTheme from 'material-ui/styles/getMuiTheme';\nimport {history} from \"./managers/history\";\nimport BaseComponent from \"./modules/baseComponent\";\nimport Main from './modules/mainComponent';\nimport AddInfo from './modules/add-info/index';\nimport \"firebase/messaging\";\nimport \"firebase/messaging\";\nimport firebase from \"firebase\";\nimport {firebaseConfig} from \"./constants\";\nimport LeadDetails from \"./modules/leadDetails\";\n\nclass Routes extends BaseComponent {\n    componentDidMount() {\n        firebase.initializeApp(firebaseConfig);\n    }\n\n    render() {\n        return (\n            <MuiThemeProvider muiTheme={getMuiTheme()}>\n                <Router history={history}>\n                    <Switch>\n                        <Route exact path={'/'} component={Main}/>\n                        <Route exact path={'/:state'} component={Main}/>\n                        <Route exact path={'/:state/:category'} component={Main}/>\n                        <Route exact path=\"/details/:id\" component={Main}/>\n                        <Route exact path=\"/about\" component={AddInfo}/>\n                        <Redirect exact from='*' to=\"/\"/>\n                    </Switch>\n                </Router>\n            </MuiThemeProvider>);\n    }\n}\n\nexport default Routes\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker\n        .register(\"./firebase-messaging-sw.js\")\n        .then(function (registration) {\n          console.log(\"Registration successful, scope is:\", registration.scope);\n        })\n        .catch(function (err) {\n          console.log(\"Service worker registration failed, error:\", err);\n        });\n  }\n  // if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n  //   // The URL constructor is available in all browsers that support SW.\n  //   const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n  //   if (publicUrl.origin !== window.location.origin) {\n  //     // Our service worker won't work if PUBLIC_URL is on a different origin\n  //     // from what our page is served on. This might happen if a CDN is used to\n  //     // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n  //     return;\n  //   }\n  //\n  //   window.addEventListener('load', () => {\n  //     const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  //\n  //     if (isLocalhost) {\n  //       // This is running on localhost. Let's check if a service worker still exists or not.\n  //       checkValidServiceWorker(swUrl, config);\n  //\n  //       // Add some additional logging to localhost, pointing developers to the\n  //       // service worker/PWA documentation.\n  //       navigator.serviceWorker.ready.then(() => {\n  //         console.log(\n  //           'This web app is being served cache-first by a service ' +\n  //             'worker. To learn more, visit https://bit.ly/CRA-PWA'\n  //         );\n  //       });\n  //     } else {\n  //       // Is not localhost. Just register service worker\n  //       registerValidSW(swUrl, config);\n  //     }\n  //   });\n  // }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Routes from \"./routes\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./assets/styles/custom.css\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Routes component={Routes} />\n    </BrowserRouter>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}